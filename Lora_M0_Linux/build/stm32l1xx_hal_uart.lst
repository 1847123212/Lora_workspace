ARM GAS  /tmp/ccCgvysJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32l1xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	UART_EndTxTransfer:
  25              	.LFB116:
  26              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c"
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @file    stm32l1xx_hal_uart.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   [..]
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Configure these UART pins (TX as alternate function pull-up, RX as alternate func
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
ARM GAS  /tmp/ccCgvysJ.s 			page 2


  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     ##### Callback registration #####
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     ==================================
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     [..]
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     [..]
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     and a pointer to the user callback function.
  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 3


  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     [..]
  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     weak (surcharged) function.
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     and the Callback ID.
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     [..]
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     [..]
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     [..]
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     not defined, the callback registration feature is not available
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         Three operation modes are available within this driver :
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      *** Polling mode IO operation ***
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      =================================
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      ===================================
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
ARM GAS  /tmp/ccCgvysJ.s 			page 4


 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      *** DMA mode IO operation ***
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      ==============================
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      =============================================
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   @endverbatim
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      [..]
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     +-------------------------------------------------------------+
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     +-------------------------------------------------------------+
ARM GAS  /tmp/ccCgvysJ.s 			page 5


 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ******************************************************************************
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @attention
 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * All rights reserved.</center></h2>
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *
 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ******************************************************************************
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #include "stm32l1xx_hal.h"
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @addtogroup STM32L1xx_HAL_Driver
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @defgroup UART UART
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief HAL UART module driver
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @}
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccCgvysJ.s 			page 6


 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @}
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** @verbatim
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****  ===============================================================================
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****  ===============================================================================
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     [..]
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     in asynchronous mode.
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (++) Baud Rate
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (++) Word Length
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (++) Stop Bit
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (++) Hardware flow control
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (++) Over Sampling Method
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     [..]
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual (RM0038)).
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** @endverbatim
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart == NULL)
 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccCgvysJ.s 			page 7


 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_ERROR;
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2 and USART3 */
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init the low level hardware */
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the peripheral */
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_SetConfig(huart);
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the peripheral */
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Initialize the UART state */
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccCgvysJ.s 			page 8


 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart == NULL)
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_ERROR;
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init the low level hardware */
 415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
 417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the peripheral */
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_SetConfig(huart);
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
ARM GAS  /tmp/ccCgvysJ.s 			page 9


 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the peripheral */
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Initialize the UART state*/
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart == NULL)
 465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_ERROR;
 467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the LIN UART instance */
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
ARM GAS  /tmp/ccCgvysJ.s 			page 10


 489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init the low level hardware */
 491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
 493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the peripheral */
 501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_SetConfig(huart);
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the peripheral */
 520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Initialize the UART state*/
 523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Address USART address
 536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
 541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  /tmp/ccCgvysJ.s 			page 11


 546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_ERROR;
 548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_MULTIPROCESSOR_INSTANCE(huart->Instance));
 552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init the low level hardware */
 573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
 575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the peripheral */
 583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_SetConfig(huart);
 587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Set the USART address node */
 595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the peripheral */
ARM GAS  /tmp/ccCgvysJ.s 			page 12


 603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Initialize the UART state */
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
 611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
 618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart == NULL)
 623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_ERROR;
 625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
 628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the Peripheral */
 633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DeInit the low level hardware */
 641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
 643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DeInit the low level hardware */
 644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Unlock */
 652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
 655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  UART MSP Init.
 659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccCgvysJ.s 			page 13


 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
 662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
 667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
 670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
 677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
 682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
 685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Register a User UART Callback
 690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart uart handle
 692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
 706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (pCallback == NULL)
 712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Update the error code */
 714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccCgvysJ.s 			page 14


 717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process locked */
 719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
 720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     switch (CallbackID)
 724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       default :
 766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Update the error code */
 767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Return error status */
 770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         status =  HAL_ERROR;
 771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
ARM GAS  /tmp/ccCgvysJ.s 			page 15


 774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     switch (CallbackID)
 777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       default :
 787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Update the error code */
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Return error status */
 791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         status =  HAL_ERROR;
 792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
 796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Update the error code */
 798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Return error status */
 801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     status =  HAL_ERROR;
 802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Release Lock */
 805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return status;
 808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart uart handle
 814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
 827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccCgvysJ.s 			page 16


 831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process locked */
 833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     switch (CallbackID)
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       default :
 880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Update the error code */
 881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Return error status */
 884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         status =  HAL_ERROR;
 885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
ARM GAS  /tmp/ccCgvysJ.s 			page 17


 888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     switch (CallbackID)
 891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       default :
 901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Update the error code */
 902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Return error status */
 905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         status =  HAL_ERROR;
 906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         break;
 907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
 910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Update the error code */
 912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Return error status */
 915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     status =  HAL_ERROR;
 916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Release Lock */
 919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return status;
 922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
 926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @}
 927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
 928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
 931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *
 932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** @verbatim
 933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****  ===============================================================================
 934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****                       ##### IO operation functions #####
 935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****  ===============================================================================
 936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     and Half duplex data transfers.
 938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) There are two modes of transfer:
 940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            after finishing transfer.
 943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            or DMA, these API's return the HAL status.
ARM GAS  /tmp/ccCgvysJ.s 			page 18


 945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            The end of the data processing will be indicated through the
 946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            using DMA mode.
 948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
 950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) Blocking mode API's are :
 953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_Receive()
 955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_Abort()
 977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         Errors are handled as follows :
 990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
 996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
 998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 19


1002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** @endverbatim
1003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
1004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Size Amount of data to be sent
1012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Timeout Timeout duration
1013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint16_t *tmp;
1018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t tickstart = 0U;
1019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return  HAL_ERROR;
1026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Locked */
1029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_LOCK(huart);
1030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     tickstart = HAL_GetTick();
1036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferSize = Size;
1038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = Size;
1039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->TxXferCount--;
1042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
1043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           return HAL_TIMEOUT;
1047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
1050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           pData += 2U;
1053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         else
1055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           pData += 1U;
1057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
ARM GAS  /tmp/ccCgvysJ.s 			page 20


1059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       else
1060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           return HAL_TIMEOUT;
1064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
1066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return HAL_TIMEOUT;
1072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Unlocked */
1078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_OK;
1081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
1083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_BUSY;
1085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Size Amount of data to be received
1094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Timeout Timeout duration
1095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint16_t *tmp;
1100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t tickstart = 0U;
1101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return  HAL_ERROR;
1108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Locked */
1111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_LOCK(huart);
1112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 21


1116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     tickstart = HAL_GetTick();
1118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferSize = Size;
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = Size;
1121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Check the remain data to be received */
1123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->RxXferCount--;
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
1127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
1129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           return HAL_TIMEOUT;
1131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
1136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           pData += 2U;
1137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         else
1139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
1141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           pData += 1U;
1142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       else
1146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
1148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           return HAL_TIMEOUT;
1150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
1152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         else
1156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Unlocked */
1167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_OK;
1170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
1172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccCgvysJ.s 			page 22


1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_BUSY;
1174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Size Amount of data to be sent
1183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return HAL_ERROR;
1193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Locked */
1196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_LOCK(huart);
1197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferSize = Size;
1200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = Size;
1201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Unlocked */
1206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
1210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_OK;
1212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
1214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_BUSY;
1216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Size Amount of data to be received
1225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  /tmp/ccCgvysJ.s 			page 23


1230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return HAL_ERROR;
1235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Locked */
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_LOCK(huart);
1239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferSize = Size;
1242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = Size;
1243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Unlocked */
1248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
1252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
1255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
1257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
1258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_OK;
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_BUSY;
1264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Size Amount of data to be sent
1273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t *tmp;
1278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return HAL_ERROR;
1285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 24


1287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Locked */
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_LOCK(huart);
1289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferSize = Size;
1292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = Size;
1293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set the DMA error callback */
1304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set the DMA abort callback */
1307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
1311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
1312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
1315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Unlocked */
1317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        in the UART CR3 register */
1321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_OK;
1324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
1326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_BUSY;
1328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  pData Pointer to data buffer
1336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Size Amount of data to be received
1337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t *tmp;
1343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 25


1344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return HAL_ERROR;
1350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Locked */
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_LOCK(huart);
1354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferSize = Size;
1357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set the DMA error callback */
1368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set the DMA abort callback */
1371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the DMA channel */
1374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
1375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
1376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Process Unlocked */
1381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     in the UART CR3 register */
1391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_OK;
1394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
1396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_BUSY;
1398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 26


1401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
1413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Unlocked */
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
1447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
1448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
ARM GAS  /tmp/ccCgvysJ.s 			page 27


1458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Unlocked */
1469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      */
1488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
ARM GAS  /tmp/ccCgvysJ.s 			page 28


1515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
1523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This procedure performs following operations :
1525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Set handle State to READY
1529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** */
1532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           /* Set error code to DMA */
1555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           return HAL_TIMEOUT;
1558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
ARM GAS  /tmp/ccCgvysJ.s 			page 29


1572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           /* Set error code to DMA */
1580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           return HAL_TIMEOUT;
1583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Reset ErrorCode */
1593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This procedure performs following operations :
1607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Set handle State to READY
1611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** */
1614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
ARM GAS  /tmp/ccCgvysJ.s 			page 30


1629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           /* Set error code to DMA */
1636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           return HAL_TIMEOUT;
1639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
1656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This procedure performs following operations :
1658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Set handle State to READY
1662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** */
1665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  /tmp/ccCgvysJ.s 			page 31


1686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
1687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           /* Set error code to DMA */
1688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           return HAL_TIMEOUT;
1691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
1692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Reset Rx transfer counter */
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
1708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This procedure performs following operations :
1710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Set handle State to READY
1714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** */
1719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      before any call to DMA Abort functions */
1729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        Otherwise, set it to NULL */
1734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     else
1739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
ARM GAS  /tmp/ccCgvysJ.s 			page 32


1743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        Otherwise, set it to NULL */
1748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     else
1753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Abort DMA TX */
1771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       else
1776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         AbortCplt = 0x00U;
1778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Abort DMA RX */
1794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         AbortCplt = 0x01U;
1798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       else
ARM GAS  /tmp/ccCgvysJ.s 			page 33


1800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         AbortCplt = 0x00U;
1802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (AbortCplt == 0x01U)
1808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Reset ErrorCode */
1814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Call registered Abort complete callback */
1823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
1825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
1836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This procedure performs following operations :
1838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Set handle State to READY
1842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** */
1847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 34


1857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Abort DMA TX */
1865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     else
1872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Reset Tx transfer counter */
1874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
1884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
1890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Reset Tx transfer counter */
1892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
1902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
1913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
ARM GAS  /tmp/ccCgvysJ.s 			page 35


1914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         This procedure performs following operations :
1915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - Set handle State to READY
1919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
1923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** */
1924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Abort DMA RX */
1943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
1945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
1948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     else
1950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
1951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Reset Rx transfer counter */
1952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
1953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
1960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
1961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
1962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
1963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
1966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
1968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
1969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Reset Rx transfer counter */
1970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
ARM GAS  /tmp/ccCgvysJ.s 			page 36


1971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
1978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
1979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
1980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
1981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
1984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
1986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
1987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
1988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
1989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
1993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
1994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
1996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
2000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* If no error occurs */
2003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
2004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (errorflags == RESET)
2005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       UART_Receive_IT(huart);
2010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return;
2011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* If some errors occur */
2015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
2016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
2019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
ARM GAS  /tmp/ccCgvysJ.s 			page 37


2028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         UART_Receive_IT(huart);
2048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****          consider error as blocking */
2052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
2053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
2054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
2063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           {
2068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             {
2073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             }
2076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           }
2077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           else
2078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           {
2079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             /* Call user error callback */
2080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             /*Call registered error callback*/
2082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             huart->ErrorCallback(huart);
2083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             /*Call legacy weak error callback*/
ARM GAS  /tmp/ccCgvysJ.s 			page 38


2085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           }
2088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
2089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         else
2090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
2091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           /* Call user error callback */
2092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           /*Call registered error callback*/
2094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           huart->ErrorCallback(huart);
2095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           /*Call legacy weak error callback*/
2097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
2100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       else
2102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            Error is notified to user through user error callback */
2105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /*Call registered error callback*/
2107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->ErrorCallback(huart);
2108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /*Call legacy weak error callback*/
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return;
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   } /* End if some error occurs */
2118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
2121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_Transmit_IT(huart);
2123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return;
2124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
2128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return;
2131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
ARM GAS  /tmp/ccCgvysJ.s 			page 39


2142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
2144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
2147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
2159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
2162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
2174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
2177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
2189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
2192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  UART error callbacks.
2196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccCgvysJ.s 			page 40


2199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
2204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
2207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
2218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
2222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
2227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
2233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
2237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
2242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UNUSED(huart);
2248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    */
2252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @}
ARM GAS  /tmp/ccCgvysJ.s 			page 41


2256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *  @brief   UART control functions
2260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *
2261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** @verbatim
2262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ==============================================================================
2263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ==============================================================================
2265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   [..]
2266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** @endverbatim
2274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
2275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Transmits break characters.
2279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
2286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
2290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Send break characters */
2294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
2295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Unlocked */
2299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
2302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
ARM GAS  /tmp/ccCgvysJ.s 			page 42


2313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
2316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
2317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
2322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Unlocked */
2326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
2329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
2340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
2344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
2349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Unlocked */
2353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
2356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
2369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /tmp/ccCgvysJ.s 			page 43


2370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Clear TE and RE bits */
2377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
2381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Write to USART CR1 */
2383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Unlocked */
2388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
2391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
2404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_LOCK(huart);
2405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Clear TE and RE bits */
2412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
2416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Write to USART CR1 */
2418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Unlocked */
2423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
2426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
ARM GAS  /tmp/ccCgvysJ.s 			page 44


2427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @}
2430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *
2435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** @verbatim
2436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ==============================================================================
2437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   ==============================================================================
2439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****  [..]
2440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    process
2443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** @endverbatim
2447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
2448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Returns the UART state.
2452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL state
2455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
2459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   temp1 = huart->gState;
2460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   temp2 = huart->RxState;
2461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Return the UART error code
2467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified UART.
2469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval UART Error Code
2470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return huart->ErrorCode;
2474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @}
2478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @}
2482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 45


2484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @{
2486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
2491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval none
2492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Init the UART Callback settings */
2497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DMA Normal mode*/
2519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        in the UART CR3 register */
2525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DMA Circular mode */
2532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
2533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /*Call registered Tx complete callback*/
2536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxCpltCallback(huart);
2537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
2539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccCgvysJ.s 			page 46


2541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
2546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
2557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
2565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DMA Normal mode*/
2573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
2582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****        in the UART CR3 register */
2583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call registered Rx complete callback*/
2590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxCpltCallback(huart);
2591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
2593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
ARM GAS  /tmp/ccCgvysJ.s 			page 47


2598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
2599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
2609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
2610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
2612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
2613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
2637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
2640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call registered error callback*/
2646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCallback(huart);
2647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call legacy weak error callback*/
2649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
ARM GAS  /tmp/ccCgvysJ.s 			page 48


2655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Tickstart Tick start value
2660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  Timeout Timeout duration
2661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Wait until flag is set */
2666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /* Check for the Timeout */
2669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
2670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
2672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         /* Process Unlocked */
2681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         return HAL_TIMEOUT;
2684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
2688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
2693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
  27              		.loc 1 2696 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 2698 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 D368     		ldr	r3, [r2, #12]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 D360     		str	r3, [r2, #12]
2699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
ARM GAS  /tmp/ccCgvysJ.s 			page 49


2701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 2701 0
  39 000a 2023     		movs	r3, #32
  40 000c 80F83930 		strb	r3, [r0, #57]
  41 0010 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE116:
  45 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  46              		.align	2
  47              		.thumb
  48              		.thumb_func
  50              	UART_EndRxTransfer:
  51              	.LFB117:
2702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart UART handle.
2707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
  52              		.loc 1 2710 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
2711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  58              		.loc 1 2712 0
  59 0000 0268     		ldr	r2, [r0]
  60 0002 D368     		ldr	r3, [r2, #12]
  61 0004 23F49073 		bic	r3, r3, #288
  62 0008 D360     		str	r3, [r2, #12]
2713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  63              		.loc 1 2713 0
  64 000a 0268     		ldr	r2, [r0]
  65 000c 5369     		ldr	r3, [r2, #20]
  66 000e 23F00103 		bic	r3, r3, #1
  67 0012 5361     		str	r3, [r2, #20]
2714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  68              		.loc 1 2716 0
  69 0014 2023     		movs	r3, #32
  70 0016 80F83A30 		strb	r3, [r0, #58]
  71 001a 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE117:
  75              		.section	.text.UART_Transmit_IT,"ax",%progbits
  76              		.align	2
  77              		.thumb
  78              		.thumb_func
  80              	UART_Transmit_IT:
  81              	.LFB123:
2717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
ARM GAS  /tmp/ccCgvysJ.s 			page 50


2718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call registered error callback*/
2734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCallback(huart);
2735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call legacy weak error callback*/
2737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->hdmarx != NULL)
2758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
2760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return;
2762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Reset ErrorCode */
2770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccCgvysJ.s 			page 51


2775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call user Abort complete callback */
2777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call registered Abort complete callback */
2779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->hdmatx != NULL)
2803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
2805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return;
2807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Reset ErrorCode */
2815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call user Abort complete callback */
2822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call registered Abort complete callback */
2824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
ARM GAS  /tmp/ccCgvysJ.s 			page 52


2832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call user Abort complete callback */
2850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
2852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
2853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
2855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
2867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call user Abort complete callback */
2878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
2880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
2881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
2883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
ARM GAS  /tmp/ccCgvysJ.s 			page 53


2889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
  82              		.loc 1 2894 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL2:
2895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint16_t *tmp;
2896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  88              		.loc 1 2898 0
  89 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  90 0004 DBB2     		uxtb	r3, r3
  91 0006 212B     		cmp	r3, #33
  92 0008 2BD1     		bne	.L8
2899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
  93              		.loc 1 2900 0
  94 000a 8368     		ldr	r3, [r0, #8]
  95 000c B3F5805F 		cmp	r3, #4096
  96 0010 0FD1     		bne	.L5
2901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
  97              		.loc 1 2902 0
  98 0012 036A     		ldr	r3, [r0, #32]
  99              	.LVL3:
2903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 100              		.loc 1 2903 0
 101 0014 0268     		ldr	r2, [r0]
 102 0016 1B88     		ldrh	r3, [r3]
 103              	.LVL4:
 104 0018 C3F30803 		ubfx	r3, r3, #0, #9
 105 001c 5360     		str	r3, [r2, #4]
 106              	.LVL5:
2904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 107              		.loc 1 2904 0
 108 001e 0369     		ldr	r3, [r0, #16]
 109 0020 1BB9     		cbnz	r3, .L6
2905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 110              		.loc 1 2906 0
 111 0022 036A     		ldr	r3, [r0, #32]
 112 0024 0233     		adds	r3, r3, #2
 113 0026 0362     		str	r3, [r0, #32]
 114 0028 09E0     		b	.L7
 115              	.L6:
2907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       else
2909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 116              		.loc 1 2910 0
ARM GAS  /tmp/ccCgvysJ.s 			page 54


 117 002a 036A     		ldr	r3, [r0, #32]
 118 002c 0133     		adds	r3, r3, #1
 119 002e 0362     		str	r3, [r0, #32]
 120 0030 05E0     		b	.L7
 121              	.L5:
2911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     else
2914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 122              		.loc 1 2915 0
 123 0032 0268     		ldr	r2, [r0]
 124 0034 036A     		ldr	r3, [r0, #32]
 125 0036 591C     		adds	r1, r3, #1
 126 0038 0162     		str	r1, [r0, #32]
 127 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 128 003c 5360     		str	r3, [r2, #4]
 129              	.L7:
2916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 130              		.loc 1 2918 0
 131 003e C38C     		ldrh	r3, [r0, #38]
 132 0040 9BB2     		uxth	r3, r3
 133 0042 013B     		subs	r3, r3, #1
 134 0044 9BB2     		uxth	r3, r3
 135 0046 C384     		strh	r3, [r0, #38]	@ movhi
 136 0048 6BB9     		cbnz	r3, .L9
2919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 137              		.loc 1 2921 0
 138 004a 0268     		ldr	r2, [r0]
 139 004c D368     		ldr	r3, [r2, #12]
 140 004e 23F08003 		bic	r3, r3, #128
 141 0052 D360     		str	r3, [r2, #12]
2922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 142              		.loc 1 2924 0
 143 0054 0268     		ldr	r2, [r0]
 144 0056 D368     		ldr	r3, [r2, #12]
 145 0058 43F04003 		orr	r3, r3, #64
 146 005c D360     		str	r3, [r2, #12]
2925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_OK;
 147              		.loc 1 2926 0
 148 005e 0020     		movs	r0, #0
 149              	.LVL6:
 150 0060 7047     		bx	lr
 151              	.LVL7:
 152              	.L8:
2927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
2929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_BUSY;
 153              		.loc 1 2930 0
ARM GAS  /tmp/ccCgvysJ.s 			page 55


 154 0062 0220     		movs	r0, #2
 155              	.LVL8:
 156 0064 7047     		bx	lr
 157              	.LVL9:
 158              	.L9:
2926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 159              		.loc 1 2926 0
 160 0066 0020     		movs	r0, #0
 161              	.LVL10:
2931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
2932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 162              		.loc 1 2932 0
 163 0068 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE123:
 167 006a 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 168              		.align	2
 169              		.thumb
 170              		.thumb_func
 172              	UART_SetConfig:
 173              	.LFB126:
2933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
2944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxCpltCallback(huart);
2951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
2952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return HAL_OK;
2957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
2958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
2960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
2961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval HAL status
2964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
2965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
2967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint16_t *tmp;
2968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 56


2969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
2971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
2972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
2973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr;
2975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
2976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       else
2981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     else
2987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
2988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
2989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       else
2993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
2994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
2996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
2997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
2998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
2999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
3000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
3002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
3005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
3008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #else
3016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return HAL_OK;
3021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
3022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_OK;
3023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
3024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
3025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccCgvysJ.s 			page 57


3026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return HAL_BUSY;
3027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
3028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
3029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** /**
3031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   * @retval None
3035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   */
3036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** {
 174              		.loc 1 3037 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL11:
 179 0000 38B5     		push	{r3, r4, r5, lr}
 180              	.LCFI0:
 181              		.cfi_def_cfa_offset 16
 182              		.cfi_offset 3, -16
 183              		.cfi_offset 4, -12
 184              		.cfi_offset 5, -8
 185              		.cfi_offset 14, -4
 186 0002 0446     		mov	r4, r0
3038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t tmpreg;
3039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t pclk;
3040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
3042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      according to huart->Init.StopBits value */
3050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 187              		.loc 1 3050 0
 188 0004 0168     		ldr	r1, [r0]
 189 0006 0B69     		ldr	r3, [r1, #16]
 190 0008 23F44052 		bic	r2, r3, #12288
 191 000c C368     		ldr	r3, [r0, #12]
 192 000e 1343     		orrs	r3, r3, r2
 193 0010 0B61     		str	r3, [r1, #16]
3051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 194              		.loc 1 3059 0
 195 0012 8168     		ldr	r1, [r0, #8]
 196 0014 0369     		ldr	r3, [r0, #16]
ARM GAS  /tmp/ccCgvysJ.s 			page 58


 197 0016 1943     		orrs	r1, r1, r3
 198 0018 4369     		ldr	r3, [r0, #20]
 199 001a 1943     		orrs	r1, r1, r3
 200 001c C369     		ldr	r3, [r0, #28]
 201 001e 1943     		orrs	r1, r1, r3
 202              	.LVL12:
3060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 203              		.loc 1 3060 0
 204 0020 0068     		ldr	r0, [r0]
 205              	.LVL13:
 206 0022 C268     		ldr	r2, [r0, #12]
 207 0024 22F41643 		bic	r3, r2, #38400
 208 0028 23F00C03 		bic	r3, r3, #12
 209 002c 0B43     		orrs	r3, r3, r1
 210 002e C360     		str	r3, [r0, #12]
3061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****              tmpreg);
3063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 211              		.loc 1 3066 0
 212 0030 2168     		ldr	r1, [r4]
 213              	.LVL14:
 214 0032 4B69     		ldr	r3, [r1, #20]
 215 0034 23F44072 		bic	r2, r3, #768
 216 0038 A369     		ldr	r3, [r4, #24]
 217 003a 1343     		orrs	r3, r3, r2
 218 003c 4B61     		str	r3, [r1, #20]
3067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
3068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the Over Sampling */
3069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 219              		.loc 1 3069 0
 220 003e E369     		ldr	r3, [r4, #28]
 221 0040 B3F5004F 		cmp	r3, #32768
 222 0044 45D1     		bne	.L11
3070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
3071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /*------- UART-associated USART registers setting : BRR Configuration ------*/
3072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if((huart->Instance == USART1))
 223              		.loc 1 3072 0
 224 0046 2268     		ldr	r2, [r4]
 225 0048 444B     		ldr	r3, .L16
 226 004a 9A42     		cmp	r2, r3
 227 004c 20D1     		bne	.L12
3073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
3074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 228              		.loc 1 3074 0
 229 004e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 230              	.LVL15:
3075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 231              		.loc 1 3075 0
 232 0052 2568     		ldr	r5, [r4]
 233 0054 00EB8000 		add	r0, r0, r0, lsl #2
 234              	.LVL16:
 235 0058 00EB8000 		add	r0, r0, r0, lsl #2
 236 005c 6168     		ldr	r1, [r4, #4]
 237 005e 4900     		lsls	r1, r1, #1
ARM GAS  /tmp/ccCgvysJ.s 			page 59


 238 0060 B0FBF1F1 		udiv	r1, r0, r1
 239 0064 3E4B     		ldr	r3, .L16+4
 240 0066 A3FB0102 		umull	r0, r2, r3, r1
 241 006a 5009     		lsrs	r0, r2, #5
 242 006c 6422     		movs	r2, #100
 243 006e 02FB1012 		mls	r2, r2, r0, r1
 244 0072 D200     		lsls	r2, r2, #3
 245 0074 3232     		adds	r2, r2, #50
 246 0076 A3FB0223 		umull	r2, r3, r3, r2
 247 007a 5B09     		lsrs	r3, r3, #5
 248 007c 5A00     		lsls	r2, r3, #1
 249 007e 02F4F872 		and	r2, r2, #496
 250 0082 02EB0012 		add	r2, r2, r0, lsl #4
 251 0086 03F00703 		and	r3, r3, #7
 252 008a 1344     		add	r3, r3, r2
 253 008c AB60     		str	r3, [r5, #8]
 254 008e 38BD     		pop	{r3, r4, r5, pc}
 255              	.LVL17:
 256              	.L12:
3076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
3077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     else
3078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
3079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 257              		.loc 1 3079 0
 258 0090 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 259              	.LVL18:
3080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 260              		.loc 1 3080 0
 261 0094 2168     		ldr	r1, [r4]
 262 0096 00EB8000 		add	r0, r0, r0, lsl #2
 263              	.LVL19:
 264 009a 00EB8000 		add	r0, r0, r0, lsl #2
 265 009e 6368     		ldr	r3, [r4, #4]
 266 00a0 5B00     		lsls	r3, r3, #1
 267 00a2 B0FBF3F0 		udiv	r0, r0, r3
 268 00a6 2E4B     		ldr	r3, .L16+4
 269 00a8 A3FB0042 		umull	r4, r2, r3, r0
 270              	.LVL20:
 271 00ac 5409     		lsrs	r4, r2, #5
 272 00ae 6422     		movs	r2, #100
 273 00b0 02FB1402 		mls	r2, r2, r4, r0
 274 00b4 D200     		lsls	r2, r2, #3
 275 00b6 3232     		adds	r2, r2, #50
 276 00b8 A3FB0223 		umull	r2, r3, r3, r2
 277 00bc 5B09     		lsrs	r3, r3, #5
 278 00be 5A00     		lsls	r2, r3, #1
 279 00c0 02F4F872 		and	r2, r2, #496
 280 00c4 02EB0412 		add	r2, r2, r4, lsl #4
 281 00c8 03F00703 		and	r3, r3, #7
 282 00cc 1344     		add	r3, r3, r2
 283 00ce 8B60     		str	r3, [r1, #8]
 284 00d0 38BD     		pop	{r3, r4, r5, pc}
 285              	.LVL21:
 286              	.L11:
3081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
3082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
3083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   else
ARM GAS  /tmp/ccCgvysJ.s 			page 60


3084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
3085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     /*------- UART-associated USART registers setting : BRR Configuration ------*/
3086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     if((huart->Instance == USART1))
 287              		.loc 1 3086 0
 288 00d2 2268     		ldr	r2, [r4]
 289 00d4 214B     		ldr	r3, .L16
 290 00d6 9A42     		cmp	r2, r3
 291 00d8 1FD1     		bne	.L14
3087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
3088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 292              		.loc 1 3088 0
 293 00da FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 294              	.LVL22:
3089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 295              		.loc 1 3089 0
 296 00de 2168     		ldr	r1, [r4]
 297 00e0 00EB8000 		add	r0, r0, r0, lsl #2
 298              	.LVL23:
 299 00e4 00EB8000 		add	r0, r0, r0, lsl #2
 300 00e8 6368     		ldr	r3, [r4, #4]
 301 00ea 9B00     		lsls	r3, r3, #2
 302 00ec B0FBF3F0 		udiv	r0, r0, r3
 303 00f0 1B4B     		ldr	r3, .L16+4
 304 00f2 A3FB0024 		umull	r2, r4, r3, r0
 305              	.LVL24:
 306 00f6 6409     		lsrs	r4, r4, #5
 307 00f8 6422     		movs	r2, #100
 308 00fa 02FB1402 		mls	r2, r2, r4, r0
 309 00fe 1201     		lsls	r2, r2, #4
 310 0100 3232     		adds	r2, r2, #50
 311 0102 A3FB0223 		umull	r2, r3, r3, r2
 312 0106 5B09     		lsrs	r3, r3, #5
 313 0108 03F0F002 		and	r2, r3, #240
 314 010c 02EB0414 		add	r4, r2, r4, lsl #4
 315 0110 03F00F03 		and	r3, r3, #15
 316 0114 2344     		add	r3, r3, r4
 317 0116 8B60     		str	r3, [r1, #8]
 318 0118 38BD     		pop	{r3, r4, r5, pc}
 319              	.LVL25:
 320              	.L14:
3090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
3091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     else
3092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
3093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 321              		.loc 1 3093 0
 322 011a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 323              	.LVL26:
3094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 324              		.loc 1 3094 0
 325 011e 2168     		ldr	r1, [r4]
 326 0120 00EB8000 		add	r0, r0, r0, lsl #2
 327              	.LVL27:
 328 0124 00EB8000 		add	r0, r0, r0, lsl #2
 329 0128 6368     		ldr	r3, [r4, #4]
 330 012a 9B00     		lsls	r3, r3, #2
 331 012c B0FBF3F0 		udiv	r0, r0, r3
 332 0130 0B4B     		ldr	r3, .L16+4
ARM GAS  /tmp/ccCgvysJ.s 			page 61


 333 0132 A3FB0024 		umull	r2, r4, r3, r0
 334              	.LVL28:
 335 0136 6409     		lsrs	r4, r4, #5
 336 0138 6422     		movs	r2, #100
 337 013a 02FB1402 		mls	r2, r2, r4, r0
 338 013e 1201     		lsls	r2, r2, #4
 339 0140 3232     		adds	r2, r2, #50
 340 0142 A3FB0223 		umull	r2, r3, r3, r2
 341 0146 5B09     		lsrs	r3, r3, #5
 342 0148 03F0F002 		and	r2, r3, #240
 343 014c 02EB0414 		add	r4, r2, r4, lsl #4
 344 0150 03F00F03 		and	r3, r3, #15
 345 0154 2344     		add	r3, r3, r4
 346 0156 8B60     		str	r3, [r1, #8]
 347 0158 38BD     		pop	{r3, r4, r5, pc}
 348              	.L17:
 349 015a 00BF     		.align	2
 350              	.L16:
 351 015c 00380140 		.word	1073821696
 352 0160 1F85EB51 		.word	1374389535
 353              		.cfi_endproc
 354              	.LFE126:
 356              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 357              		.align	2
 358              		.thumb
 359              		.thumb_func
 361              	UART_WaitOnFlagUntilTimeout:
 362              	.LFB115:
2664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Wait until flag is set */
 363              		.loc 1 2664 0
 364              		.cfi_startproc
 365              		@ args = 4, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              	.LVL29:
 368 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 369              	.LCFI1:
 370              		.cfi_def_cfa_offset 24
 371              		.cfi_offset 4, -24
 372              		.cfi_offset 5, -20
 373              		.cfi_offset 6, -16
 374              		.cfi_offset 7, -12
 375              		.cfi_offset 8, -8
 376              		.cfi_offset 14, -4
 377 0004 0546     		mov	r5, r0
 378 0006 0F46     		mov	r7, r1
 379 0008 1646     		mov	r6, r2
 380 000a 9846     		mov	r8, r3
 381 000c 069C     		ldr	r4, [sp, #24]
2666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 382              		.loc 1 2666 0
 383 000e 1EE0     		b	.L20
 384              	.LVL30:
 385              	.L23:
2669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 386              		.loc 1 2669 0
 387 0010 B4F1FF3F 		cmp	r4, #-1
 388 0014 1BD0     		beq	.L20
ARM GAS  /tmp/ccCgvysJ.s 			page 62


2671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 389              		.loc 1 2671 0
 390 0016 2CB1     		cbz	r4, .L21
2671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 391              		.loc 1 2671 0 is_stmt 0 discriminator 1
 392 0018 FFF7FEFF 		bl	HAL_GetTick
 393              	.LVL31:
 394 001c C8EB0000 		rsb	r0, r8, r0
 395 0020 8442     		cmp	r4, r0
 396 0022 14D2     		bcs	.L20
 397              	.L21:
2674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 398              		.loc 1 2674 0 is_stmt 1
 399 0024 2A68     		ldr	r2, [r5]
 400 0026 D368     		ldr	r3, [r2, #12]
 401 0028 23F4D073 		bic	r3, r3, #416
 402 002c D360     		str	r3, [r2, #12]
2675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 403              		.loc 1 2675 0
 404 002e 2A68     		ldr	r2, [r5]
 405 0030 5369     		ldr	r3, [r2, #20]
 406 0032 23F00103 		bic	r3, r3, #1
 407 0036 5361     		str	r3, [r2, #20]
2677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 408              		.loc 1 2677 0
 409 0038 2023     		movs	r3, #32
 410 003a 85F83930 		strb	r3, [r5, #57]
2678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 411              		.loc 1 2678 0
 412 003e 85F83A30 		strb	r3, [r5, #58]
2681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 413              		.loc 1 2681 0
 414 0042 0023     		movs	r3, #0
 415 0044 85F83830 		strb	r3, [r5, #56]
2683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 416              		.loc 1 2683 0
 417 0048 0320     		movs	r0, #3
 418 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 419              	.LVL32:
 420              	.L20:
2666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 421              		.loc 1 2666 0
 422 004e 2B68     		ldr	r3, [r5]
 423 0050 1B68     		ldr	r3, [r3]
 424 0052 37EA0303 		bics	r3, r7, r3
 425 0056 0CBF     		ite	eq
 426 0058 0123     		moveq	r3, #1
 427 005a 0023     		movne	r3, #0
 428 005c B342     		cmp	r3, r6
 429 005e D7D0     		beq	.L23
2687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 430              		.loc 1 2687 0
 431 0060 0020     		movs	r0, #0
2688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 432              		.loc 1 2688 0
 433 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 434              		.cfi_endproc
ARM GAS  /tmp/ccCgvysJ.s 			page 63


 435              	.LFE115:
 437 0066 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 438              		.align	2
 439              		.weak	HAL_UART_MspInit
 440              		.thumb
 441              		.thumb_func
 443              	HAL_UART_MspInit:
 444              	.LFB77:
 664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 445              		.loc 1 664 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450              	.LVL33:
 451 0000 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE77:
 455 0002 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 456              		.align	2
 457              		.global	HAL_UART_Init
 458              		.thumb
 459              		.thumb_func
 461              	HAL_UART_Init:
 462              	.LFB72:
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 463              		.loc 1 314 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              	.LVL34:
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 468              		.loc 1 316 0
 469 0000 68B3     		cbz	r0, .L29
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 470              		.loc 1 314 0
 471 0002 10B5     		push	{r4, lr}
 472              	.LCFI2:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
 476 0004 0446     		mov	r4, r0
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 477              		.loc 1 335 0
 478 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 479 000a 13F0FF0F 		tst	r3, #255
 480 000e 04D1     		bne	.L28
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 481              		.loc 1 338 0
 482 0010 0023     		movs	r3, #0
 483 0012 80F83830 		strb	r3, [r0, #56]
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 484              		.loc 1 352 0
 485 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 486              	.LVL35:
 487              	.L28:
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 64


 488              		.loc 1 356 0
 489 001a 2423     		movs	r3, #36
 490 001c 84F83930 		strb	r3, [r4, #57]
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 491              		.loc 1 359 0
 492 0020 2268     		ldr	r2, [r4]
 493 0022 D368     		ldr	r3, [r2, #12]
 494 0024 23F40053 		bic	r3, r3, #8192
 495 0028 D360     		str	r3, [r2, #12]
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 496              		.loc 1 362 0
 497 002a 2046     		mov	r0, r4
 498 002c FFF7FEFF 		bl	UART_SetConfig
 499              	.LVL36:
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 500              		.loc 1 367 0
 501 0030 2268     		ldr	r2, [r4]
 502 0032 1369     		ldr	r3, [r2, #16]
 503 0034 23F49043 		bic	r3, r3, #18432
 504 0038 1361     		str	r3, [r2, #16]
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 505              		.loc 1 368 0
 506 003a 2268     		ldr	r2, [r4]
 507 003c 5369     		ldr	r3, [r2, #20]
 508 003e 23F02A03 		bic	r3, r3, #42
 509 0042 5361     		str	r3, [r2, #20]
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 510              		.loc 1 371 0
 511 0044 2268     		ldr	r2, [r4]
 512 0046 D368     		ldr	r3, [r2, #12]
 513 0048 43F40053 		orr	r3, r3, #8192
 514 004c D360     		str	r3, [r2, #12]
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 515              		.loc 1 374 0
 516 004e 0020     		movs	r0, #0
 517 0050 E063     		str	r0, [r4, #60]
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 518              		.loc 1 375 0
 519 0052 2023     		movs	r3, #32
 520 0054 84F83930 		strb	r3, [r4, #57]
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 521              		.loc 1 376 0
 522 0058 84F83A30 		strb	r3, [r4, #58]
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 523              		.loc 1 378 0
 524 005c 10BD     		pop	{r4, pc}
 525              	.LVL37:
 526              	.L29:
 527              	.LCFI3:
 528              		.cfi_def_cfa_offset 0
 529              		.cfi_restore 4
 530              		.cfi_restore 14
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 531              		.loc 1 318 0
 532 005e 0120     		movs	r0, #1
 533              	.LVL38:
 534 0060 7047     		bx	lr
ARM GAS  /tmp/ccCgvysJ.s 			page 65


 535              		.cfi_endproc
 536              	.LFE72:
 538 0062 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 539              		.align	2
 540              		.global	HAL_HalfDuplex_Init
 541              		.thumb
 542              		.thumb_func
 544              	HAL_HalfDuplex_Init:
 545              	.LFB73:
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 546              		.loc 1 389 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL39:
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 551              		.loc 1 391 0
 552 0000 0028     		cmp	r0, #0
 553 0002 32D0     		beq	.L35
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 554              		.loc 1 389 0
 555 0004 10B5     		push	{r4, lr}
 556              	.LCFI4:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 560 0006 0446     		mov	r4, r0
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 561              		.loc 1 401 0
 562 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 563 000c 13F0FF0F 		tst	r3, #255
 564 0010 04D1     		bne	.L34
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 565              		.loc 1 404 0
 566 0012 0023     		movs	r3, #0
 567 0014 80F83830 		strb	r3, [r0, #56]
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 568              		.loc 1 418 0
 569 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 570              	.LVL40:
 571              	.L34:
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 572              		.loc 1 422 0
 573 001c 2423     		movs	r3, #36
 574 001e 84F83930 		strb	r3, [r4, #57]
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 575              		.loc 1 425 0
 576 0022 2268     		ldr	r2, [r4]
 577 0024 D368     		ldr	r3, [r2, #12]
 578 0026 23F40053 		bic	r3, r3, #8192
 579 002a D360     		str	r3, [r2, #12]
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 580              		.loc 1 428 0
 581 002c 2046     		mov	r0, r4
 582 002e FFF7FEFF 		bl	UART_SetConfig
 583              	.LVL41:
 433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
ARM GAS  /tmp/ccCgvysJ.s 			page 66


 584              		.loc 1 433 0
 585 0032 2268     		ldr	r2, [r4]
 586 0034 1369     		ldr	r3, [r2, #16]
 587 0036 23F49043 		bic	r3, r3, #18432
 588 003a 1361     		str	r3, [r2, #16]
 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 589              		.loc 1 434 0
 590 003c 2268     		ldr	r2, [r4]
 591 003e 5369     		ldr	r3, [r2, #20]
 592 0040 23F02203 		bic	r3, r3, #34
 593 0044 5361     		str	r3, [r2, #20]
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 594              		.loc 1 437 0
 595 0046 2268     		ldr	r2, [r4]
 596 0048 5369     		ldr	r3, [r2, #20]
 597 004a 43F00803 		orr	r3, r3, #8
 598 004e 5361     		str	r3, [r2, #20]
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 599              		.loc 1 440 0
 600 0050 2268     		ldr	r2, [r4]
 601 0052 D368     		ldr	r3, [r2, #12]
 602 0054 43F40053 		orr	r3, r3, #8192
 603 0058 D360     		str	r3, [r2, #12]
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 604              		.loc 1 443 0
 605 005a 0020     		movs	r0, #0
 606 005c E063     		str	r0, [r4, #60]
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 607              		.loc 1 444 0
 608 005e 2023     		movs	r3, #32
 609 0060 84F83930 		strb	r3, [r4, #57]
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 610              		.loc 1 445 0
 611 0064 84F83A30 		strb	r3, [r4, #58]
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 612              		.loc 1 447 0
 613 0068 10BD     		pop	{r4, pc}
 614              	.LVL42:
 615              	.L35:
 616              	.LCFI5:
 617              		.cfi_def_cfa_offset 0
 618              		.cfi_restore 4
 619              		.cfi_restore 14
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 620              		.loc 1 393 0
 621 006a 0120     		movs	r0, #1
 622              	.LVL43:
 623 006c 7047     		bx	lr
 624              		.cfi_endproc
 625              	.LFE73:
 627 006e 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 628              		.align	2
 629              		.global	HAL_LIN_Init
 630              		.thumb
 631              		.thumb_func
 633              	HAL_LIN_Init:
 634              	.LFB74:
ARM GAS  /tmp/ccCgvysJ.s 			page 67


 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 635              		.loc 1 462 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              	.LVL44:
 464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 640              		.loc 1 464 0
 641 0000 0028     		cmp	r0, #0
 642 0002 3CD0     		beq	.L41
 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 643              		.loc 1 462 0
 644 0004 38B5     		push	{r3, r4, r5, lr}
 645              	.LCFI6:
 646              		.cfi_def_cfa_offset 16
 647              		.cfi_offset 3, -16
 648              		.cfi_offset 4, -12
 649              		.cfi_offset 5, -8
 650              		.cfi_offset 14, -4
 651 0006 0446     		mov	r4, r0
 652 0008 0D46     		mov	r5, r1
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 653              		.loc 1 477 0
 654 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 655 000e 13F0FF0F 		tst	r3, #255
 656 0012 04D1     		bne	.L40
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 657              		.loc 1 480 0
 658 0014 0023     		movs	r3, #0
 659 0016 80F83830 		strb	r3, [r0, #56]
 494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 660              		.loc 1 494 0
 661 001a FFF7FEFF 		bl	HAL_UART_MspInit
 662              	.LVL45:
 663              	.L40:
 498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 664              		.loc 1 498 0
 665 001e 2423     		movs	r3, #36
 666 0020 84F83930 		strb	r3, [r4, #57]
 501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 667              		.loc 1 501 0
 668 0024 2268     		ldr	r2, [r4]
 669 0026 D368     		ldr	r3, [r2, #12]
 670 0028 23F40053 		bic	r3, r3, #8192
 671 002c D360     		str	r3, [r2, #12]
 504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 672              		.loc 1 504 0
 673 002e 2046     		mov	r0, r4
 674 0030 FFF7FEFF 		bl	UART_SetConfig
 675              	.LVL46:
 509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 676              		.loc 1 509 0
 677 0034 2268     		ldr	r2, [r4]
 678 0036 1369     		ldr	r3, [r2, #16]
 679 0038 23F40063 		bic	r3, r3, #2048
 680 003c 1361     		str	r3, [r2, #16]
 510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 68


 681              		.loc 1 510 0
 682 003e 2268     		ldr	r2, [r4]
 683 0040 5369     		ldr	r3, [r2, #20]
 684 0042 23F02A03 		bic	r3, r3, #42
 685 0046 5361     		str	r3, [r2, #20]
 513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 686              		.loc 1 513 0
 687 0048 2268     		ldr	r2, [r4]
 688 004a 1369     		ldr	r3, [r2, #16]
 689 004c 43F48043 		orr	r3, r3, #16384
 690 0050 1361     		str	r3, [r2, #16]
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 691              		.loc 1 516 0
 692 0052 2268     		ldr	r2, [r4]
 693 0054 1369     		ldr	r3, [r2, #16]
 694 0056 23F02003 		bic	r3, r3, #32
 695 005a 1361     		str	r3, [r2, #16]
 517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 696              		.loc 1 517 0
 697 005c 2368     		ldr	r3, [r4]
 698 005e 1969     		ldr	r1, [r3, #16]
 699 0060 0D43     		orrs	r5, r5, r1
 700              	.LVL47:
 701 0062 1D61     		str	r5, [r3, #16]
 520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 702              		.loc 1 520 0
 703 0064 2268     		ldr	r2, [r4]
 704 0066 D368     		ldr	r3, [r2, #12]
 705 0068 43F40053 		orr	r3, r3, #8192
 706 006c D360     		str	r3, [r2, #12]
 523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 707              		.loc 1 523 0
 708 006e 0020     		movs	r0, #0
 709 0070 E063     		str	r0, [r4, #60]
 524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 710              		.loc 1 524 0
 711 0072 2023     		movs	r3, #32
 712 0074 84F83930 		strb	r3, [r4, #57]
 525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 713              		.loc 1 525 0
 714 0078 84F83A30 		strb	r3, [r4, #58]
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 715              		.loc 1 527 0
 716 007c 38BD     		pop	{r3, r4, r5, pc}
 717              	.LVL48:
 718              	.L41:
 719              	.LCFI7:
 720              		.cfi_def_cfa_offset 0
 721              		.cfi_restore 3
 722              		.cfi_restore 4
 723              		.cfi_restore 5
 724              		.cfi_restore 14
 466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 725              		.loc 1 466 0
 726 007e 0120     		movs	r0, #1
 727              	.LVL49:
 728 0080 7047     		bx	lr
ARM GAS  /tmp/ccCgvysJ.s 			page 69


 729              		.cfi_endproc
 730              	.LFE74:
 732 0082 00BF     		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 733              		.align	2
 734              		.global	HAL_MultiProcessor_Init
 735              		.thumb
 736              		.thumb_func
 738              	HAL_MultiProcessor_Init:
 739              	.LFB75:
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 740              		.loc 1 543 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              	.LVL50:
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 745              		.loc 1 545 0
 746 0000 0028     		cmp	r0, #0
 747 0002 41D0     		beq	.L47
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 748              		.loc 1 543 0
 749 0004 70B5     		push	{r4, r5, r6, lr}
 750              	.LCFI8:
 751              		.cfi_def_cfa_offset 16
 752              		.cfi_offset 4, -16
 753              		.cfi_offset 5, -12
 754              		.cfi_offset 6, -8
 755              		.cfi_offset 14, -4
 756 0006 0446     		mov	r4, r0
 757 0008 1546     		mov	r5, r2
 758 000a 0E46     		mov	r6, r1
 559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 759              		.loc 1 559 0
 760 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 761 0010 13F0FF0F 		tst	r3, #255
 762 0014 04D1     		bne	.L46
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 763              		.loc 1 562 0
 764 0016 0023     		movs	r3, #0
 765 0018 80F83830 		strb	r3, [r0, #56]
 576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 766              		.loc 1 576 0
 767 001c FFF7FEFF 		bl	HAL_UART_MspInit
 768              	.LVL51:
 769              	.L46:
 580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 770              		.loc 1 580 0
 771 0020 2423     		movs	r3, #36
 772 0022 84F83930 		strb	r3, [r4, #57]
 583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 773              		.loc 1 583 0
 774 0026 2268     		ldr	r2, [r4]
 775 0028 D368     		ldr	r3, [r2, #12]
 776 002a 23F40053 		bic	r3, r3, #8192
 777 002e D360     		str	r3, [r2, #12]
 586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 778              		.loc 1 586 0
ARM GAS  /tmp/ccCgvysJ.s 			page 70


 779 0030 2046     		mov	r0, r4
 780 0032 FFF7FEFF 		bl	UART_SetConfig
 781              	.LVL52:
 591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 782              		.loc 1 591 0
 783 0036 2268     		ldr	r2, [r4]
 784 0038 1369     		ldr	r3, [r2, #16]
 785 003a 23F49043 		bic	r3, r3, #18432
 786 003e 1361     		str	r3, [r2, #16]
 592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 787              		.loc 1 592 0
 788 0040 2268     		ldr	r2, [r4]
 789 0042 5369     		ldr	r3, [r2, #20]
 790 0044 23F02A03 		bic	r3, r3, #42
 791 0048 5361     		str	r3, [r2, #20]
 595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 792              		.loc 1 595 0
 793 004a 2268     		ldr	r2, [r4]
 794 004c 1369     		ldr	r3, [r2, #16]
 795 004e 23F00F03 		bic	r3, r3, #15
 796 0052 1361     		str	r3, [r2, #16]
 596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 797              		.loc 1 596 0
 798 0054 2368     		ldr	r3, [r4]
 799 0056 1969     		ldr	r1, [r3, #16]
 800 0058 0E43     		orrs	r6, r6, r1
 801 005a 1E61     		str	r6, [r3, #16]
 599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 802              		.loc 1 599 0
 803 005c 2268     		ldr	r2, [r4]
 804 005e D368     		ldr	r3, [r2, #12]
 805 0060 23F40063 		bic	r3, r3, #2048
 806 0064 D360     		str	r3, [r2, #12]
 600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 807              		.loc 1 600 0
 808 0066 2368     		ldr	r3, [r4]
 809 0068 DA68     		ldr	r2, [r3, #12]
 810 006a 1543     		orrs	r5, r5, r2
 811              	.LVL53:
 812 006c DD60     		str	r5, [r3, #12]
 603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 813              		.loc 1 603 0
 814 006e 2268     		ldr	r2, [r4]
 815 0070 D368     		ldr	r3, [r2, #12]
 816 0072 43F40053 		orr	r3, r3, #8192
 817 0076 D360     		str	r3, [r2, #12]
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 818              		.loc 1 606 0
 819 0078 0020     		movs	r0, #0
 820 007a E063     		str	r0, [r4, #60]
 607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 821              		.loc 1 607 0
 822 007c 2023     		movs	r3, #32
 823 007e 84F83930 		strb	r3, [r4, #57]
 608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 824              		.loc 1 608 0
 825 0082 84F83A30 		strb	r3, [r4, #58]
ARM GAS  /tmp/ccCgvysJ.s 			page 71


 610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 826              		.loc 1 610 0
 827 0086 70BD     		pop	{r4, r5, r6, pc}
 828              	.LVL54:
 829              	.L47:
 830              	.LCFI9:
 831              		.cfi_def_cfa_offset 0
 832              		.cfi_restore 4
 833              		.cfi_restore 5
 834              		.cfi_restore 6
 835              		.cfi_restore 14
 547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 836              		.loc 1 547 0
 837 0088 0120     		movs	r0, #1
 838              	.LVL55:
 839 008a 7047     		bx	lr
 840              		.cfi_endproc
 841              	.LFE75:
 843              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 844              		.align	2
 845              		.weak	HAL_UART_MspDeInit
 846              		.thumb
 847              		.thumb_func
 849              	HAL_UART_MspDeInit:
 850              	.LFB78:
 679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 851              		.loc 1 679 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856              	.LVL56:
 857 0000 7047     		bx	lr
 858              		.cfi_endproc
 859              	.LFE78:
 861 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 862              		.align	2
 863              		.global	HAL_UART_DeInit
 864              		.thumb
 865              		.thumb_func
 867              	HAL_UART_DeInit:
 868              	.LFB76:
 620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 869              		.loc 1 620 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL57:
 622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 874              		.loc 1 622 0
 875 0000 A0B1     		cbz	r0, .L53
 620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the UART handle allocation */
 876              		.loc 1 620 0
 877 0002 10B5     		push	{r4, lr}
 878              	.LCFI10:
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 4, -8
ARM GAS  /tmp/ccCgvysJ.s 			page 72


 881              		.cfi_offset 14, -4
 882 0004 0446     		mov	r4, r0
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 883              		.loc 1 630 0
 884 0006 2423     		movs	r3, #36
 885 0008 80F83930 		strb	r3, [r0, #57]
 633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 886              		.loc 1 633 0
 887 000c 0268     		ldr	r2, [r0]
 888 000e D368     		ldr	r3, [r2, #12]
 889 0010 23F40053 		bic	r3, r3, #8192
 890 0014 D360     		str	r3, [r2, #12]
 644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 891              		.loc 1 644 0
 892 0016 FFF7FEFF 		bl	HAL_UART_MspDeInit
 893              	.LVL58:
 647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 894              		.loc 1 647 0
 895 001a 0020     		movs	r0, #0
 896 001c E063     		str	r0, [r4, #60]
 648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 897              		.loc 1 648 0
 898 001e 84F83900 		strb	r0, [r4, #57]
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 899              		.loc 1 649 0
 900 0022 84F83A00 		strb	r0, [r4, #58]
 652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 901              		.loc 1 652 0
 902 0026 84F83800 		strb	r0, [r4, #56]
 654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 903              		.loc 1 654 0
 904 002a 10BD     		pop	{r4, pc}
 905              	.LVL59:
 906              	.L53:
 907              	.LCFI11:
 908              		.cfi_def_cfa_offset 0
 909              		.cfi_restore 4
 910              		.cfi_restore 14
 624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 911              		.loc 1 624 0
 912 002c 0120     		movs	r0, #1
 913              	.LVL60:
 914 002e 7047     		bx	lr
 915              		.cfi_endproc
 916              	.LFE76:
 918              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 919              		.align	2
 920              		.global	HAL_UART_Transmit
 921              		.thumb
 922              		.thumb_func
 924              	HAL_UART_Transmit:
 925              	.LFB79:
1016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint16_t *tmp;
 926              		.loc 1 1016 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccCgvysJ.s 			page 73


 930              	.LVL61:
 931 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 932              	.LCFI12:
 933              		.cfi_def_cfa_offset 24
 934              		.cfi_offset 4, -24
 935              		.cfi_offset 5, -20
 936              		.cfi_offset 6, -16
 937              		.cfi_offset 7, -12
 938              		.cfi_offset 8, -8
 939              		.cfi_offset 14, -4
 940 0004 82B0     		sub	sp, sp, #8
 941              	.LCFI13:
 942              		.cfi_def_cfa_offset 32
 943 0006 1E46     		mov	r6, r3
 944              	.LVL62:
1021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 945              		.loc 1 1021 0
 946 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 947              	.LVL63:
 948 000c DBB2     		uxtb	r3, r3
 949 000e 202B     		cmp	r3, #32
 950 0010 56D1     		bne	.L63
 951 0012 0446     		mov	r4, r0
 952 0014 0D46     		mov	r5, r1
 953 0016 9046     		mov	r8, r2
1023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 954              		.loc 1 1023 0
 955 0018 0029     		cmp	r1, #0
 956 001a 53D0     		beq	.L64
1023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 957              		.loc 1 1023 0 is_stmt 0 discriminator 1
 958 001c 002A     		cmp	r2, #0
 959 001e 53D0     		beq	.L65
1029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 960              		.loc 1 1029 0 is_stmt 1
 961 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 962 0024 012B     		cmp	r3, #1
 963 0026 51D0     		beq	.L66
1029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 964              		.loc 1 1029 0 is_stmt 0 discriminator 2
 965 0028 0123     		movs	r3, #1
 966 002a 80F83830 		strb	r3, [r0, #56]
1031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 967              		.loc 1 1031 0 is_stmt 1 discriminator 2
 968 002e 0023     		movs	r3, #0
 969 0030 C363     		str	r3, [r0, #60]
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 970              		.loc 1 1032 0 discriminator 2
 971 0032 2123     		movs	r3, #33
 972 0034 80F83930 		strb	r3, [r0, #57]
1035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 973              		.loc 1 1035 0 discriminator 2
 974 0038 FFF7FEFF 		bl	HAL_GetTick
 975              	.LVL64:
 976 003c 0746     		mov	r7, r0
 977              	.LVL65:
1037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = Size;
ARM GAS  /tmp/ccCgvysJ.s 			page 74


 978              		.loc 1 1037 0 discriminator 2
 979 003e A4F82480 		strh	r8, [r4, #36]	@ movhi
1038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 980              		.loc 1 1038 0 discriminator 2
 981 0042 A4F82680 		strh	r8, [r4, #38]	@ movhi
1039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 982              		.loc 1 1039 0 discriminator 2
 983 0046 27E0     		b	.L58
 984              	.LVL66:
 985              	.L62:
1041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 986              		.loc 1 1041 0
 987 0048 E38C     		ldrh	r3, [r4, #38]
 988 004a 9BB2     		uxth	r3, r3
 989 004c 013B     		subs	r3, r3, #1
 990 004e 9BB2     		uxth	r3, r3
 991 0050 E384     		strh	r3, [r4, #38]	@ movhi
1042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 992              		.loc 1 1042 0
 993 0052 A368     		ldr	r3, [r4, #8]
 994 0054 B3F5805F 		cmp	r3, #4096
 995 0058 12D1     		bne	.L59
1044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 996              		.loc 1 1044 0
 997 005a 0096     		str	r6, [sp]
 998 005c 3B46     		mov	r3, r7
 999 005e 0022     		movs	r2, #0
 1000 0060 8021     		movs	r1, #128
 1001 0062 2046     		mov	r0, r4
 1002 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1003              	.LVL67:
 1004 0068 90BB     		cbnz	r0, .L67
 1005              	.LVL68:
1049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1006              		.loc 1 1049 0
 1007 006a 2268     		ldr	r2, [r4]
 1008 006c 2B88     		ldrh	r3, [r5]
 1009 006e C3F30803 		ubfx	r3, r3, #0, #9
 1010 0072 5360     		str	r3, [r2, #4]
1050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 1011              		.loc 1 1050 0
 1012 0074 2369     		ldr	r3, [r4, #16]
 1013 0076 0BB9     		cbnz	r3, .L60
1052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 1014              		.loc 1 1052 0
 1015 0078 0235     		adds	r5, r5, #2
 1016              	.LVL69:
 1017 007a 0DE0     		b	.L58
 1018              	.LVL70:
 1019              	.L60:
1056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 1020              		.loc 1 1056 0
 1021 007c 0135     		adds	r5, r5, #1
 1022              	.LVL71:
 1023 007e 0BE0     		b	.L58
 1024              	.LVL72:
 1025              	.L59:
ARM GAS  /tmp/ccCgvysJ.s 			page 75


1061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 1026              		.loc 1 1061 0
 1027 0080 0096     		str	r6, [sp]
 1028 0082 3B46     		mov	r3, r7
 1029 0084 0022     		movs	r2, #0
 1030 0086 8021     		movs	r1, #128
 1031 0088 2046     		mov	r0, r4
 1032 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1033              	.LVL73:
 1034 008e 08BB     		cbnz	r0, .L68
1065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 1035              		.loc 1 1065 0
 1036 0090 2368     		ldr	r3, [r4]
 1037              	.LVL74:
 1038 0092 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1039 0094 5A60     		str	r2, [r3, #4]
 1040 0096 0135     		adds	r5, r5, #1
 1041              	.LVL75:
 1042              	.L58:
1039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1043              		.loc 1 1039 0
 1044 0098 E38C     		ldrh	r3, [r4, #38]
 1045 009a 9BB2     		uxth	r3, r3
 1046 009c 002B     		cmp	r3, #0
 1047 009e D3D1     		bne	.L62
1069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1048              		.loc 1 1069 0
 1049 00a0 0096     		str	r6, [sp]
 1050 00a2 3B46     		mov	r3, r7
 1051 00a4 0022     		movs	r2, #0
 1052 00a6 4021     		movs	r1, #64
 1053 00a8 2046     		mov	r0, r4
 1054 00aa FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1055              	.LVL76:
 1056 00ae 0346     		mov	r3, r0
 1057 00b0 90B9     		cbnz	r0, .L69
1075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1058              		.loc 1 1075 0
 1059 00b2 2022     		movs	r2, #32
 1060 00b4 84F83920 		strb	r2, [r4, #57]
1078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1061              		.loc 1 1078 0
 1062 00b8 0022     		movs	r2, #0
 1063 00ba 84F83820 		strb	r2, [r4, #56]
1080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1064              		.loc 1 1080 0
 1065 00be 0CE0     		b	.L57
 1066              	.LVL77:
 1067              	.L63:
1084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1068              		.loc 1 1084 0
 1069 00c0 0223     		movs	r3, #2
 1070 00c2 0AE0     		b	.L57
 1071              	.L64:
1025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1072              		.loc 1 1025 0
 1073 00c4 0123     		movs	r3, #1
ARM GAS  /tmp/ccCgvysJ.s 			page 76


 1074 00c6 08E0     		b	.L57
 1075              	.L65:
 1076 00c8 0123     		movs	r3, #1
 1077 00ca 06E0     		b	.L57
 1078              	.L66:
1029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1079              		.loc 1 1029 0
 1080 00cc 0223     		movs	r3, #2
 1081 00ce 04E0     		b	.L57
 1082              	.LVL78:
 1083              	.L67:
1046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 1084              		.loc 1 1046 0
 1085 00d0 0323     		movs	r3, #3
 1086 00d2 02E0     		b	.L57
 1087              	.L68:
1063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 1088              		.loc 1 1063 0
 1089 00d4 0323     		movs	r3, #3
 1090 00d6 00E0     		b	.L57
 1091              	.L69:
1071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1092              		.loc 1 1071 0
 1093 00d8 0323     		movs	r3, #3
 1094              	.LVL79:
 1095              	.L57:
1086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1096              		.loc 1 1086 0
 1097 00da 1846     		mov	r0, r3
 1098 00dc 02B0     		add	sp, sp, #8
 1099              	.LCFI14:
 1100              		.cfi_def_cfa_offset 24
 1101              		@ sp needed
 1102 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1103              		.cfi_endproc
 1104              	.LFE79:
 1106 00e2 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 1107              		.align	2
 1108              		.global	HAL_UART_Receive
 1109              		.thumb
 1110              		.thumb_func
 1112              	HAL_UART_Receive:
 1113              	.LFB80:
1098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint16_t *tmp;
 1114              		.loc 1 1098 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              	.LVL80:
 1119 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1120              	.LCFI15:
 1121              		.cfi_def_cfa_offset 24
 1122              		.cfi_offset 4, -24
 1123              		.cfi_offset 5, -20
 1124              		.cfi_offset 6, -16
 1125              		.cfi_offset 7, -12
 1126              		.cfi_offset 8, -8
ARM GAS  /tmp/ccCgvysJ.s 			page 77


 1127              		.cfi_offset 14, -4
 1128 0004 82B0     		sub	sp, sp, #8
 1129              	.LCFI16:
 1130              		.cfi_def_cfa_offset 32
 1131 0006 1E46     		mov	r6, r3
 1132              	.LVL81:
1103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1133              		.loc 1 1103 0
 1134 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1135              	.LVL82:
 1136 000c DBB2     		uxtb	r3, r3
 1137 000e 202B     		cmp	r3, #32
 1138 0010 5BD1     		bne	.L79
 1139 0012 0446     		mov	r4, r0
 1140 0014 0D46     		mov	r5, r1
 1141 0016 9046     		mov	r8, r2
1105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1142              		.loc 1 1105 0
 1143 0018 0029     		cmp	r1, #0
 1144 001a 58D0     		beq	.L80
1105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1145              		.loc 1 1105 0 is_stmt 0 discriminator 1
 1146 001c 002A     		cmp	r2, #0
 1147 001e 58D0     		beq	.L81
1111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1148              		.loc 1 1111 0 is_stmt 1
 1149 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1150 0024 012B     		cmp	r3, #1
 1151 0026 56D0     		beq	.L82
1111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1152              		.loc 1 1111 0 is_stmt 0 discriminator 2
 1153 0028 0123     		movs	r3, #1
 1154 002a 80F83830 		strb	r3, [r0, #56]
1113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1155              		.loc 1 1113 0 is_stmt 1 discriminator 2
 1156 002e 0023     		movs	r3, #0
 1157 0030 C363     		str	r3, [r0, #60]
1114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1158              		.loc 1 1114 0 discriminator 2
 1159 0032 2223     		movs	r3, #34
 1160 0034 80F83A30 		strb	r3, [r0, #58]
1117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1161              		.loc 1 1117 0 discriminator 2
 1162 0038 FFF7FEFF 		bl	HAL_GetTick
 1163              	.LVL83:
 1164 003c 0746     		mov	r7, r0
 1165              	.LVL84:
1119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1166              		.loc 1 1119 0 discriminator 2
 1167 003e A4F82C80 		strh	r8, [r4, #44]	@ movhi
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1168              		.loc 1 1120 0 discriminator 2
 1169 0042 A4F82E80 		strh	r8, [r4, #46]	@ movhi
1123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1170              		.loc 1 1123 0 discriminator 2
 1171 0046 35E0     		b	.L73
 1172              	.LVL85:
ARM GAS  /tmp/ccCgvysJ.s 			page 78


 1173              	.L78:
1125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1174              		.loc 1 1125 0
 1175 0048 E38D     		ldrh	r3, [r4, #46]
 1176 004a 9BB2     		uxth	r3, r3
 1177 004c 013B     		subs	r3, r3, #1
 1178 004e 9BB2     		uxth	r3, r3
 1179 0050 E385     		strh	r3, [r4, #46]	@ movhi
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 1180              		.loc 1 1126 0
 1181 0052 A368     		ldr	r3, [r4, #8]
 1182 0054 B3F5805F 		cmp	r3, #4096
 1183 0058 17D1     		bne	.L74
1128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 1184              		.loc 1 1128 0
 1185 005a 0096     		str	r6, [sp]
 1186 005c 3B46     		mov	r3, r7
 1187 005e 0022     		movs	r2, #0
 1188 0060 2021     		movs	r1, #32
 1189 0062 2046     		mov	r0, r4
 1190 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1191              	.LVL86:
 1192 0068 0028     		cmp	r0, #0
 1193 006a 36D1     		bne	.L83
 1194              	.LVL87:
1133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 1195              		.loc 1 1133 0
 1196 006c 2369     		ldr	r3, [r4, #16]
 1197 006e 33B9     		cbnz	r3, .L75
1135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           pData += 2U;
 1198              		.loc 1 1135 0
 1199 0070 2368     		ldr	r3, [r4]
 1200 0072 5B68     		ldr	r3, [r3, #4]
 1201 0074 C3F30803 		ubfx	r3, r3, #0, #9
 1202 0078 25F8023B 		strh	r3, [r5], #2	@ movhi
 1203              	.LVL88:
 1204 007c 1AE0     		b	.L73
 1205              	.LVL89:
 1206              	.L75:
1140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           pData += 1U;
 1207              		.loc 1 1140 0
 1208 007e 2368     		ldr	r3, [r4]
 1209 0080 5B68     		ldr	r3, [r3, #4]
 1210 0082 DBB2     		uxtb	r3, r3
 1211 0084 25F8013B 		strh	r3, [r5], #1	@ movhi
 1212              	.LVL90:
 1213 0088 14E0     		b	.L73
 1214              	.LVL91:
 1215              	.L74:
1147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 1216              		.loc 1 1147 0
 1217 008a 0096     		str	r6, [sp]
 1218 008c 3B46     		mov	r3, r7
 1219 008e 0022     		movs	r2, #0
 1220 0090 2021     		movs	r1, #32
 1221 0092 2046     		mov	r0, r4
 1222 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
ARM GAS  /tmp/ccCgvysJ.s 			page 79


 1223              	.LVL92:
 1224 0098 08BB     		cbnz	r0, .L84
1151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 1225              		.loc 1 1151 0
 1226 009a 2369     		ldr	r3, [r4, #16]
 1227 009c 23B9     		cbnz	r3, .L77
 1228              	.LVL93:
1153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 1229              		.loc 1 1153 0
 1230 009e 2368     		ldr	r3, [r4]
 1231 00a0 5B68     		ldr	r3, [r3, #4]
 1232 00a2 2B70     		strb	r3, [r5]
 1233 00a4 0135     		adds	r5, r5, #1
 1234              	.LVL94:
 1235 00a6 05E0     		b	.L73
 1236              	.L77:
 1237              	.LVL95:
1157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 1238              		.loc 1 1157 0
 1239 00a8 2368     		ldr	r3, [r4]
 1240 00aa 5B68     		ldr	r3, [r3, #4]
 1241 00ac 03F07F03 		and	r3, r3, #127
 1242 00b0 2B70     		strb	r3, [r5]
 1243 00b2 0135     		adds	r5, r5, #1
 1244              	.LVL96:
 1245              	.L73:
1123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1246              		.loc 1 1123 0
 1247 00b4 E38D     		ldrh	r3, [r4, #46]
 1248 00b6 9BB2     		uxth	r3, r3
 1249 00b8 002B     		cmp	r3, #0
 1250 00ba C5D1     		bne	.L78
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1251              		.loc 1 1164 0
 1252 00bc 2023     		movs	r3, #32
 1253 00be 84F83A30 		strb	r3, [r4, #58]
1167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1254              		.loc 1 1167 0
 1255 00c2 0020     		movs	r0, #0
 1256 00c4 84F83800 		strb	r0, [r4, #56]
1169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1257              		.loc 1 1169 0
 1258 00c8 0AE0     		b	.L72
 1259              	.LVL97:
 1260              	.L79:
1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1261              		.loc 1 1173 0
 1262 00ca 0220     		movs	r0, #2
 1263              	.LVL98:
 1264 00cc 08E0     		b	.L72
 1265              	.LVL99:
 1266              	.L80:
1107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1267              		.loc 1 1107 0
 1268 00ce 0120     		movs	r0, #1
 1269              	.LVL100:
 1270 00d0 06E0     		b	.L72
ARM GAS  /tmp/ccCgvysJ.s 			page 80


 1271              	.LVL101:
 1272              	.L81:
 1273 00d2 0120     		movs	r0, #1
 1274              	.LVL102:
 1275 00d4 04E0     		b	.L72
 1276              	.LVL103:
 1277              	.L82:
1111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1278              		.loc 1 1111 0
 1279 00d6 0220     		movs	r0, #2
 1280              	.LVL104:
 1281 00d8 02E0     		b	.L72
 1282              	.LVL105:
 1283              	.L83:
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 1284              		.loc 1 1130 0
 1285 00da 0320     		movs	r0, #3
 1286 00dc 00E0     		b	.L72
 1287              	.L84:
1149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 1288              		.loc 1 1149 0
 1289 00de 0320     		movs	r0, #3
 1290              	.LVL106:
 1291              	.L72:
1175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1292              		.loc 1 1175 0
 1293 00e0 02B0     		add	sp, sp, #8
 1294              	.LCFI17:
 1295              		.cfi_def_cfa_offset 24
 1296              		@ sp needed
 1297 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1298              		.cfi_endproc
 1299              	.LFE80:
 1301              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1302              		.align	2
 1303              		.global	HAL_UART_Transmit_IT
 1304              		.thumb
 1305              		.thumb_func
 1307              	HAL_UART_Transmit_IT:
 1308              	.LFB81:
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1309              		.loc 1 1186 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 1313              		@ link register save eliminated.
 1314              	.LVL107:
1188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1315              		.loc 1 1188 0
 1316 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1317 0004 DBB2     		uxtb	r3, r3
 1318 0006 202B     		cmp	r3, #32
 1319 0008 16D1     		bne	.L88
1190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1320              		.loc 1 1190 0
 1321 000a B9B1     		cbz	r1, .L89
1190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
ARM GAS  /tmp/ccCgvysJ.s 			page 81


 1322              		.loc 1 1190 0 is_stmt 0 discriminator 1
 1323 000c C2B1     		cbz	r2, .L90
1196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1324              		.loc 1 1196 0 is_stmt 1
 1325 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1326 0012 012B     		cmp	r3, #1
 1327 0014 16D0     		beq	.L91
1198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1328              		.loc 1 1198 0 discriminator 2
 1329 0016 0162     		str	r1, [r0, #32]
1199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1330              		.loc 1 1199 0 discriminator 2
 1331 0018 8284     		strh	r2, [r0, #36]	@ movhi
1200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1332              		.loc 1 1200 0 discriminator 2
 1333 001a C284     		strh	r2, [r0, #38]	@ movhi
1202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1334              		.loc 1 1202 0 discriminator 2
 1335 001c 0023     		movs	r3, #0
 1336 001e C363     		str	r3, [r0, #60]
1203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1337              		.loc 1 1203 0 discriminator 2
 1338 0020 2122     		movs	r2, #33
 1339              	.LVL108:
 1340 0022 80F83920 		strb	r2, [r0, #57]
1206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1341              		.loc 1 1206 0 discriminator 2
 1342 0026 80F83830 		strb	r3, [r0, #56]
1209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1343              		.loc 1 1209 0 discriminator 2
 1344 002a 0168     		ldr	r1, [r0]
 1345              	.LVL109:
 1346 002c CA68     		ldr	r2, [r1, #12]
 1347 002e 42F08002 		orr	r2, r2, #128
 1348 0032 CA60     		str	r2, [r1, #12]
 1349              	.LVL110:
1211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1350              		.loc 1 1211 0 discriminator 2
 1351 0034 1846     		mov	r0, r3
 1352              	.LVL111:
 1353 0036 7047     		bx	lr
 1354              	.LVL112:
 1355              	.L88:
1215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1356              		.loc 1 1215 0
 1357 0038 0220     		movs	r0, #2
 1358              	.LVL113:
 1359 003a 7047     		bx	lr
 1360              	.LVL114:
 1361              	.L89:
1192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1362              		.loc 1 1192 0
 1363 003c 0120     		movs	r0, #1
 1364              	.LVL115:
 1365 003e 7047     		bx	lr
 1366              	.LVL116:
 1367              	.L90:
ARM GAS  /tmp/ccCgvysJ.s 			page 82


 1368 0040 0120     		movs	r0, #1
 1369              	.LVL117:
 1370 0042 7047     		bx	lr
 1371              	.LVL118:
 1372              	.L91:
1196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1373              		.loc 1 1196 0
 1374 0044 0220     		movs	r0, #2
 1375              	.LVL119:
1217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1376              		.loc 1 1217 0
 1377 0046 7047     		bx	lr
 1378              		.cfi_endproc
 1379              	.LFE81:
 1381              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1382              		.align	2
 1383              		.global	HAL_UART_Receive_IT
 1384              		.thumb
 1385              		.thumb_func
 1387              	HAL_UART_Receive_IT:
 1388              	.LFB82:
1228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1389              		.loc 1 1228 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              		@ link register save eliminated.
 1394              	.LVL120:
1230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1395              		.loc 1 1230 0
 1396 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1397 0004 DBB2     		uxtb	r3, r3
 1398 0006 202B     		cmp	r3, #32
 1399 0008 20D1     		bne	.L94
1232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1400              		.loc 1 1232 0
 1401 000a 09B3     		cbz	r1, .L95
1232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1402              		.loc 1 1232 0 is_stmt 0 discriminator 1
 1403 000c 12B3     		cbz	r2, .L96
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1404              		.loc 1 1238 0 is_stmt 1
 1405 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1406 0012 012B     		cmp	r3, #1
 1407 0014 20D0     		beq	.L97
1240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1408              		.loc 1 1240 0 discriminator 2
 1409 0016 8162     		str	r1, [r0, #40]
1241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1410              		.loc 1 1241 0 discriminator 2
 1411 0018 8285     		strh	r2, [r0, #44]	@ movhi
1242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1412              		.loc 1 1242 0 discriminator 2
 1413 001a C285     		strh	r2, [r0, #46]	@ movhi
1244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1414              		.loc 1 1244 0 discriminator 2
 1415 001c 0023     		movs	r3, #0
ARM GAS  /tmp/ccCgvysJ.s 			page 83


 1416 001e C363     		str	r3, [r0, #60]
1245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1417              		.loc 1 1245 0 discriminator 2
 1418 0020 2222     		movs	r2, #34
 1419              	.LVL121:
 1420 0022 80F83A20 		strb	r2, [r0, #58]
1248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1421              		.loc 1 1248 0 discriminator 2
 1422 0026 80F83830 		strb	r3, [r0, #56]
1251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1423              		.loc 1 1251 0 discriminator 2
 1424 002a 0168     		ldr	r1, [r0]
 1425              	.LVL122:
 1426 002c CA68     		ldr	r2, [r1, #12]
 1427 002e 42F48072 		orr	r2, r2, #256
 1428 0032 CA60     		str	r2, [r1, #12]
 1429              	.LVL123:
1254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1430              		.loc 1 1254 0 discriminator 2
 1431 0034 0168     		ldr	r1, [r0]
 1432 0036 4A69     		ldr	r2, [r1, #20]
 1433 0038 42F00102 		orr	r2, r2, #1
 1434 003c 4A61     		str	r2, [r1, #20]
1257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1435              		.loc 1 1257 0 discriminator 2
 1436 003e 0168     		ldr	r1, [r0]
 1437 0040 CA68     		ldr	r2, [r1, #12]
 1438 0042 42F02002 		orr	r2, r2, #32
 1439 0046 CA60     		str	r2, [r1, #12]
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1440              		.loc 1 1259 0 discriminator 2
 1441 0048 1846     		mov	r0, r3
 1442              	.LVL124:
 1443 004a 7047     		bx	lr
 1444              	.LVL125:
 1445              	.L94:
1263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1446              		.loc 1 1263 0
 1447 004c 0220     		movs	r0, #2
 1448              	.LVL126:
 1449 004e 7047     		bx	lr
 1450              	.LVL127:
 1451              	.L95:
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1452              		.loc 1 1234 0
 1453 0050 0120     		movs	r0, #1
 1454              	.LVL128:
 1455 0052 7047     		bx	lr
 1456              	.LVL129:
 1457              	.L96:
 1458 0054 0120     		movs	r0, #1
 1459              	.LVL130:
 1460 0056 7047     		bx	lr
 1461              	.LVL131:
 1462              	.L97:
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1463              		.loc 1 1238 0
ARM GAS  /tmp/ccCgvysJ.s 			page 84


 1464 0058 0220     		movs	r0, #2
 1465              	.LVL132:
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1466              		.loc 1 1265 0
 1467 005a 7047     		bx	lr
 1468              		.cfi_endproc
 1469              	.LFE82:
 1471              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1472              		.align	2
 1473              		.global	HAL_UART_Transmit_DMA
 1474              		.thumb
 1475              		.thumb_func
 1477              	HAL_UART_Transmit_DMA:
 1478              	.LFB83:
1276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t *tmp;
 1479              		.loc 1 1276 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 1483              	.LVL133:
 1484 0000 38B5     		push	{r3, r4, r5, lr}
 1485              	.LCFI18:
 1486              		.cfi_def_cfa_offset 16
 1487              		.cfi_offset 3, -16
 1488              		.cfi_offset 4, -12
 1489              		.cfi_offset 5, -8
 1490              		.cfi_offset 14, -4
1280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1491              		.loc 1 1280 0
 1492 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1493 0006 E4B2     		uxtb	r4, r4
 1494 0008 202C     		cmp	r4, #32
 1495 000a 31D1     		bne	.L100
1282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1496              		.loc 1 1282 0
 1497 000c 0029     		cmp	r1, #0
 1498 000e 31D0     		beq	.L101
1282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1499              		.loc 1 1282 0 is_stmt 0 discriminator 1
 1500 0010 002A     		cmp	r2, #0
 1501 0012 31D0     		beq	.L102
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1502              		.loc 1 1288 0 is_stmt 1
 1503 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1504 0018 012B     		cmp	r3, #1
 1505 001a 2FD0     		beq	.L103
 1506 001c 1346     		mov	r3, r2
 1507 001e 0446     		mov	r4, r0
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1508              		.loc 1 1288 0 is_stmt 0 discriminator 2
 1509 0020 0122     		movs	r2, #1
 1510              	.LVL134:
 1511 0022 80F83820 		strb	r2, [r0, #56]
1290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1512              		.loc 1 1290 0 is_stmt 1 discriminator 2
 1513 0026 0162     		str	r1, [r0, #32]
1291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->TxXferCount = Size;
ARM GAS  /tmp/ccCgvysJ.s 			page 85


 1514              		.loc 1 1291 0 discriminator 2
 1515 0028 8384     		strh	r3, [r0, #36]	@ movhi
1292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1516              		.loc 1 1292 0 discriminator 2
 1517 002a C384     		strh	r3, [r0, #38]	@ movhi
1294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1518              		.loc 1 1294 0 discriminator 2
 1519 002c 0025     		movs	r5, #0
 1520 002e C563     		str	r5, [r0, #60]
1295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1521              		.loc 1 1295 0 discriminator 2
 1522 0030 2122     		movs	r2, #33
 1523 0032 80F83920 		strb	r2, [r0, #57]
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1524              		.loc 1 1298 0 discriminator 2
 1525 0036 026B     		ldr	r2, [r0, #48]
 1526 0038 1148     		ldr	r0, .L105
 1527              	.LVL135:
 1528 003a 9062     		str	r0, [r2, #40]
1301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1529              		.loc 1 1301 0 discriminator 2
 1530 003c 226B     		ldr	r2, [r4, #48]
 1531 003e 1148     		ldr	r0, .L105+4
 1532 0040 D062     		str	r0, [r2, #44]
1304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1533              		.loc 1 1304 0 discriminator 2
 1534 0042 226B     		ldr	r2, [r4, #48]
 1535 0044 1048     		ldr	r0, .L105+8
 1536 0046 1063     		str	r0, [r2, #48]
1307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1537              		.loc 1 1307 0 discriminator 2
 1538 0048 226B     		ldr	r2, [r4, #48]
 1539 004a 5563     		str	r5, [r2, #52]
 1540              	.LVL136:
1311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1541              		.loc 1 1311 0 discriminator 2
 1542 004c 2268     		ldr	r2, [r4]
 1543 004e 0432     		adds	r2, r2, #4
 1544 0050 206B     		ldr	r0, [r4, #48]
 1545 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1546              	.LVL137:
1314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1547              		.loc 1 1314 0 discriminator 2
 1548 0056 2368     		ldr	r3, [r4]
 1549 0058 6FF04002 		mvn	r2, #64
 1550 005c 1A60     		str	r2, [r3]
1317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1551              		.loc 1 1317 0 discriminator 2
 1552 005e 84F83850 		strb	r5, [r4, #56]
1321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1553              		.loc 1 1321 0 discriminator 2
 1554 0062 2268     		ldr	r2, [r4]
 1555 0064 5369     		ldr	r3, [r2, #20]
 1556 0066 43F08003 		orr	r3, r3, #128
 1557 006a 5361     		str	r3, [r2, #20]
1323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1558              		.loc 1 1323 0 discriminator 2
ARM GAS  /tmp/ccCgvysJ.s 			page 86


 1559 006c 2846     		mov	r0, r5
 1560 006e 38BD     		pop	{r3, r4, r5, pc}
 1561              	.LVL138:
 1562              	.L100:
1327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1563              		.loc 1 1327 0
 1564 0070 0220     		movs	r0, #2
 1565              	.LVL139:
 1566 0072 38BD     		pop	{r3, r4, r5, pc}
 1567              	.LVL140:
 1568              	.L101:
1284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1569              		.loc 1 1284 0
 1570 0074 0120     		movs	r0, #1
 1571              	.LVL141:
 1572 0076 38BD     		pop	{r3, r4, r5, pc}
 1573              	.LVL142:
 1574              	.L102:
 1575 0078 0120     		movs	r0, #1
 1576              	.LVL143:
 1577 007a 38BD     		pop	{r3, r4, r5, pc}
 1578              	.LVL144:
 1579              	.L103:
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1580              		.loc 1 1288 0
 1581 007c 0220     		movs	r0, #2
 1582              	.LVL145:
1329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1583              		.loc 1 1329 0
 1584 007e 38BD     		pop	{r3, r4, r5, pc}
 1585              	.L106:
 1586              		.align	2
 1587              	.L105:
 1588 0080 00000000 		.word	UART_DMATransmitCplt
 1589 0084 00000000 		.word	UART_DMATxHalfCplt
 1590 0088 00000000 		.word	UART_DMAError
 1591              		.cfi_endproc
 1592              	.LFE83:
 1594              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1595              		.align	2
 1596              		.global	HAL_UART_Receive_DMA
 1597              		.thumb
 1598              		.thumb_func
 1600              	HAL_UART_Receive_DMA:
 1601              	.LFB84:
1341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t *tmp;
 1602              		.loc 1 1341 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 8
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 1606              	.LVL146:
 1607 0000 30B5     		push	{r4, r5, lr}
 1608              	.LCFI19:
 1609              		.cfi_def_cfa_offset 12
 1610              		.cfi_offset 4, -12
 1611              		.cfi_offset 5, -8
 1612              		.cfi_offset 14, -4
ARM GAS  /tmp/ccCgvysJ.s 			page 87


 1613 0002 83B0     		sub	sp, sp, #12
 1614              	.LCFI20:
 1615              		.cfi_def_cfa_offset 24
1345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1616              		.loc 1 1345 0
 1617 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1618 0008 E4B2     		uxtb	r4, r4
 1619 000a 202C     		cmp	r4, #32
 1620 000c 3DD1     		bne	.L109
1347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1621              		.loc 1 1347 0
 1622 000e 0029     		cmp	r1, #0
 1623 0010 3DD0     		beq	.L110
1347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1624              		.loc 1 1347 0 is_stmt 0 discriminator 1
 1625 0012 002A     		cmp	r2, #0
 1626 0014 3DD0     		beq	.L111
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1627              		.loc 1 1353 0 is_stmt 1
 1628 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1629 001a 012B     		cmp	r3, #1
 1630 001c 3BD0     		beq	.L112
 1631 001e 1346     		mov	r3, r2
 1632 0020 0A46     		mov	r2, r1
 1633              	.LVL147:
 1634 0022 0446     		mov	r4, r0
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1635              		.loc 1 1353 0 is_stmt 0 discriminator 2
 1636 0024 0121     		movs	r1, #1
 1637              	.LVL148:
 1638 0026 80F83810 		strb	r1, [r0, #56]
1355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1639              		.loc 1 1355 0 is_stmt 1 discriminator 2
 1640 002a 8262     		str	r2, [r0, #40]
1356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1641              		.loc 1 1356 0 discriminator 2
 1642 002c 8385     		strh	r3, [r0, #44]	@ movhi
1358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1643              		.loc 1 1358 0 discriminator 2
 1644 002e 0025     		movs	r5, #0
 1645 0030 C563     		str	r5, [r0, #60]
1359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1646              		.loc 1 1359 0 discriminator 2
 1647 0032 2221     		movs	r1, #34
 1648 0034 80F83A10 		strb	r1, [r0, #58]
1362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1649              		.loc 1 1362 0 discriminator 2
 1650 0038 416B     		ldr	r1, [r0, #52]
 1651 003a 1848     		ldr	r0, .L114
 1652              	.LVL149:
 1653 003c 8862     		str	r0, [r1, #40]
1365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1654              		.loc 1 1365 0 discriminator 2
 1655 003e 616B     		ldr	r1, [r4, #52]
 1656 0040 1748     		ldr	r0, .L114+4
 1657 0042 C862     		str	r0, [r1, #44]
1368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 88


 1658              		.loc 1 1368 0 discriminator 2
 1659 0044 616B     		ldr	r1, [r4, #52]
 1660 0046 1748     		ldr	r0, .L114+8
 1661 0048 0863     		str	r0, [r1, #48]
1371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1662              		.loc 1 1371 0 discriminator 2
 1663 004a 616B     		ldr	r1, [r4, #52]
 1664 004c 4D63     		str	r5, [r1, #52]
 1665              	.LVL150:
1375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1666              		.loc 1 1375 0 discriminator 2
 1667 004e 2168     		ldr	r1, [r4]
 1668 0050 0431     		adds	r1, r1, #4
 1669 0052 606B     		ldr	r0, [r4, #52]
 1670 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1671              	.LVL151:
 1672              	.LBB2:
1378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1673              		.loc 1 1378 0 discriminator 2
 1674 0058 0195     		str	r5, [sp, #4]
 1675 005a 2368     		ldr	r3, [r4]
 1676 005c 1A68     		ldr	r2, [r3]
 1677 005e 0192     		str	r2, [sp, #4]
 1678 0060 5A68     		ldr	r2, [r3, #4]
 1679 0062 0192     		str	r2, [sp, #4]
 1680 0064 019A     		ldr	r2, [sp, #4]
 1681              	.LBE2:
1381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1682              		.loc 1 1381 0 discriminator 2
 1683 0066 84F83850 		strb	r5, [r4, #56]
1384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1684              		.loc 1 1384 0 discriminator 2
 1685 006a DA68     		ldr	r2, [r3, #12]
 1686 006c 42F48072 		orr	r2, r2, #256
 1687 0070 DA60     		str	r2, [r3, #12]
1387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1688              		.loc 1 1387 0 discriminator 2
 1689 0072 2268     		ldr	r2, [r4]
 1690 0074 5369     		ldr	r3, [r2, #20]
 1691 0076 43F00103 		orr	r3, r3, #1
 1692 007a 5361     		str	r3, [r2, #20]
1391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1693              		.loc 1 1391 0 discriminator 2
 1694 007c 2268     		ldr	r2, [r4]
 1695 007e 5369     		ldr	r3, [r2, #20]
 1696 0080 43F04003 		orr	r3, r3, #64
 1697 0084 5361     		str	r3, [r2, #20]
1393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1698              		.loc 1 1393 0 discriminator 2
 1699 0086 2846     		mov	r0, r5
 1700 0088 06E0     		b	.L108
 1701              	.LVL152:
 1702              	.L109:
1397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1703              		.loc 1 1397 0
 1704 008a 0220     		movs	r0, #2
 1705              	.LVL153:
ARM GAS  /tmp/ccCgvysJ.s 			page 89


 1706 008c 04E0     		b	.L108
 1707              	.LVL154:
 1708              	.L110:
1349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1709              		.loc 1 1349 0
 1710 008e 0120     		movs	r0, #1
 1711              	.LVL155:
 1712 0090 02E0     		b	.L108
 1713              	.LVL156:
 1714              	.L111:
 1715 0092 0120     		movs	r0, #1
 1716              	.LVL157:
 1717 0094 00E0     		b	.L108
 1718              	.LVL158:
 1719              	.L112:
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1720              		.loc 1 1353 0
 1721 0096 0220     		movs	r0, #2
 1722              	.LVL159:
 1723              	.L108:
1399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1724              		.loc 1 1399 0
 1725 0098 03B0     		add	sp, sp, #12
 1726              	.LCFI21:
 1727              		.cfi_def_cfa_offset 12
 1728              		@ sp needed
 1729 009a 30BD     		pop	{r4, r5, pc}
 1730              	.L115:
 1731              		.align	2
 1732              	.L114:
 1733 009c 00000000 		.word	UART_DMAReceiveCplt
 1734 00a0 00000000 		.word	UART_DMARxHalfCplt
 1735 00a4 00000000 		.word	UART_DMAError
 1736              		.cfi_endproc
 1737              	.LFE84:
 1739              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1740              		.align	2
 1741              		.global	HAL_UART_DMAPause
 1742              		.thumb
 1743              		.thumb_func
 1745              	HAL_UART_DMAPause:
 1746              	.LFB85:
1408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1747              		.loc 1 1408 0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              		@ link register save eliminated.
 1752              	.LVL160:
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1753              		.loc 1 1412 0
 1754 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1755 0004 012B     		cmp	r3, #1
 1756 0006 2DD0     		beq	.L120
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1757              		.loc 1 1412 0 is_stmt 0 discriminator 2
 1758 0008 0123     		movs	r3, #1
ARM GAS  /tmp/ccCgvysJ.s 			page 90


 1759 000a 80F83830 		strb	r3, [r0, #56]
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1760              		.loc 1 1414 0 is_stmt 1 discriminator 2
 1761 000e 0168     		ldr	r1, [r0]
 1762 0010 4B69     		ldr	r3, [r1, #20]
 1763 0012 03F08002 		and	r2, r3, #128
 1764              	.LVL161:
1415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1765              		.loc 1 1415 0 discriminator 2
 1766 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1767 001a DBB2     		uxtb	r3, r3
 1768 001c 212B     		cmp	r3, #33
 1769 001e 04D1     		bne	.L118
1415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1770              		.loc 1 1415 0 is_stmt 0 discriminator 1
 1771 0020 1AB1     		cbz	r2, .L118
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1772              		.loc 1 1418 0 is_stmt 1
 1773 0022 4B69     		ldr	r3, [r1, #20]
 1774 0024 23F08003 		bic	r3, r3, #128
 1775 0028 4B61     		str	r3, [r1, #20]
 1776              	.L118:
1421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1777              		.loc 1 1421 0
 1778 002a 0168     		ldr	r1, [r0]
 1779 002c 4B69     		ldr	r3, [r1, #20]
 1780 002e 03F04002 		and	r2, r3, #64
 1781              	.LVL162:
1422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1782              		.loc 1 1422 0
 1783 0032 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1784 0036 DBB2     		uxtb	r3, r3
 1785 0038 222B     		cmp	r3, #34
 1786 003a 0ED1     		bne	.L119
1422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1787              		.loc 1 1422 0 is_stmt 0 discriminator 1
 1788 003c 6AB1     		cbz	r2, .L119
1425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1789              		.loc 1 1425 0 is_stmt 1
 1790 003e CB68     		ldr	r3, [r1, #12]
 1791 0040 23F48073 		bic	r3, r3, #256
 1792 0044 CB60     		str	r3, [r1, #12]
1426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1793              		.loc 1 1426 0
 1794 0046 0268     		ldr	r2, [r0]
 1795              	.LVL163:
 1796 0048 5369     		ldr	r3, [r2, #20]
 1797 004a 23F00103 		bic	r3, r3, #1
 1798 004e 5361     		str	r3, [r2, #20]
1429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1799              		.loc 1 1429 0
 1800 0050 0268     		ldr	r2, [r0]
 1801 0052 5369     		ldr	r3, [r2, #20]
 1802 0054 23F04003 		bic	r3, r3, #64
 1803 0058 5361     		str	r3, [r2, #20]
 1804              	.L119:
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 91


 1805              		.loc 1 1433 0
 1806 005a 0023     		movs	r3, #0
 1807 005c 80F83830 		strb	r3, [r0, #56]
1435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 1808              		.loc 1 1435 0
 1809 0060 1846     		mov	r0, r3
 1810              	.LVL164:
 1811 0062 7047     		bx	lr
 1812              	.LVL165:
 1813              	.L120:
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1814              		.loc 1 1412 0
 1815 0064 0220     		movs	r0, #2
 1816              	.LVL166:
1436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1817              		.loc 1 1436 0
 1818 0066 7047     		bx	lr
 1819              		.cfi_endproc
 1820              	.LFE85:
 1822              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1823              		.align	2
 1824              		.global	HAL_UART_DMAResume
 1825              		.thumb
 1826              		.thumb_func
 1828              	HAL_UART_DMAResume:
 1829              	.LFB86:
1445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
 1830              		.loc 1 1445 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 8
 1833              		@ frame_needed = 0, uses_anonymous_args = 0
 1834              		@ link register save eliminated.
 1835              	.LVL167:
1447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1836              		.loc 1 1447 0
 1837 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1838 0004 012B     		cmp	r3, #1
 1839 0006 2DD0     		beq	.L125
1447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1840              		.loc 1 1447 0 is_stmt 0 discriminator 2
 1841 0008 0123     		movs	r3, #1
 1842 000a 80F83830 		strb	r3, [r0, #56]
1449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1843              		.loc 1 1449 0 is_stmt 1 discriminator 2
 1844 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1845 0012 DBB2     		uxtb	r3, r3
 1846 0014 212B     		cmp	r3, #33
 1847 0016 04D1     		bne	.L123
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1848              		.loc 1 1452 0
 1849 0018 0268     		ldr	r2, [r0]
 1850 001a 5369     		ldr	r3, [r2, #20]
 1851 001c 43F08003 		orr	r3, r3, #128
 1852 0020 5361     		str	r3, [r2, #20]
 1853              	.L123:
1455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1854              		.loc 1 1455 0
ARM GAS  /tmp/ccCgvysJ.s 			page 92


 1855 0022 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1856 0026 DBB2     		uxtb	r3, r3
 1857 0028 222B     		cmp	r3, #34
 1858 002a 1FD1     		bne	.L127
1445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Process Locked */
 1859              		.loc 1 1445 0
 1860 002c 82B0     		sub	sp, sp, #8
 1861              	.LCFI22:
 1862              		.cfi_def_cfa_offset 8
 1863              	.LBB3:
1458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1864              		.loc 1 1458 0
 1865 002e 0023     		movs	r3, #0
 1866 0030 0193     		str	r3, [sp, #4]
 1867 0032 0368     		ldr	r3, [r0]
 1868 0034 1A68     		ldr	r2, [r3]
 1869 0036 0192     		str	r2, [sp, #4]
 1870 0038 5A68     		ldr	r2, [r3, #4]
 1871 003a 0192     		str	r2, [sp, #4]
 1872 003c 019A     		ldr	r2, [sp, #4]
 1873              	.LBE3:
1461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1874              		.loc 1 1461 0
 1875 003e DA68     		ldr	r2, [r3, #12]
 1876 0040 42F48072 		orr	r2, r2, #256
 1877 0044 DA60     		str	r2, [r3, #12]
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1878              		.loc 1 1462 0
 1879 0046 0268     		ldr	r2, [r0]
 1880 0048 5369     		ldr	r3, [r2, #20]
 1881 004a 43F00103 		orr	r3, r3, #1
 1882 004e 5361     		str	r3, [r2, #20]
1465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1883              		.loc 1 1465 0
 1884 0050 0268     		ldr	r2, [r0]
 1885 0052 5369     		ldr	r3, [r2, #20]
 1886 0054 43F04003 		orr	r3, r3, #64
 1887 0058 5361     		str	r3, [r2, #20]
1469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1888              		.loc 1 1469 0
 1889 005a 0023     		movs	r3, #0
 1890 005c 80F83830 		strb	r3, [r0, #56]
1471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 1891              		.loc 1 1471 0
 1892 0060 1846     		mov	r0, r3
 1893              	.LVL168:
 1894 0062 01E0     		b	.L122
 1895              	.LVL169:
 1896              	.L125:
 1897              	.LCFI23:
 1898              		.cfi_def_cfa_offset 0
1447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1899              		.loc 1 1447 0
 1900 0064 0220     		movs	r0, #2
 1901              	.LVL170:
 1902 0066 7047     		bx	lr
 1903              	.L122:
ARM GAS  /tmp/ccCgvysJ.s 			page 93


 1904              	.LCFI24:
 1905              		.cfi_def_cfa_offset 8
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1906              		.loc 1 1472 0
 1907 0068 02B0     		add	sp, sp, #8
 1908              	.LCFI25:
 1909              		.cfi_def_cfa_offset 0
 1910              		@ sp needed
 1911 006a 7047     		bx	lr
 1912              	.LVL171:
 1913              	.L127:
1469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1914              		.loc 1 1469 0
 1915 006c 0023     		movs	r3, #0
 1916 006e 80F83830 		strb	r3, [r0, #56]
1471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 1917              		.loc 1 1471 0
 1918 0072 1846     		mov	r0, r3
 1919              	.LVL172:
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1920              		.loc 1 1472 0
 1921 0074 7047     		bx	lr
 1922              		.cfi_endproc
 1923              	.LFE86:
 1925 0076 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1926              		.align	2
 1927              		.global	HAL_UART_DMAStop
 1928              		.thumb
 1929              		.thumb_func
 1931              	HAL_UART_DMAStop:
 1932              	.LFB87:
1481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1933              		.loc 1 1481 0
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 0
 1936              		@ frame_needed = 0, uses_anonymous_args = 0
 1937              	.LVL173:
 1938 0000 10B5     		push	{r4, lr}
 1939              	.LCFI26:
 1940              		.cfi_def_cfa_offset 8
 1941              		.cfi_offset 4, -8
 1942              		.cfi_offset 14, -4
 1943 0002 0446     		mov	r4, r0
 1944              	.LVL174:
1490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1945              		.loc 1 1490 0
 1946 0004 0168     		ldr	r1, [r0]
 1947 0006 4B69     		ldr	r3, [r1, #20]
 1948 0008 03F08002 		and	r2, r3, #128
 1949              	.LVL175:
1491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1950              		.loc 1 1491 0
 1951 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1952 0010 DBB2     		uxtb	r3, r3
 1953 0012 212B     		cmp	r3, #33
 1954 0014 0BD1     		bne	.L130
1491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccCgvysJ.s 			page 94


 1955              		.loc 1 1491 0 is_stmt 0 discriminator 1
 1956 0016 52B1     		cbz	r2, .L130
1493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1957              		.loc 1 1493 0 is_stmt 1
 1958 0018 4B69     		ldr	r3, [r1, #20]
 1959 001a 23F08003 		bic	r3, r3, #128
 1960 001e 4B61     		str	r3, [r1, #20]
1496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1961              		.loc 1 1496 0
 1962 0020 006B     		ldr	r0, [r0, #48]
 1963              	.LVL176:
 1964 0022 08B1     		cbz	r0, .L131
1498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1965              		.loc 1 1498 0
 1966 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 1967              	.LVL177:
 1968              	.L131:
1500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1969              		.loc 1 1500 0
 1970 0028 2046     		mov	r0, r4
 1971 002a FFF7FEFF 		bl	UART_EndTxTransfer
 1972              	.LVL178:
 1973              	.L130:
1504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1974              		.loc 1 1504 0
 1975 002e 2168     		ldr	r1, [r4]
 1976 0030 4B69     		ldr	r3, [r1, #20]
 1977 0032 03F04002 		and	r2, r3, #64
 1978              	.LVL179:
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1979              		.loc 1 1505 0
 1980 0036 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 1981 003a DBB2     		uxtb	r3, r3
 1982 003c 222B     		cmp	r3, #34
 1983 003e 0BD1     		bne	.L132
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 1984              		.loc 1 1505 0 is_stmt 0 discriminator 1
 1985 0040 52B1     		cbz	r2, .L132
1507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 1986              		.loc 1 1507 0 is_stmt 1
 1987 0042 4B69     		ldr	r3, [r1, #20]
 1988 0044 23F04003 		bic	r3, r3, #64
 1989 0048 4B61     		str	r3, [r1, #20]
1510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 1990              		.loc 1 1510 0
 1991 004a 606B     		ldr	r0, [r4, #52]
 1992 004c 08B1     		cbz	r0, .L133
1512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 1993              		.loc 1 1512 0
 1994 004e FFF7FEFF 		bl	HAL_DMA_Abort
 1995              	.LVL180:
 1996              	.L133:
1514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 1997              		.loc 1 1514 0
 1998 0052 2046     		mov	r0, r4
 1999 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 2000              	.LVL181:
ARM GAS  /tmp/ccCgvysJ.s 			page 95


 2001              	.L132:
1518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2002              		.loc 1 1518 0
 2003 0058 0020     		movs	r0, #0
 2004 005a 10BD     		pop	{r4, pc}
 2005              		.cfi_endproc
 2006              	.LFE87:
 2008              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2009              		.align	2
 2010              		.global	HAL_UART_Abort
 2011              		.thumb
 2012              		.thumb_func
 2014              	HAL_UART_Abort:
 2015              	.LFB88:
1533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2016              		.loc 1 1533 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020              	.LVL182:
 2021 0000 10B5     		push	{r4, lr}
 2022              	.LCFI27:
 2023              		.cfi_def_cfa_offset 8
 2024              		.cfi_offset 4, -8
 2025              		.cfi_offset 14, -4
 2026 0002 0446     		mov	r4, r0
1535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2027              		.loc 1 1535 0
 2028 0004 0268     		ldr	r2, [r0]
 2029 0006 D368     		ldr	r3, [r2, #12]
 2030 0008 23F4F073 		bic	r3, r3, #480
 2031 000c D360     		str	r3, [r2, #12]
1536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2032              		.loc 1 1536 0
 2033 000e 0268     		ldr	r2, [r0]
 2034 0010 5369     		ldr	r3, [r2, #20]
 2035 0012 23F00103 		bic	r3, r3, #1
 2036 0016 5361     		str	r3, [r2, #20]
1539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2037              		.loc 1 1539 0
 2038 0018 0368     		ldr	r3, [r0]
 2039 001a 5A69     		ldr	r2, [r3, #20]
 2040 001c 12F0800F 		tst	r2, #128
 2041 0020 14D0     		beq	.L136
1541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2042              		.loc 1 1541 0
 2043 0022 5A69     		ldr	r2, [r3, #20]
 2044 0024 22F08002 		bic	r2, r2, #128
 2045 0028 5A61     		str	r2, [r3, #20]
1544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2046              		.loc 1 1544 0
 2047 002a 036B     		ldr	r3, [r0, #48]
 2048 002c 73B1     		cbz	r3, .L136
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2049              		.loc 1 1548 0
 2050 002e 0022     		movs	r2, #0
 2051 0030 5A63     		str	r2, [r3, #52]
ARM GAS  /tmp/ccCgvysJ.s 			page 96


1550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2052              		.loc 1 1550 0
 2053 0032 006B     		ldr	r0, [r0, #48]
 2054              	.LVL183:
 2055 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2056              	.LVL184:
 2057 0038 40B1     		cbz	r0, .L136
1552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 2058              		.loc 1 1552 0
 2059 003a 206B     		ldr	r0, [r4, #48]
 2060 003c FFF7FEFF 		bl	HAL_DMA_GetError
 2061              	.LVL185:
 2062 0040 2028     		cmp	r0, #32
 2063 0042 03D1     		bne	.L136
1555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2064              		.loc 1 1555 0
 2065 0044 1023     		movs	r3, #16
 2066 0046 E363     		str	r3, [r4, #60]
1557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 2067              		.loc 1 1557 0
 2068 0048 0320     		movs	r0, #3
 2069 004a 10BD     		pop	{r4, pc}
 2070              	.LVL186:
 2071              	.L136:
1564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2072              		.loc 1 1564 0
 2073 004c 2368     		ldr	r3, [r4]
 2074 004e 5A69     		ldr	r2, [r3, #20]
 2075 0050 12F0400F 		tst	r2, #64
 2076 0054 14D0     		beq	.L138
1566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2077              		.loc 1 1566 0
 2078 0056 5A69     		ldr	r2, [r3, #20]
 2079 0058 22F04002 		bic	r2, r2, #64
 2080 005c 5A61     		str	r2, [r3, #20]
1569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2081              		.loc 1 1569 0
 2082 005e 636B     		ldr	r3, [r4, #52]
 2083 0060 73B1     		cbz	r3, .L138
1573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2084              		.loc 1 1573 0
 2085 0062 0022     		movs	r2, #0
 2086 0064 5A63     		str	r2, [r3, #52]
1575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2087              		.loc 1 1575 0
 2088 0066 606B     		ldr	r0, [r4, #52]
 2089 0068 FFF7FEFF 		bl	HAL_DMA_Abort
 2090              	.LVL187:
 2091 006c 40B1     		cbz	r0, .L138
1577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 2092              		.loc 1 1577 0
 2093 006e 606B     		ldr	r0, [r4, #52]
 2094 0070 FFF7FEFF 		bl	HAL_DMA_GetError
 2095              	.LVL188:
 2096 0074 2028     		cmp	r0, #32
 2097 0076 03D1     		bne	.L138
1580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 97


 2098              		.loc 1 1580 0
 2099 0078 1023     		movs	r3, #16
 2100 007a E363     		str	r3, [r4, #60]
1582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 2101              		.loc 1 1582 0
 2102 007c 0320     		movs	r0, #3
 2103 007e 10BD     		pop	{r4, pc}
 2104              	.LVL189:
 2105              	.L138:
1589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2106              		.loc 1 1589 0
 2107 0080 0020     		movs	r0, #0
 2108 0082 E084     		strh	r0, [r4, #38]	@ movhi
1590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2109              		.loc 1 1590 0
 2110 0084 E085     		strh	r0, [r4, #46]	@ movhi
1593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2111              		.loc 1 1593 0
 2112 0086 E063     		str	r0, [r4, #60]
1596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2113              		.loc 1 1596 0
 2114 0088 2023     		movs	r3, #32
 2115 008a 84F83A30 		strb	r3, [r4, #58]
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2116              		.loc 1 1597 0
 2117 008e 84F83930 		strb	r3, [r4, #57]
1600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2118              		.loc 1 1600 0
 2119 0092 10BD     		pop	{r4, pc}
 2120              		.cfi_endproc
 2121              	.LFE88:
 2123              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2124              		.align	2
 2125              		.global	HAL_UART_AbortTransmit
 2126              		.thumb
 2127              		.thumb_func
 2129              	HAL_UART_AbortTransmit:
 2130              	.LFB89:
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2131              		.loc 1 1615 0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 0, uses_anonymous_args = 0
 2135              	.LVL190:
 2136 0000 10B5     		push	{r4, lr}
 2137              	.LCFI28:
 2138              		.cfi_def_cfa_offset 8
 2139              		.cfi_offset 4, -8
 2140              		.cfi_offset 14, -4
 2141 0002 0446     		mov	r4, r0
1617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2142              		.loc 1 1617 0
 2143 0004 0268     		ldr	r2, [r0]
 2144 0006 D368     		ldr	r3, [r2, #12]
 2145 0008 23F0C003 		bic	r3, r3, #192
 2146 000c D360     		str	r3, [r2, #12]
1620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccCgvysJ.s 			page 98


 2147              		.loc 1 1620 0
 2148 000e 0368     		ldr	r3, [r0]
 2149 0010 5A69     		ldr	r2, [r3, #20]
 2150 0012 12F0800F 		tst	r2, #128
 2151 0016 14D0     		beq	.L141
1622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2152              		.loc 1 1622 0
 2153 0018 5A69     		ldr	r2, [r3, #20]
 2154 001a 22F08002 		bic	r2, r2, #128
 2155 001e 5A61     		str	r2, [r3, #20]
1625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2156              		.loc 1 1625 0
 2157 0020 036B     		ldr	r3, [r0, #48]
 2158 0022 73B1     		cbz	r3, .L141
1629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2159              		.loc 1 1629 0
 2160 0024 0022     		movs	r2, #0
 2161 0026 5A63     		str	r2, [r3, #52]
1631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2162              		.loc 1 1631 0
 2163 0028 006B     		ldr	r0, [r0, #48]
 2164              	.LVL191:
 2165 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2166              	.LVL192:
 2167 002e 40B1     		cbz	r0, .L141
1633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 2168              		.loc 1 1633 0
 2169 0030 206B     		ldr	r0, [r4, #48]
 2170 0032 FFF7FEFF 		bl	HAL_DMA_GetError
 2171              	.LVL193:
 2172 0036 2028     		cmp	r0, #32
 2173 0038 03D1     		bne	.L141
1636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2174              		.loc 1 1636 0
 2175 003a 1023     		movs	r3, #16
 2176 003c E363     		str	r3, [r4, #60]
1638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 2177              		.loc 1 1638 0
 2178 003e 0320     		movs	r0, #3
 2179 0040 10BD     		pop	{r4, pc}
 2180              	.LVL194:
 2181              	.L141:
1645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2182              		.loc 1 1645 0
 2183 0042 0020     		movs	r0, #0
 2184 0044 E084     		strh	r0, [r4, #38]	@ movhi
1648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2185              		.loc 1 1648 0
 2186 0046 2023     		movs	r3, #32
 2187 0048 84F83930 		strb	r3, [r4, #57]
1651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2188              		.loc 1 1651 0
 2189 004c 10BD     		pop	{r4, pc}
 2190              		.cfi_endproc
 2191              	.LFE89:
 2193 004e 00BF     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2194              		.align	2
ARM GAS  /tmp/ccCgvysJ.s 			page 99


 2195              		.global	HAL_UART_AbortReceive
 2196              		.thumb
 2197              		.thumb_func
 2199              	HAL_UART_AbortReceive:
 2200              	.LFB90:
1666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2201              		.loc 1 1666 0
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 0
 2204              		@ frame_needed = 0, uses_anonymous_args = 0
 2205              	.LVL195:
 2206 0000 10B5     		push	{r4, lr}
 2207              	.LCFI29:
 2208              		.cfi_def_cfa_offset 8
 2209              		.cfi_offset 4, -8
 2210              		.cfi_offset 14, -4
 2211 0002 0446     		mov	r4, r0
1668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2212              		.loc 1 1668 0
 2213 0004 0268     		ldr	r2, [r0]
 2214 0006 D368     		ldr	r3, [r2, #12]
 2215 0008 23F49073 		bic	r3, r3, #288
 2216 000c D360     		str	r3, [r2, #12]
1669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2217              		.loc 1 1669 0
 2218 000e 0268     		ldr	r2, [r0]
 2219 0010 5369     		ldr	r3, [r2, #20]
 2220 0012 23F00103 		bic	r3, r3, #1
 2221 0016 5361     		str	r3, [r2, #20]
1672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2222              		.loc 1 1672 0
 2223 0018 0368     		ldr	r3, [r0]
 2224 001a 5A69     		ldr	r2, [r3, #20]
 2225 001c 12F0400F 		tst	r2, #64
 2226 0020 14D0     		beq	.L145
1674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2227              		.loc 1 1674 0
 2228 0022 5A69     		ldr	r2, [r3, #20]
 2229 0024 22F04002 		bic	r2, r2, #64
 2230 0028 5A61     		str	r2, [r3, #20]
1677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2231              		.loc 1 1677 0
 2232 002a 436B     		ldr	r3, [r0, #52]
 2233 002c 73B1     		cbz	r3, .L145
1681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2234              		.loc 1 1681 0
 2235 002e 0022     		movs	r2, #0
 2236 0030 5A63     		str	r2, [r3, #52]
1683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2237              		.loc 1 1683 0
 2238 0032 406B     		ldr	r0, [r0, #52]
 2239              	.LVL196:
 2240 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2241              	.LVL197:
 2242 0038 40B1     		cbz	r0, .L145
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 2243              		.loc 1 1685 0
ARM GAS  /tmp/ccCgvysJ.s 			page 100


 2244 003a 606B     		ldr	r0, [r4, #52]
 2245 003c FFF7FEFF 		bl	HAL_DMA_GetError
 2246              	.LVL198:
 2247 0040 2028     		cmp	r0, #32
 2248 0042 03D1     		bne	.L145
1688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2249              		.loc 1 1688 0
 2250 0044 1023     		movs	r3, #16
 2251 0046 E363     		str	r3, [r4, #60]
1690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         }
 2252              		.loc 1 1690 0
 2253 0048 0320     		movs	r0, #3
 2254 004a 10BD     		pop	{r4, pc}
 2255              	.LVL199:
 2256              	.L145:
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2257              		.loc 1 1697 0
 2258 004c 0020     		movs	r0, #0
 2259 004e E085     		strh	r0, [r4, #46]	@ movhi
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2260              		.loc 1 1700 0
 2261 0050 2023     		movs	r3, #32
 2262 0052 84F83A30 		strb	r3, [r4, #58]
1703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2263              		.loc 1 1703 0
 2264 0056 10BD     		pop	{r4, pc}
 2265              		.cfi_endproc
 2266              	.LFE90:
 2268              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2269              		.align	2
 2270              		.weak	HAL_UART_TxCpltCallback
 2271              		.thumb
 2272              		.thumb_func
 2274              	HAL_UART_TxCpltCallback:
 2275              	.LFB95:
2141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2276              		.loc 1 2141 0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 0
 2279              		@ frame_needed = 0, uses_anonymous_args = 0
 2280              		@ link register save eliminated.
 2281              	.LVL200:
 2282 0000 7047     		bx	lr
 2283              		.cfi_endproc
 2284              	.LFE95:
 2286 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2287              		.align	2
 2288              		.thumb
 2289              		.thumb_func
 2291              	UART_DMATransmitCplt:
 2292              	.LFB110:
2516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2293              		.loc 1 2516 0
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 0
 2296              		@ frame_needed = 0, uses_anonymous_args = 0
 2297              	.LVL201:
ARM GAS  /tmp/ccCgvysJ.s 			page 101


2516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2298              		.loc 1 2516 0
 2299 0000 08B5     		push	{r3, lr}
 2300              	.LCFI30:
 2301              		.cfi_def_cfa_offset 8
 2302              		.cfi_offset 3, -8
 2303              		.cfi_offset 14, -4
2517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DMA Normal mode*/
 2304              		.loc 1 2517 0
 2305 0002 436A     		ldr	r3, [r0, #36]
 2306              	.LVL202:
2519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2307              		.loc 1 2519 0
 2308 0004 0268     		ldr	r2, [r0]
 2309 0006 1268     		ldr	r2, [r2]
 2310 0008 12F0200F 		tst	r2, #32
 2311 000c 0CD1     		bne	.L150
2521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2312              		.loc 1 2521 0
 2313 000e 0022     		movs	r2, #0
 2314 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2315              		.loc 1 2525 0
 2316 0012 1968     		ldr	r1, [r3]
 2317 0014 4A69     		ldr	r2, [r1, #20]
 2318 0016 22F08002 		bic	r2, r2, #128
 2319 001a 4A61     		str	r2, [r1, #20]
2528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2320              		.loc 1 2528 0
 2321 001c 1A68     		ldr	r2, [r3]
 2322 001e D368     		ldr	r3, [r2, #12]
 2323              	.LVL203:
 2324 0020 43F04003 		orr	r3, r3, #64
 2325 0024 D360     		str	r3, [r2, #12]
 2326 0026 08BD     		pop	{r3, pc}
 2327              	.LVL204:
 2328              	.L150:
2539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2329              		.loc 1 2539 0
 2330 0028 1846     		mov	r0, r3
 2331              	.LVL205:
 2332 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2333              	.LVL206:
 2334 002e 08BD     		pop	{r3, pc}
 2335              		.cfi_endproc
 2336              	.LFE110:
 2338              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2339              		.align	2
 2340              		.thumb
 2341              		.thumb_func
 2343              	UART_EndTransmit_IT:
 2344              	.LFB124:
2941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 2345              		.loc 1 2941 0
 2346              		.cfi_startproc
 2347              		@ args = 0, pretend = 0, frame = 0
 2348              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccCgvysJ.s 			page 102


 2349              	.LVL207:
 2350 0000 08B5     		push	{r3, lr}
 2351              	.LCFI31:
 2352              		.cfi_def_cfa_offset 8
 2353              		.cfi_offset 3, -8
 2354              		.cfi_offset 14, -4
2943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2355              		.loc 1 2943 0
 2356 0002 0168     		ldr	r1, [r0]
 2357 0004 CB68     		ldr	r3, [r1, #12]
 2358 0006 23F04003 		bic	r3, r3, #64
 2359 000a CB60     		str	r3, [r1, #12]
2946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2360              		.loc 1 2946 0
 2361 000c 2023     		movs	r3, #32
 2362 000e 80F83930 		strb	r3, [r0, #57]
2953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2363              		.loc 1 2953 0
 2364 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2365              	.LVL208:
2957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2366              		.loc 1 2957 0
 2367 0016 0020     		movs	r0, #0
 2368 0018 08BD     		pop	{r3, pc}
 2369              		.cfi_endproc
 2370              	.LFE124:
 2372 001a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2373              		.align	2
 2374              		.weak	HAL_UART_TxHalfCpltCallback
 2375              		.thumb
 2376              		.thumb_func
 2378              	HAL_UART_TxHalfCpltCallback:
 2379              	.LFB96:
2156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2380              		.loc 1 2156 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 0
 2383              		@ frame_needed = 0, uses_anonymous_args = 0
 2384              		@ link register save eliminated.
 2385              	.LVL209:
 2386 0000 7047     		bx	lr
 2387              		.cfi_endproc
 2388              	.LFE96:
 2390 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2391              		.align	2
 2392              		.thumb
 2393              		.thumb_func
 2395              	UART_DMATxHalfCplt:
 2396              	.LFB111:
2551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2397              		.loc 1 2551 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 0
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
 2401              	.LVL210:
2551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2402              		.loc 1 2551 0
ARM GAS  /tmp/ccCgvysJ.s 			page 103


 2403 0000 08B5     		push	{r3, lr}
 2404              	.LCFI32:
 2405              		.cfi_def_cfa_offset 8
 2406              		.cfi_offset 3, -8
 2407              		.cfi_offset 14, -4
 2408              	.LVL211:
2559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2409              		.loc 1 2559 0
 2410 0002 406A     		ldr	r0, [r0, #36]
 2411              	.LVL212:
 2412 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2413              	.LVL213:
 2414 0008 08BD     		pop	{r3, pc}
 2415              		.cfi_endproc
 2416              	.LFE111:
 2418 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2419              		.align	2
 2420              		.weak	HAL_UART_RxCpltCallback
 2421              		.thumb
 2422              		.thumb_func
 2424              	HAL_UART_RxCpltCallback:
 2425              	.LFB97:
2171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2426              		.loc 1 2171 0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
 2430              		@ link register save eliminated.
 2431              	.LVL214:
 2432 0000 7047     		bx	lr
 2433              		.cfi_endproc
 2434              	.LFE97:
 2436 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2437              		.align	2
 2438              		.thumb
 2439              		.thumb_func
 2441              	UART_DMAReceiveCplt:
 2442              	.LFB112:
2570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2443              		.loc 1 2570 0
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 0
 2446              		@ frame_needed = 0, uses_anonymous_args = 0
 2447              	.LVL215:
2570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2448              		.loc 1 2570 0
 2449 0000 08B5     		push	{r3, lr}
 2450              	.LCFI33:
 2451              		.cfi_def_cfa_offset 8
 2452              		.cfi_offset 3, -8
 2453              		.cfi_offset 14, -4
2571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* DMA Normal mode*/
 2454              		.loc 1 2571 0
 2455 0002 436A     		ldr	r3, [r0, #36]
 2456              	.LVL216:
2573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2457              		.loc 1 2573 0
ARM GAS  /tmp/ccCgvysJ.s 			page 104


 2458 0004 0268     		ldr	r2, [r0]
 2459 0006 1268     		ldr	r2, [r2]
 2460 0008 12F0200F 		tst	r2, #32
 2461 000c 13D1     		bne	.L160
2575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2462              		.loc 1 2575 0
 2463 000e 0022     		movs	r2, #0
 2464 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2465              		.loc 1 2578 0
 2466 0012 1968     		ldr	r1, [r3]
 2467 0014 CA68     		ldr	r2, [r1, #12]
 2468 0016 22F48072 		bic	r2, r2, #256
 2469 001a CA60     		str	r2, [r1, #12]
2579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2470              		.loc 1 2579 0
 2471 001c 1968     		ldr	r1, [r3]
 2472 001e 4A69     		ldr	r2, [r1, #20]
 2473 0020 22F00102 		bic	r2, r2, #1
 2474 0024 4A61     		str	r2, [r1, #20]
2583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2475              		.loc 1 2583 0
 2476 0026 1968     		ldr	r1, [r3]
 2477 0028 4A69     		ldr	r2, [r1, #20]
 2478 002a 22F04002 		bic	r2, r2, #64
 2479 002e 4A61     		str	r2, [r1, #20]
2586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 2480              		.loc 1 2586 0
 2481 0030 2022     		movs	r2, #32
 2482 0032 83F83A20 		strb	r2, [r3, #58]
 2483              	.L160:
2593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2484              		.loc 1 2593 0
 2485 0036 1846     		mov	r0, r3
 2486              	.LVL217:
 2487 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2488              	.LVL218:
 2489 003c 08BD     		pop	{r3, pc}
 2490              		.cfi_endproc
 2491              	.LFE112:
 2493 003e 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 2494              		.align	2
 2495              		.thumb
 2496              		.thumb_func
 2498              	UART_Receive_IT:
 2499              	.LFB125:
2966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint16_t *tmp;
 2500              		.loc 1 2966 0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 0
 2503              		@ frame_needed = 0, uses_anonymous_args = 0
 2504              	.LVL219:
 2505 0000 08B5     		push	{r3, lr}
 2506              	.LCFI34:
 2507              		.cfi_def_cfa_offset 8
 2508              		.cfi_offset 3, -8
 2509              		.cfi_offset 14, -4
ARM GAS  /tmp/ccCgvysJ.s 			page 105


2970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2510              		.loc 1 2970 0
 2511 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2512 0006 DBB2     		uxtb	r3, r3
 2513 0008 222B     		cmp	r3, #34
 2514 000a 44D1     		bne	.L168
2972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2515              		.loc 1 2972 0
 2516 000c 8368     		ldr	r3, [r0, #8]
 2517 000e B3F5805F 		cmp	r3, #4096
 2518 0012 13D1     		bne	.L164
2974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 2519              		.loc 1 2974 0
 2520 0014 826A     		ldr	r2, [r0, #40]
 2521              	.LVL220:
2975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2522              		.loc 1 2975 0
 2523 0016 0369     		ldr	r3, [r0, #16]
 2524 0018 43B9     		cbnz	r3, .L165
2977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2525              		.loc 1 2977 0
 2526 001a 0368     		ldr	r3, [r0]
 2527 001c 5B68     		ldr	r3, [r3, #4]
 2528 001e C3F30803 		ubfx	r3, r3, #0, #9
 2529 0022 1380     		strh	r3, [r2]	@ movhi
2978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 2530              		.loc 1 2978 0
 2531 0024 836A     		ldr	r3, [r0, #40]
 2532 0026 0233     		adds	r3, r3, #2
 2533 0028 8362     		str	r3, [r0, #40]
 2534 002a 18E0     		b	.L166
 2535              	.L165:
2982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2536              		.loc 1 2982 0
 2537 002c 0368     		ldr	r3, [r0]
 2538 002e 5B68     		ldr	r3, [r3, #4]
 2539 0030 DBB2     		uxtb	r3, r3
 2540 0032 1380     		strh	r3, [r2]	@ movhi
2983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 2541              		.loc 1 2983 0
 2542 0034 836A     		ldr	r3, [r0, #40]
 2543 0036 0133     		adds	r3, r3, #1
 2544 0038 8362     		str	r3, [r0, #40]
 2545 003a 10E0     		b	.L166
 2546              	.LVL221:
 2547              	.L164:
2988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2548              		.loc 1 2988 0
 2549 003c 0369     		ldr	r3, [r0, #16]
 2550 003e 33B9     		cbnz	r3, .L167
2990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 2551              		.loc 1 2990 0
 2552 0040 836A     		ldr	r3, [r0, #40]
 2553 0042 5A1C     		adds	r2, r3, #1
 2554 0044 8262     		str	r2, [r0, #40]
 2555 0046 0268     		ldr	r2, [r0]
 2556 0048 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/ccCgvysJ.s 			page 106


 2557 004a 1A70     		strb	r2, [r3]
 2558 004c 07E0     		b	.L166
 2559              	.L167:
2994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 2560              		.loc 1 2994 0
 2561 004e 826A     		ldr	r2, [r0, #40]
 2562 0050 531C     		adds	r3, r2, #1
 2563 0052 8362     		str	r3, [r0, #40]
 2564 0054 0368     		ldr	r3, [r0]
 2565 0056 5B68     		ldr	r3, [r3, #4]
 2566 0058 03F07F03 		and	r3, r3, #127
 2567 005c 1370     		strb	r3, [r2]
 2568              	.L166:
2998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2569              		.loc 1 2998 0
 2570 005e C38D     		ldrh	r3, [r0, #46]
 2571 0060 9BB2     		uxth	r3, r3
 2572 0062 013B     		subs	r3, r3, #1
 2573 0064 9BB2     		uxth	r3, r3
 2574 0066 C385     		strh	r3, [r0, #46]	@ movhi
 2575 0068 BBB9     		cbnz	r3, .L169
3001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2576              		.loc 1 3001 0
 2577 006a 0268     		ldr	r2, [r0]
 2578 006c D368     		ldr	r3, [r2, #12]
 2579 006e 23F02003 		bic	r3, r3, #32
 2580 0072 D360     		str	r3, [r2, #12]
3004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2581              		.loc 1 3004 0
 2582 0074 0268     		ldr	r2, [r0]
 2583 0076 D368     		ldr	r3, [r2, #12]
 2584 0078 23F48073 		bic	r3, r3, #256
 2585 007c D360     		str	r3, [r2, #12]
3007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2586              		.loc 1 3007 0
 2587 007e 0268     		ldr	r2, [r0]
 2588 0080 5369     		ldr	r3, [r2, #20]
 2589 0082 23F00103 		bic	r3, r3, #1
 2590 0086 5361     		str	r3, [r2, #20]
3010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2591              		.loc 1 3010 0
 2592 0088 2023     		movs	r3, #32
 2593 008a 80F83A30 		strb	r3, [r0, #58]
3017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2594              		.loc 1 3017 0
 2595 008e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2596              	.LVL222:
3020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 2597              		.loc 1 3020 0
 2598 0092 0020     		movs	r0, #0
 2599 0094 08BD     		pop	{r3, pc}
 2600              	.LVL223:
 2601              	.L168:
3026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 2602              		.loc 1 3026 0
 2603 0096 0220     		movs	r0, #2
 2604              	.LVL224:
ARM GAS  /tmp/ccCgvysJ.s 			page 107


 2605 0098 08BD     		pop	{r3, pc}
 2606              	.LVL225:
 2607              	.L169:
3022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 2608              		.loc 1 3022 0
 2609 009a 0020     		movs	r0, #0
 2610              	.LVL226:
3028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2611              		.loc 1 3028 0
 2612 009c 08BD     		pop	{r3, pc}
 2613              		.cfi_endproc
 2614              	.LFE125:
 2616 009e 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2617              		.align	2
 2618              		.weak	HAL_UART_RxHalfCpltCallback
 2619              		.thumb
 2620              		.thumb_func
 2622              	HAL_UART_RxHalfCpltCallback:
 2623              	.LFB98:
2186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2624              		.loc 1 2186 0
 2625              		.cfi_startproc
 2626              		@ args = 0, pretend = 0, frame = 0
 2627              		@ frame_needed = 0, uses_anonymous_args = 0
 2628              		@ link register save eliminated.
 2629              	.LVL227:
 2630 0000 7047     		bx	lr
 2631              		.cfi_endproc
 2632              	.LFE98:
 2634 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2635              		.align	2
 2636              		.thumb
 2637              		.thumb_func
 2639              	UART_DMARxHalfCplt:
 2640              	.LFB113:
2604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2641              		.loc 1 2604 0
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 0
 2644              		@ frame_needed = 0, uses_anonymous_args = 0
 2645              	.LVL228:
2604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2646              		.loc 1 2604 0
 2647 0000 08B5     		push	{r3, lr}
 2648              	.LCFI35:
 2649              		.cfi_def_cfa_offset 8
 2650              		.cfi_offset 3, -8
 2651              		.cfi_offset 14, -4
 2652              	.LVL229:
2612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2653              		.loc 1 2612 0
 2654 0002 406A     		ldr	r0, [r0, #36]
 2655              	.LVL230:
 2656 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2657              	.LVL231:
 2658 0008 08BD     		pop	{r3, pc}
 2659              		.cfi_endproc
ARM GAS  /tmp/ccCgvysJ.s 			page 108


 2660              	.LFE113:
 2662 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2663              		.align	2
 2664              		.weak	HAL_UART_ErrorCallback
 2665              		.thumb
 2666              		.thumb_func
 2668              	HAL_UART_ErrorCallback:
 2669              	.LFB99:
2201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2670              		.loc 1 2201 0
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 0
 2673              		@ frame_needed = 0, uses_anonymous_args = 0
 2674              		@ link register save eliminated.
 2675              	.LVL232:
 2676 0000 7047     		bx	lr
 2677              		.cfi_endproc
 2678              	.LFE99:
 2680 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 2681              		.align	2
 2682              		.thumb
 2683              		.thumb_func
 2685              	UART_DMAError:
 2686              	.LFB114:
2623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2687              		.loc 1 2623 0
 2688              		.cfi_startproc
 2689              		@ args = 0, pretend = 0, frame = 0
 2690              		@ frame_needed = 0, uses_anonymous_args = 0
 2691              	.LVL233:
2623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2692              		.loc 1 2623 0
 2693 0000 10B5     		push	{r4, lr}
 2694              	.LCFI36:
 2695              		.cfi_def_cfa_offset 8
 2696              		.cfi_offset 4, -8
 2697              		.cfi_offset 14, -4
 2698              	.LVL234:
2625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2699              		.loc 1 2625 0
 2700 0002 446A     		ldr	r4, [r0, #36]
 2701              	.LVL235:
2628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2702              		.loc 1 2628 0
 2703 0004 2368     		ldr	r3, [r4]
 2704 0006 5B69     		ldr	r3, [r3, #20]
 2705 0008 03F08002 		and	r2, r3, #128
 2706              	.LVL236:
2629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2707              		.loc 1 2629 0
 2708 000c 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2709 0010 DBB2     		uxtb	r3, r3
 2710 0012 212B     		cmp	r3, #33
 2711 0014 05D1     		bne	.L176
2629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2712              		.loc 1 2629 0 is_stmt 0 discriminator 1
 2713 0016 22B1     		cbz	r2, .L176
ARM GAS  /tmp/ccCgvysJ.s 			page 109


2631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2714              		.loc 1 2631 0 is_stmt 1
 2715 0018 0023     		movs	r3, #0
 2716 001a E384     		strh	r3, [r4, #38]	@ movhi
2632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 2717              		.loc 1 2632 0
 2718 001c 2046     		mov	r0, r4
 2719              	.LVL237:
 2720 001e FFF7FEFF 		bl	UART_EndTxTransfer
 2721              	.LVL238:
 2722              	.L176:
2636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2723              		.loc 1 2636 0
 2724 0022 2368     		ldr	r3, [r4]
 2725 0024 5B69     		ldr	r3, [r3, #20]
 2726 0026 03F04002 		and	r2, r3, #64
 2727              	.LVL239:
2637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2728              		.loc 1 2637 0
 2729 002a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2730 002e DBB2     		uxtb	r3, r3
 2731 0030 222B     		cmp	r3, #34
 2732 0032 05D1     		bne	.L177
2637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2733              		.loc 1 2637 0 is_stmt 0 discriminator 1
 2734 0034 22B1     		cbz	r2, .L177
2639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2735              		.loc 1 2639 0 is_stmt 1
 2736 0036 0023     		movs	r3, #0
 2737 0038 E385     		strh	r3, [r4, #46]	@ movhi
2640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 2738              		.loc 1 2640 0
 2739 003a 2046     		mov	r0, r4
 2740 003c FFF7FEFF 		bl	UART_EndRxTransfer
 2741              	.LVL240:
 2742              	.L177:
2643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 2743              		.loc 1 2643 0
 2744 0040 E36B     		ldr	r3, [r4, #60]
 2745 0042 43F01003 		orr	r3, r3, #16
 2746 0046 E363     		str	r3, [r4, #60]
2649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2747              		.loc 1 2649 0
 2748 0048 2046     		mov	r0, r4
 2749 004a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2750              	.LVL241:
 2751 004e 10BD     		pop	{r4, pc}
 2752              		.cfi_endproc
 2753              	.LFE114:
 2755              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2756              		.align	2
 2757              		.global	HAL_UART_IRQHandler
 2758              		.thumb
 2759              		.thumb_func
 2761              	HAL_UART_IRQHandler:
 2762              	.LFB94:
1995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
ARM GAS  /tmp/ccCgvysJ.s 			page 110


 2763              		.loc 1 1995 0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 0
 2766              		@ frame_needed = 0, uses_anonymous_args = 0
 2767              	.LVL242:
 2768 0000 10B5     		push	{r4, lr}
 2769              	.LCFI37:
 2770              		.cfi_def_cfa_offset 8
 2771              		.cfi_offset 4, -8
 2772              		.cfi_offset 14, -4
 2773 0002 0446     		mov	r4, r0
1996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2774              		.loc 1 1996 0
 2775 0004 0268     		ldr	r2, [r0]
 2776 0006 1368     		ldr	r3, [r2]
 2777              	.LVL243:
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2778              		.loc 1 1997 0
 2779 0008 D168     		ldr	r1, [r2, #12]
 2780              	.LVL244:
1998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 2781              		.loc 1 1998 0
 2782 000a 5269     		ldr	r2, [r2, #20]
 2783              	.LVL245:
2004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2784              		.loc 1 2004 0
 2785 000c 13F00F00 		ands	r0, r3, #15
 2786              	.LVL246:
 2787 0010 09D1     		bne	.L180
2007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2788              		.loc 1 2007 0
 2789 0012 13F0200F 		tst	r3, #32
 2790 0016 06D0     		beq	.L180
2007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2791              		.loc 1 2007 0 is_stmt 0 discriminator 1
 2792 0018 11F0200F 		tst	r1, #32
 2793 001c 03D0     		beq	.L180
2009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       return;
 2794              		.loc 1 2009 0 is_stmt 1
 2795 001e 2046     		mov	r0, r4
 2796              	.LVL247:
 2797 0020 FFF7FEFF 		bl	UART_Receive_IT
 2798              	.LVL248:
2010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 2799              		.loc 1 2010 0
 2800 0024 10BD     		pop	{r4, pc}
 2801              	.LVL249:
 2802              	.L180:
2015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2803              		.loc 1 2015 0
 2804 0026 0028     		cmp	r0, #0
 2805 0028 62D0     		beq	.L182
2015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2806              		.loc 1 2015 0 is_stmt 0 discriminator 1
 2807 002a 12F00102 		ands	r2, r2, #1
 2808              	.LVL250:
 2809 002e 02D1     		bne	.L183
ARM GAS  /tmp/ccCgvysJ.s 			page 111


2015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2810              		.loc 1 2015 0 discriminator 2
 2811 0030 11F4907F 		tst	r1, #288
 2812 0034 5CD0     		beq	.L182
 2813              	.L183:
2018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2814              		.loc 1 2018 0 is_stmt 1
 2815 0036 13F0010F 		tst	r3, #1
 2816 003a 06D0     		beq	.L184
2018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2817              		.loc 1 2018 0 is_stmt 0 discriminator 1
 2818 003c 11F4807F 		tst	r1, #256
 2819 0040 03D0     		beq	.L184
2020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 2820              		.loc 1 2020 0 is_stmt 1
 2821 0042 E06B     		ldr	r0, [r4, #60]
 2822              	.LVL251:
 2823 0044 40F00100 		orr	r0, r0, #1
 2824 0048 E063     		str	r0, [r4, #60]
 2825              	.L184:
2024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2826              		.loc 1 2024 0
 2827 004a 13F0040F 		tst	r3, #4
 2828 004e 04D0     		beq	.L185
2024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2829              		.loc 1 2024 0 is_stmt 0 discriminator 1
 2830 0050 1AB1     		cbz	r2, .L185
2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 2831              		.loc 1 2026 0 is_stmt 1
 2832 0052 E06B     		ldr	r0, [r4, #60]
 2833 0054 40F00200 		orr	r0, r0, #2
 2834 0058 E063     		str	r0, [r4, #60]
 2835              	.L185:
2030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2836              		.loc 1 2030 0
 2837 005a 13F0020F 		tst	r3, #2
 2838 005e 04D0     		beq	.L186
2030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2839              		.loc 1 2030 0 is_stmt 0 discriminator 1
 2840 0060 1AB1     		cbz	r2, .L186
2032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 2841              		.loc 1 2032 0 is_stmt 1
 2842 0062 E06B     		ldr	r0, [r4, #60]
 2843 0064 40F00400 		orr	r0, r0, #4
 2844 0068 E063     		str	r0, [r4, #60]
 2845              	.L186:
2036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2846              		.loc 1 2036 0
 2847 006a 13F0080F 		tst	r3, #8
 2848 006e 04D0     		beq	.L187
2036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2849              		.loc 1 2036 0 is_stmt 0 discriminator 1
 2850 0070 1AB1     		cbz	r2, .L187
2038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 2851              		.loc 1 2038 0 is_stmt 1
 2852 0072 E26B     		ldr	r2, [r4, #60]
 2853 0074 42F00802 		orr	r2, r2, #8
ARM GAS  /tmp/ccCgvysJ.s 			page 112


 2854 0078 E263     		str	r2, [r4, #60]
 2855              	.L187:
2042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 2856              		.loc 1 2042 0
 2857 007a E26B     		ldr	r2, [r4, #60]
 2858 007c 002A     		cmp	r2, #0
 2859 007e 4AD0     		beq	.L179
2045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2860              		.loc 1 2045 0
 2861 0080 13F0200F 		tst	r3, #32
 2862 0084 05D0     		beq	.L188
2045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2863              		.loc 1 2045 0 is_stmt 0 discriminator 1
 2864 0086 11F0200F 		tst	r1, #32
 2865 008a 02D0     		beq	.L188
2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 2866              		.loc 1 2047 0 is_stmt 1
 2867 008c 2046     		mov	r0, r4
 2868 008e FFF7FEFF 		bl	UART_Receive_IT
 2869              	.LVL252:
 2870              	.L188:
2052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 2871              		.loc 1 2052 0
 2872 0092 2368     		ldr	r3, [r4]
 2873 0094 5B69     		ldr	r3, [r3, #20]
 2874 0096 03F04003 		and	r3, r3, #64
 2875              	.LVL253:
2053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2876              		.loc 1 2053 0
 2877 009a E26B     		ldr	r2, [r4, #60]
 2878 009c 12F0080F 		tst	r2, #8
 2879 00a0 00D1     		bne	.L189
2053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 2880              		.loc 1 2053 0 is_stmt 0 discriminator 1
 2881 00a2 FBB1     		cbz	r3, .L190
 2882              	.L189:
2058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2883              		.loc 1 2058 0 is_stmt 1
 2884 00a4 2046     		mov	r0, r4
 2885 00a6 FFF7FEFF 		bl	UART_EndRxTransfer
 2886              	.LVL254:
2061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         {
 2887              		.loc 1 2061 0
 2888 00aa 2368     		ldr	r3, [r4]
 2889 00ac 5A69     		ldr	r2, [r3, #20]
 2890 00ae 12F0400F 		tst	r2, #64
 2891 00b2 13D0     		beq	.L191
2063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 2892              		.loc 1 2063 0
 2893 00b4 5A69     		ldr	r2, [r3, #20]
 2894 00b6 22F04002 		bic	r2, r2, #64
 2895 00ba 5A61     		str	r2, [r3, #20]
2066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****           {
 2896              		.loc 1 2066 0
 2897 00bc 636B     		ldr	r3, [r4, #52]
 2898 00be 4BB1     		cbz	r3, .L192
2070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
ARM GAS  /tmp/ccCgvysJ.s 			page 113


 2899              		.loc 1 2070 0
 2900 00c0 154A     		ldr	r2, .L195
 2901 00c2 5A63     		str	r2, [r3, #52]
2071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             {
 2902              		.loc 1 2071 0
 2903 00c4 606B     		ldr	r0, [r4, #52]
 2904 00c6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2905              	.LVL255:
 2906 00ca 20B3     		cbz	r0, .L179
2074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****             }
 2907              		.loc 1 2074 0
 2908 00cc 606B     		ldr	r0, [r4, #52]
 2909 00ce 436B     		ldr	r3, [r0, #52]
 2910 00d0 9847     		blx	r3
 2911              	.LVL256:
 2912 00d2 10BD     		pop	{r4, pc}
 2913              	.LVL257:
 2914              	.L192:
2085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2915              		.loc 1 2085 0
 2916 00d4 2046     		mov	r0, r4
 2917 00d6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2918              	.LVL258:
 2919 00da 10BD     		pop	{r4, pc}
 2920              	.LVL259:
 2921              	.L191:
2097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2922              		.loc 1 2097 0
 2923 00dc 2046     		mov	r0, r4
 2924 00de FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2925              	.LVL260:
 2926 00e2 10BD     		pop	{r4, pc}
 2927              	.LVL261:
 2928              	.L190:
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2929              		.loc 1 2110 0
 2930 00e4 2046     		mov	r0, r4
 2931 00e6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2932              	.LVL262:
2113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 2933              		.loc 1 2113 0
 2934 00ea 0023     		movs	r3, #0
 2935 00ec E363     		str	r3, [r4, #60]
 2936 00ee 10BD     		pop	{r4, pc}
 2937              	.LVL263:
 2938              	.L182:
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2939              		.loc 1 2120 0
 2940 00f0 13F0800F 		tst	r3, #128
 2941 00f4 06D0     		beq	.L193
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2942              		.loc 1 2120 0 is_stmt 0 discriminator 1
 2943 00f6 11F0800F 		tst	r1, #128
 2944 00fa 03D0     		beq	.L193
2122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return;
 2945              		.loc 1 2122 0 is_stmt 1
 2946 00fc 2046     		mov	r0, r4
ARM GAS  /tmp/ccCgvysJ.s 			page 114


 2947              	.LVL264:
 2948 00fe FFF7FEFF 		bl	UART_Transmit_IT
 2949              	.LVL265:
2123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   }
 2950              		.loc 1 2123 0
 2951 0102 10BD     		pop	{r4, pc}
 2952              	.LVL266:
 2953              	.L193:
2127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2954              		.loc 1 2127 0
 2955 0104 13F0400F 		tst	r3, #64
 2956 0108 05D0     		beq	.L179
2127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 2957              		.loc 1 2127 0 is_stmt 0 discriminator 1
 2958 010a 11F0400F 		tst	r1, #64
 2959 010e 02D0     		beq	.L179
2129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     return;
 2960              		.loc 1 2129 0 is_stmt 1
 2961 0110 2046     		mov	r0, r4
 2962              	.LVL267:
 2963 0112 FFF7FEFF 		bl	UART_EndTransmit_IT
 2964              	.LVL268:
 2965              	.L179:
 2966 0116 10BD     		pop	{r4, pc}
 2967              	.LVL269:
 2968              	.L196:
 2969              		.align	2
 2970              	.L195:
 2971 0118 00000000 		.word	UART_DMAAbortOnError
 2972              		.cfi_endproc
 2973              	.LFE94:
 2975              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2976              		.align	2
 2977              		.thumb
 2978              		.thumb_func
 2980              	UART_DMAAbortOnError:
 2981              	.LFB118:
2727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2982              		.loc 1 2727 0
 2983              		.cfi_startproc
 2984              		@ args = 0, pretend = 0, frame = 0
 2985              		@ frame_needed = 0, uses_anonymous_args = 0
 2986              	.LVL270:
 2987 0000 08B5     		push	{r3, lr}
 2988              	.LCFI38:
 2989              		.cfi_def_cfa_offset 8
 2990              		.cfi_offset 3, -8
 2991              		.cfi_offset 14, -4
2728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2992              		.loc 1 2728 0
 2993 0002 406A     		ldr	r0, [r0, #36]
 2994              	.LVL271:
2729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2995              		.loc 1 2729 0
 2996 0004 0023     		movs	r3, #0
 2997 0006 C385     		strh	r3, [r0, #46]	@ movhi
2730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
ARM GAS  /tmp/ccCgvysJ.s 			page 115


 2998              		.loc 1 2730 0
 2999 0008 C384     		strh	r3, [r0, #38]	@ movhi
2737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3000              		.loc 1 2737 0
 3001 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3002              	.LVL272:
 3003 000e 08BD     		pop	{r3, pc}
 3004              		.cfi_endproc
 3005              	.LFE118:
 3007              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3008              		.align	2
 3009              		.weak	HAL_UART_AbortCpltCallback
 3010              		.thumb
 3011              		.thumb_func
 3013              	HAL_UART_AbortCpltCallback:
 3014              	.LFB100:
2215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3015              		.loc 1 2215 0
 3016              		.cfi_startproc
 3017              		@ args = 0, pretend = 0, frame = 0
 3018              		@ frame_needed = 0, uses_anonymous_args = 0
 3019              		@ link register save eliminated.
 3020              	.LVL273:
 3021 0000 7047     		bx	lr
 3022              		.cfi_endproc
 3023              	.LFE100:
 3025 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3026              		.align	2
 3027              		.global	HAL_UART_Abort_IT
 3028              		.thumb
 3029              		.thumb_func
 3031              	HAL_UART_Abort_IT:
 3032              	.LFB91:
1720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3033              		.loc 1 1720 0
 3034              		.cfi_startproc
 3035              		@ args = 0, pretend = 0, frame = 0
 3036              		@ frame_needed = 0, uses_anonymous_args = 0
 3037              	.LVL274:
1720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3038              		.loc 1 1720 0
 3039 0000 10B5     		push	{r4, lr}
 3040              	.LCFI39:
 3041              		.cfi_def_cfa_offset 8
 3042              		.cfi_offset 4, -8
 3043              		.cfi_offset 14, -4
 3044 0002 0446     		mov	r4, r0
 3045              	.LVL275:
1724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3046              		.loc 1 1724 0
 3047 0004 0268     		ldr	r2, [r0]
 3048 0006 D368     		ldr	r3, [r2, #12]
 3049 0008 23F4F073 		bic	r3, r3, #480
 3050 000c D360     		str	r3, [r2, #12]
1725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3051              		.loc 1 1725 0
 3052 000e 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccCgvysJ.s 			page 116


 3053 0010 5369     		ldr	r3, [r2, #20]
 3054 0012 23F00103 		bic	r3, r3, #1
 3055 0016 5361     		str	r3, [r2, #20]
1730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3056              		.loc 1 1730 0
 3057 0018 036B     		ldr	r3, [r0, #48]
 3058 001a 4BB1     		cbz	r3, .L201
1734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 3059              		.loc 1 1734 0
 3060 001c 0268     		ldr	r2, [r0]
 3061 001e 5269     		ldr	r2, [r2, #20]
 3062 0020 12F0800F 		tst	r2, #128
 3063 0024 02D0     		beq	.L202
1736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 3064              		.loc 1 1736 0
 3065 0026 264A     		ldr	r2, .L213
 3066 0028 5A63     		str	r2, [r3, #52]
 3067 002a 01E0     		b	.L201
 3068              	.L202:
1740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 3069              		.loc 1 1740 0
 3070 002c 0022     		movs	r2, #0
 3071 002e 5A63     		str	r2, [r3, #52]
 3072              	.L201:
1744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3073              		.loc 1 1744 0
 3074 0030 636B     		ldr	r3, [r4, #52]
 3075 0032 4BB1     		cbz	r3, .L203
1748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 3076              		.loc 1 1748 0
 3077 0034 2268     		ldr	r2, [r4]
 3078 0036 5269     		ldr	r2, [r2, #20]
 3079 0038 12F0400F 		tst	r2, #64
 3080 003c 02D0     		beq	.L204
1750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 3081              		.loc 1 1750 0
 3082 003e 214A     		ldr	r2, .L213+4
 3083 0040 5A63     		str	r2, [r3, #52]
 3084 0042 01E0     		b	.L203
 3085              	.L204:
1754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     }
 3086              		.loc 1 1754 0
 3087 0044 0022     		movs	r2, #0
 3088 0046 5A63     		str	r2, [r3, #52]
 3089              	.L203:
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3090              		.loc 1 1759 0
 3091 0048 2368     		ldr	r3, [r4]
 3092 004a 5A69     		ldr	r2, [r3, #20]
 3093 004c 12F0800F 		tst	r2, #128
 3094 0050 0DD0     		beq	.L208
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3095              		.loc 1 1762 0
 3096 0052 5A69     		ldr	r2, [r3, #20]
 3097 0054 22F08002 		bic	r2, r2, #128
 3098 0058 5A61     		str	r2, [r3, #20]
1765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
ARM GAS  /tmp/ccCgvysJ.s 			page 117


 3099              		.loc 1 1765 0
 3100 005a 206B     		ldr	r0, [r4, #48]
 3101              	.LVL276:
 3102 005c 48B1     		cbz	r0, .L209
1771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 3103              		.loc 1 1771 0
 3104 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3105              	.LVL277:
 3106 0062 40B1     		cbz	r0, .L210
1773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 3107              		.loc 1 1773 0
 3108 0064 236B     		ldr	r3, [r4, #48]
 3109 0066 0022     		movs	r2, #0
 3110 0068 5A63     		str	r2, [r3, #52]
1721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3111              		.loc 1 1721 0
 3112 006a 0122     		movs	r2, #1
 3113 006c 04E0     		b	.L205
 3114              	.LVL278:
 3115              	.L208:
 3116 006e 0122     		movs	r2, #1
 3117 0070 02E0     		b	.L205
 3118              	.LVL279:
 3119              	.L209:
 3120 0072 0122     		movs	r2, #1
 3121 0074 00E0     		b	.L205
 3122              	.L210:
1777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 3123              		.loc 1 1777 0
 3124 0076 0022     		movs	r2, #0
 3125              	.L205:
 3126              	.LVL280:
1783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3127              		.loc 1 1783 0
 3128 0078 2368     		ldr	r3, [r4]
 3129 007a 5969     		ldr	r1, [r3, #20]
 3130 007c 11F0400F 		tst	r1, #64
 3131 0080 0ED0     		beq	.L206
1785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3132              		.loc 1 1785 0
 3133 0082 5969     		ldr	r1, [r3, #20]
 3134 0084 21F04001 		bic	r1, r1, #64
 3135 0088 5961     		str	r1, [r3, #20]
1788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 3136              		.loc 1 1788 0
 3137 008a 606B     		ldr	r0, [r4, #52]
 3138 008c 40B1     		cbz	r0, .L206
1794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 3139              		.loc 1 1794 0
 3140 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3141              	.LVL281:
 3142 0092 20B1     		cbz	r0, .L211
1796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****         AbortCplt = 0x01U;
 3143              		.loc 1 1796 0
 3144 0094 636B     		ldr	r3, [r4, #52]
 3145 0096 0022     		movs	r2, #0
 3146 0098 5A63     		str	r2, [r3, #52]
ARM GAS  /tmp/ccCgvysJ.s 			page 118


 3147              	.LVL282:
1797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 3148              		.loc 1 1797 0
 3149 009a 0122     		movs	r2, #1
 3150 009c 00E0     		b	.L206
 3151              	.LVL283:
 3152              	.L211:
1801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 3153              		.loc 1 1801 0
 3154 009e 0022     		movs	r2, #0
 3155              	.L206:
 3156              	.LVL284:
1807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3157              		.loc 1 1807 0
 3158 00a0 5AB1     		cbz	r2, .L207
1810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3159              		.loc 1 1810 0
 3160 00a2 0023     		movs	r3, #0
 3161 00a4 E384     		strh	r3, [r4, #38]	@ movhi
1811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3162              		.loc 1 1811 0
 3163 00a6 E385     		strh	r3, [r4, #46]	@ movhi
1814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3164              		.loc 1 1814 0
 3165 00a8 E363     		str	r3, [r4, #60]
1817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3166              		.loc 1 1817 0
 3167 00aa 2023     		movs	r3, #32
 3168 00ac 84F83930 		strb	r3, [r4, #57]
1818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3169              		.loc 1 1818 0
 3170 00b0 84F83A30 		strb	r3, [r4, #58]
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3171              		.loc 1 1826 0
 3172 00b4 2046     		mov	r0, r4
 3173 00b6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3174              	.LVL285:
 3175              	.L207:
1831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3176              		.loc 1 1831 0
 3177 00ba 0020     		movs	r0, #0
 3178 00bc 10BD     		pop	{r4, pc}
 3179              	.LVL286:
 3180              	.L214:
 3181 00be 00BF     		.align	2
 3182              	.L213:
 3183 00c0 00000000 		.word	UART_DMATxAbortCallback
 3184 00c4 00000000 		.word	UART_DMARxAbortCallback
 3185              		.cfi_endproc
 3186              	.LFE91:
 3188              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3189              		.align	2
 3190              		.thumb
 3191              		.thumb_func
 3193              	UART_DMARxAbortCallback:
 3194              	.LFB120:
2796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
ARM GAS  /tmp/ccCgvysJ.s 			page 119


 3195              		.loc 1 2796 0
 3196              		.cfi_startproc
 3197              		@ args = 0, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199              	.LVL287:
 3200 0000 08B5     		push	{r3, lr}
 3201              	.LCFI40:
 3202              		.cfi_def_cfa_offset 8
 3203              		.cfi_offset 3, -8
 3204              		.cfi_offset 14, -4
2797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3205              		.loc 1 2797 0
 3206 0002 406A     		ldr	r0, [r0, #36]
 3207              	.LVL288:
2799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3208              		.loc 1 2799 0
 3209 0004 436B     		ldr	r3, [r0, #52]
 3210 0006 0022     		movs	r2, #0
 3211 0008 5A63     		str	r2, [r3, #52]
2802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3212              		.loc 1 2802 0
 3213 000a 036B     		ldr	r3, [r0, #48]
 3214 000c 0BB1     		cbz	r3, .L216
2804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 3215              		.loc 1 2804 0
 3216 000e 5B6B     		ldr	r3, [r3, #52]
 3217 0010 53B9     		cbnz	r3, .L215
 3218              	.L216:
2811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3219              		.loc 1 2811 0
 3220 0012 0023     		movs	r3, #0
 3221 0014 C384     		strh	r3, [r0, #38]	@ movhi
2812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3222              		.loc 1 2812 0
 3223 0016 C385     		strh	r3, [r0, #46]	@ movhi
2815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3224              		.loc 1 2815 0
 3225 0018 C363     		str	r3, [r0, #60]
2818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3226              		.loc 1 2818 0
 3227 001a 2023     		movs	r3, #32
 3228 001c 80F83930 		strb	r3, [r0, #57]
2819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3229              		.loc 1 2819 0
 3230 0020 80F83A30 		strb	r3, [r0, #58]
2827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3231              		.loc 1 2827 0
 3232 0024 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3233              	.LVL289:
 3234              	.L215:
 3235 0028 08BD     		pop	{r3, pc}
 3236              		.cfi_endproc
 3237              	.LFE120:
 3239 002a 00BF     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3240              		.align	2
 3241              		.thumb
 3242              		.thumb_func
ARM GAS  /tmp/ccCgvysJ.s 			page 120


 3244              	UART_DMATxAbortCallback:
 3245              	.LFB119:
2751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3246              		.loc 1 2751 0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 0
 3249              		@ frame_needed = 0, uses_anonymous_args = 0
 3250              	.LVL290:
 3251 0000 08B5     		push	{r3, lr}
 3252              	.LCFI41:
 3253              		.cfi_def_cfa_offset 8
 3254              		.cfi_offset 3, -8
 3255              		.cfi_offset 14, -4
2752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3256              		.loc 1 2752 0
 3257 0002 406A     		ldr	r0, [r0, #36]
 3258              	.LVL291:
2754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3259              		.loc 1 2754 0
 3260 0004 036B     		ldr	r3, [r0, #48]
 3261 0006 0022     		movs	r2, #0
 3262 0008 5A63     		str	r2, [r3, #52]
2757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3263              		.loc 1 2757 0
 3264 000a 436B     		ldr	r3, [r0, #52]
 3265 000c 0BB1     		cbz	r3, .L220
2759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 3266              		.loc 1 2759 0
 3267 000e 5B6B     		ldr	r3, [r3, #52]
 3268 0010 53B9     		cbnz	r3, .L219
 3269              	.L220:
2766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3270              		.loc 1 2766 0
 3271 0012 0023     		movs	r3, #0
 3272 0014 C384     		strh	r3, [r0, #38]	@ movhi
2767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3273              		.loc 1 2767 0
 3274 0016 C385     		strh	r3, [r0, #46]	@ movhi
2770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3275              		.loc 1 2770 0
 3276 0018 C363     		str	r3, [r0, #60]
2773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3277              		.loc 1 2773 0
 3278 001a 2023     		movs	r3, #32
 3279 001c 80F83930 		strb	r3, [r0, #57]
2774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3280              		.loc 1 2774 0
 3281 0020 80F83A30 		strb	r3, [r0, #58]
2782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3282              		.loc 1 2782 0
 3283 0024 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3284              	.LVL292:
 3285              	.L219:
 3286 0028 08BD     		pop	{r3, pc}
 3287              		.cfi_endproc
 3288              	.LFE119:
 3290 002a 00BF     		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccCgvysJ.s 			page 121


 3291              		.align	2
 3292              		.weak	HAL_UART_AbortTransmitCpltCallback
 3293              		.thumb
 3294              		.thumb_func
 3296              	HAL_UART_AbortTransmitCpltCallback:
 3297              	.LFB101:
2230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3298              		.loc 1 2230 0
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 0
 3301              		@ frame_needed = 0, uses_anonymous_args = 0
 3302              		@ link register save eliminated.
 3303              	.LVL293:
 3304 0000 7047     		bx	lr
 3305              		.cfi_endproc
 3306              	.LFE101:
 3308 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3309              		.align	2
 3310              		.global	HAL_UART_AbortTransmit_IT
 3311              		.thumb
 3312              		.thumb_func
 3314              	HAL_UART_AbortTransmit_IT:
 3315              	.LFB92:
1848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3316              		.loc 1 1848 0
 3317              		.cfi_startproc
 3318              		@ args = 0, pretend = 0, frame = 0
 3319              		@ frame_needed = 0, uses_anonymous_args = 0
 3320              	.LVL294:
1848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3321              		.loc 1 1848 0
 3322 0000 10B5     		push	{r4, lr}
 3323              	.LCFI42:
 3324              		.cfi_def_cfa_offset 8
 3325              		.cfi_offset 4, -8
 3326              		.cfi_offset 14, -4
 3327 0002 0446     		mov	r4, r0
1850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3328              		.loc 1 1850 0
 3329 0004 0268     		ldr	r2, [r0]
 3330 0006 D368     		ldr	r3, [r2, #12]
 3331 0008 23F0C003 		bic	r3, r3, #192
 3332 000c D360     		str	r3, [r2, #12]
1853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3333              		.loc 1 1853 0
 3334 000e 0368     		ldr	r3, [r0]
 3335 0010 5A69     		ldr	r2, [r3, #20]
 3336 0012 12F0800F 		tst	r2, #128
 3337 0016 17D0     		beq	.L225
1855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3338              		.loc 1 1855 0
 3339 0018 5A69     		ldr	r2, [r3, #20]
 3340 001a 22F08002 		bic	r2, r2, #128
 3341 001e 5A61     		str	r2, [r3, #20]
1858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 3342              		.loc 1 1858 0
 3343 0020 036B     		ldr	r3, [r0, #48]
ARM GAS  /tmp/ccCgvysJ.s 			page 122


 3344 0022 4BB1     		cbz	r3, .L226
1862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3345              		.loc 1 1862 0
 3346 0024 0D4A     		ldr	r2, .L229
 3347 0026 5A63     		str	r2, [r3, #52]
1865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 3348              		.loc 1 1865 0
 3349 0028 006B     		ldr	r0, [r0, #48]
 3350              	.LVL295:
 3351 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3352              	.LVL296:
 3353 002e 90B1     		cbz	r0, .L227
1868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 3354              		.loc 1 1868 0
 3355 0030 206B     		ldr	r0, [r4, #48]
 3356 0032 436B     		ldr	r3, [r0, #52]
 3357 0034 9847     		blx	r3
 3358              	.LVL297:
 3359 0036 0EE0     		b	.L227
 3360              	.LVL298:
 3361              	.L226:
1874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3362              		.loc 1 1874 0
 3363 0038 0023     		movs	r3, #0
 3364 003a C384     		strh	r3, [r0, #38]	@ movhi
1877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3365              		.loc 1 1877 0
 3366 003c 2023     		movs	r3, #32
 3367 003e 80F83930 		strb	r3, [r0, #57]
1885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3368              		.loc 1 1885 0
 3369 0042 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3370              	.LVL299:
 3371 0046 06E0     		b	.L227
 3372              	.LVL300:
 3373              	.L225:
1892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3374              		.loc 1 1892 0
 3375 0048 0023     		movs	r3, #0
 3376 004a C384     		strh	r3, [r0, #38]	@ movhi
1895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3377              		.loc 1 1895 0
 3378 004c 2023     		movs	r3, #32
 3379 004e 80F83930 		strb	r3, [r0, #57]
1903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3380              		.loc 1 1903 0
 3381 0052 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3382              	.LVL301:
 3383              	.L227:
1908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3384              		.loc 1 1908 0
 3385 0056 0020     		movs	r0, #0
 3386 0058 10BD     		pop	{r4, pc}
 3387              	.LVL302:
 3388              	.L230:
 3389 005a 00BF     		.align	2
 3390              	.L229:
ARM GAS  /tmp/ccCgvysJ.s 			page 123


 3391 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3392              		.cfi_endproc
 3393              	.LFE92:
 3395              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3396              		.align	2
 3397              		.thumb
 3398              		.thumb_func
 3400              	UART_DMATxOnlyAbortCallback:
 3401              	.LFB121:
2841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3402              		.loc 1 2841 0
 3403              		.cfi_startproc
 3404              		@ args = 0, pretend = 0, frame = 0
 3405              		@ frame_needed = 0, uses_anonymous_args = 0
 3406              	.LVL303:
 3407 0000 08B5     		push	{r3, lr}
 3408              	.LCFI43:
 3409              		.cfi_def_cfa_offset 8
 3410              		.cfi_offset 3, -8
 3411              		.cfi_offset 14, -4
2842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3412              		.loc 1 2842 0
 3413 0002 406A     		ldr	r0, [r0, #36]
 3414              	.LVL304:
2844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3415              		.loc 1 2844 0
 3416 0004 0023     		movs	r3, #0
 3417 0006 C384     		strh	r3, [r0, #38]	@ movhi
2847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3418              		.loc 1 2847 0
 3419 0008 2023     		movs	r3, #32
 3420 000a 80F83930 		strb	r3, [r0, #57]
2855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3421              		.loc 1 2855 0
 3422 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3423              	.LVL305:
 3424 0012 08BD     		pop	{r3, pc}
 3425              		.cfi_endproc
 3426              	.LFE121:
 3428              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3429              		.align	2
 3430              		.weak	HAL_UART_AbortReceiveCpltCallback
 3431              		.thumb
 3432              		.thumb_func
 3434              	HAL_UART_AbortReceiveCpltCallback:
 3435              	.LFB102:
2245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3436              		.loc 1 2245 0
 3437              		.cfi_startproc
 3438              		@ args = 0, pretend = 0, frame = 0
 3439              		@ frame_needed = 0, uses_anonymous_args = 0
 3440              		@ link register save eliminated.
 3441              	.LVL306:
 3442 0000 7047     		bx	lr
 3443              		.cfi_endproc
 3444              	.LFE102:
 3446 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
ARM GAS  /tmp/ccCgvysJ.s 			page 124


 3447              		.align	2
 3448              		.global	HAL_UART_AbortReceive_IT
 3449              		.thumb
 3450              		.thumb_func
 3452              	HAL_UART_AbortReceive_IT:
 3453              	.LFB93:
1925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3454              		.loc 1 1925 0
 3455              		.cfi_startproc
 3456              		@ args = 0, pretend = 0, frame = 0
 3457              		@ frame_needed = 0, uses_anonymous_args = 0
 3458              	.LVL307:
1925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3459              		.loc 1 1925 0
 3460 0000 10B5     		push	{r4, lr}
 3461              	.LCFI44:
 3462              		.cfi_def_cfa_offset 8
 3463              		.cfi_offset 4, -8
 3464              		.cfi_offset 14, -4
 3465 0002 0446     		mov	r4, r0
1927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3466              		.loc 1 1927 0
 3467 0004 0268     		ldr	r2, [r0]
 3468 0006 D368     		ldr	r3, [r2, #12]
 3469 0008 23F49073 		bic	r3, r3, #288
 3470 000c D360     		str	r3, [r2, #12]
1928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3471              		.loc 1 1928 0
 3472 000e 0268     		ldr	r2, [r0]
 3473 0010 5369     		ldr	r3, [r2, #20]
 3474 0012 23F00103 		bic	r3, r3, #1
 3475 0016 5361     		str	r3, [r2, #20]
1931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   {
 3476              		.loc 1 1931 0
 3477 0018 0368     		ldr	r3, [r0]
 3478 001a 5A69     		ldr	r2, [r3, #20]
 3479 001c 12F0400F 		tst	r2, #64
 3480 0020 17D0     		beq	.L235
1933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3481              		.loc 1 1933 0
 3482 0022 5A69     		ldr	r2, [r3, #20]
 3483 0024 22F04002 		bic	r2, r2, #64
 3484 0028 5A61     		str	r2, [r3, #20]
1936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****     {
 3485              		.loc 1 1936 0
 3486 002a 436B     		ldr	r3, [r0, #52]
 3487 002c 4BB1     		cbz	r3, .L236
1940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3488              		.loc 1 1940 0
 3489 002e 0D4A     		ldr	r2, .L239
 3490 0030 5A63     		str	r2, [r3, #52]
1943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       {
 3491              		.loc 1 1943 0
 3492 0032 406B     		ldr	r0, [r0, #52]
 3493              	.LVL308:
 3494 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3495              	.LVL309:
ARM GAS  /tmp/ccCgvysJ.s 			page 125


 3496 0038 90B1     		cbz	r0, .L237
1946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****       }
 3497              		.loc 1 1946 0
 3498 003a 606B     		ldr	r0, [r4, #52]
 3499 003c 436B     		ldr	r3, [r0, #52]
 3500 003e 9847     		blx	r3
 3501              	.LVL310:
 3502 0040 0EE0     		b	.L237
 3503              	.LVL311:
 3504              	.L236:
1952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3505              		.loc 1 1952 0
 3506 0042 0023     		movs	r3, #0
 3507 0044 C385     		strh	r3, [r0, #46]	@ movhi
1955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3508              		.loc 1 1955 0
 3509 0046 2023     		movs	r3, #32
 3510 0048 80F83A30 		strb	r3, [r0, #58]
1963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3511              		.loc 1 1963 0
 3512 004c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3513              	.LVL312:
 3514 0050 06E0     		b	.L237
 3515              	.LVL313:
 3516              	.L235:
1970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3517              		.loc 1 1970 0
 3518 0052 0023     		movs	r3, #0
 3519 0054 C385     		strh	r3, [r0, #46]	@ movhi
1973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3520              		.loc 1 1973 0
 3521 0056 2023     		movs	r3, #32
 3522 0058 80F83A30 		strb	r3, [r0, #58]
1981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3523              		.loc 1 1981 0
 3524 005c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3525              	.LVL314:
 3526              	.L237:
1986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3527              		.loc 1 1986 0
 3528 0060 0020     		movs	r0, #0
 3529 0062 10BD     		pop	{r4, pc}
 3530              	.LVL315:
 3531              	.L240:
 3532              		.align	2
 3533              	.L239:
 3534 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3535              		.cfi_endproc
 3536              	.LFE93:
 3538              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3539              		.align	2
 3540              		.thumb
 3541              		.thumb_func
 3543              	UART_DMARxOnlyAbortCallback:
 3544              	.LFB122:
2869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3545              		.loc 1 2869 0
ARM GAS  /tmp/ccCgvysJ.s 			page 126


 3546              		.cfi_startproc
 3547              		@ args = 0, pretend = 0, frame = 0
 3548              		@ frame_needed = 0, uses_anonymous_args = 0
 3549              	.LVL316:
 3550 0000 08B5     		push	{r3, lr}
 3551              	.LCFI45:
 3552              		.cfi_def_cfa_offset 8
 3553              		.cfi_offset 3, -8
 3554              		.cfi_offset 14, -4
2870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3555              		.loc 1 2870 0
 3556 0002 406A     		ldr	r0, [r0, #36]
 3557              	.LVL317:
2872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3558              		.loc 1 2872 0
 3559 0004 0023     		movs	r3, #0
 3560 0006 C385     		strh	r3, [r0, #46]	@ movhi
2875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3561              		.loc 1 2875 0
 3562 0008 2023     		movs	r3, #32
 3563 000a 80F83A30 		strb	r3, [r0, #58]
2883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3564              		.loc 1 2883 0
 3565 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3566              	.LVL318:
 3567 0012 08BD     		pop	{r3, pc}
 3568              		.cfi_endproc
 3569              	.LFE122:
 3571              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3572              		.align	2
 3573              		.global	HAL_LIN_SendBreak
 3574              		.thumb
 3575              		.thumb_func
 3577              	HAL_LIN_SendBreak:
 3578              	.LFB103:
2284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
 3579              		.loc 1 2284 0
 3580              		.cfi_startproc
 3581              		@ args = 0, pretend = 0, frame = 0
 3582              		@ frame_needed = 0, uses_anonymous_args = 0
 3583              		@ link register save eliminated.
 3584              	.LVL319:
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3585              		.loc 1 2289 0
 3586 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3587 0004 012B     		cmp	r3, #1
 3588 0006 12D0     		beq	.L245
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3589              		.loc 1 2289 0 is_stmt 0 discriminator 2
 3590 0008 0123     		movs	r3, #1
 3591 000a 80F83830 		strb	r3, [r0, #56]
2291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3592              		.loc 1 2291 0 is_stmt 1 discriminator 2
 3593 000e 2423     		movs	r3, #36
 3594 0010 80F83930 		strb	r3, [r0, #57]
2294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3595              		.loc 1 2294 0 discriminator 2
ARM GAS  /tmp/ccCgvysJ.s 			page 127


 3596 0014 0268     		ldr	r2, [r0]
 3597 0016 D368     		ldr	r3, [r2, #12]
 3598 0018 43F00103 		orr	r3, r3, #1
 3599 001c D360     		str	r3, [r2, #12]
2296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3600              		.loc 1 2296 0 discriminator 2
 3601 001e 2023     		movs	r3, #32
 3602 0020 80F83930 		strb	r3, [r0, #57]
2299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3603              		.loc 1 2299 0 discriminator 2
 3604 0024 0023     		movs	r3, #0
 3605 0026 80F83830 		strb	r3, [r0, #56]
2301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 3606              		.loc 1 2301 0 discriminator 2
 3607 002a 1846     		mov	r0, r3
 3608              	.LVL320:
 3609 002c 7047     		bx	lr
 3610              	.LVL321:
 3611              	.L245:
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3612              		.loc 1 2289 0
 3613 002e 0220     		movs	r0, #2
 3614              	.LVL322:
2302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3615              		.loc 1 2302 0
 3616 0030 7047     		bx	lr
 3617              		.cfi_endproc
 3618              	.LFE103:
 3620 0032 00BF     		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3621              		.align	2
 3622              		.global	HAL_MultiProcessor_EnterMuteMode
 3623              		.thumb
 3624              		.thumb_func
 3626              	HAL_MultiProcessor_EnterMuteMode:
 3627              	.LFB104:
2311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
 3628              		.loc 1 2311 0
 3629              		.cfi_startproc
 3630              		@ args = 0, pretend = 0, frame = 0
 3631              		@ frame_needed = 0, uses_anonymous_args = 0
 3632              		@ link register save eliminated.
 3633              	.LVL323:
2316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3634              		.loc 1 2316 0
 3635 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3636 0004 012B     		cmp	r3, #1
 3637 0006 12D0     		beq	.L248
2316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3638              		.loc 1 2316 0 is_stmt 0 discriminator 2
 3639 0008 0123     		movs	r3, #1
 3640 000a 80F83830 		strb	r3, [r0, #56]
2318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3641              		.loc 1 2318 0 is_stmt 1 discriminator 2
 3642 000e 2423     		movs	r3, #36
 3643 0010 80F83930 		strb	r3, [r0, #57]
2321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3644              		.loc 1 2321 0 discriminator 2
ARM GAS  /tmp/ccCgvysJ.s 			page 128


 3645 0014 0268     		ldr	r2, [r0]
 3646 0016 D368     		ldr	r3, [r2, #12]
 3647 0018 43F00203 		orr	r3, r3, #2
 3648 001c D360     		str	r3, [r2, #12]
2323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3649              		.loc 1 2323 0 discriminator 2
 3650 001e 2023     		movs	r3, #32
 3651 0020 80F83930 		strb	r3, [r0, #57]
2326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3652              		.loc 1 2326 0 discriminator 2
 3653 0024 0023     		movs	r3, #0
 3654 0026 80F83830 		strb	r3, [r0, #56]
2328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 3655              		.loc 1 2328 0 discriminator 2
 3656 002a 1846     		mov	r0, r3
 3657              	.LVL324:
 3658 002c 7047     		bx	lr
 3659              	.LVL325:
 3660              	.L248:
2316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3661              		.loc 1 2316 0
 3662 002e 0220     		movs	r0, #2
 3663              	.LVL326:
2329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3664              		.loc 1 2329 0
 3665 0030 7047     		bx	lr
 3666              		.cfi_endproc
 3667              	.LFE104:
 3669 0032 00BF     		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3670              		.align	2
 3671              		.global	HAL_MultiProcessor_ExitMuteMode
 3672              		.thumb
 3673              		.thumb_func
 3675              	HAL_MultiProcessor_ExitMuteMode:
 3676              	.LFB105:
2338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   /* Check the parameters */
 3677              		.loc 1 2338 0
 3678              		.cfi_startproc
 3679              		@ args = 0, pretend = 0, frame = 0
 3680              		@ frame_needed = 0, uses_anonymous_args = 0
 3681              		@ link register save eliminated.
 3682              	.LVL327:
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3683              		.loc 1 2343 0
 3684 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3685 0004 012B     		cmp	r3, #1
 3686 0006 12D0     		beq	.L251
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3687              		.loc 1 2343 0 is_stmt 0 discriminator 2
 3688 0008 0123     		movs	r3, #1
 3689 000a 80F83830 		strb	r3, [r0, #56]
2345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3690              		.loc 1 2345 0 is_stmt 1 discriminator 2
 3691 000e 2423     		movs	r3, #36
 3692 0010 80F83930 		strb	r3, [r0, #57]
2348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3693              		.loc 1 2348 0 discriminator 2
ARM GAS  /tmp/ccCgvysJ.s 			page 129


 3694 0014 0268     		ldr	r2, [r0]
 3695 0016 D368     		ldr	r3, [r2, #12]
 3696 0018 23F00203 		bic	r3, r3, #2
 3697 001c D360     		str	r3, [r2, #12]
2350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3698              		.loc 1 2350 0 discriminator 2
 3699 001e 2023     		movs	r3, #32
 3700 0020 80F83930 		strb	r3, [r0, #57]
2353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3701              		.loc 1 2353 0 discriminator 2
 3702 0024 0023     		movs	r3, #0
 3703 0026 80F83830 		strb	r3, [r0, #56]
2355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 3704              		.loc 1 2355 0 discriminator 2
 3705 002a 1846     		mov	r0, r3
 3706              	.LVL328:
 3707 002c 7047     		bx	lr
 3708              	.LVL329:
 3709              	.L251:
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3710              		.loc 1 2343 0
 3711 002e 0220     		movs	r0, #2
 3712              	.LVL330:
2356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3713              		.loc 1 2356 0
 3714 0030 7047     		bx	lr
 3715              		.cfi_endproc
 3716              	.LFE105:
 3718 0032 00BF     		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3719              		.align	2
 3720              		.global	HAL_HalfDuplex_EnableTransmitter
 3721              		.thumb
 3722              		.thumb_func
 3724              	HAL_HalfDuplex_EnableTransmitter:
 3725              	.LFB106:
2365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3726              		.loc 1 2365 0
 3727              		.cfi_startproc
 3728              		@ args = 0, pretend = 0, frame = 0
 3729              		@ frame_needed = 0, uses_anonymous_args = 0
 3730              		@ link register save eliminated.
 3731              	.LVL331:
2369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3732              		.loc 1 2369 0
 3733 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3734 0004 012B     		cmp	r3, #1
 3735 0006 14D0     		beq	.L254
2369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3736              		.loc 1 2369 0 is_stmt 0 discriminator 2
 3737 0008 0123     		movs	r3, #1
 3738 000a 80F83830 		strb	r3, [r0, #56]
2371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3739              		.loc 1 2371 0 is_stmt 1 discriminator 2
 3740 000e 2423     		movs	r3, #36
 3741 0010 80F83930 		strb	r3, [r0, #57]
2374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3742              		.loc 1 2374 0 discriminator 2
ARM GAS  /tmp/ccCgvysJ.s 			page 130


 3743 0014 0268     		ldr	r2, [r0]
 3744 0016 D368     		ldr	r3, [r2, #12]
 3745              	.LVL332:
2377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3746              		.loc 1 2377 0 discriminator 2
 3747 0018 23F00C03 		bic	r3, r3, #12
 3748              	.LVL333:
2380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3749              		.loc 1 2380 0 discriminator 2
 3750 001c 43F00803 		orr	r3, r3, #8
 3751              	.LVL334:
2383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3752              		.loc 1 2383 0 discriminator 2
 3753 0020 D360     		str	r3, [r2, #12]
2385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3754              		.loc 1 2385 0 discriminator 2
 3755 0022 2023     		movs	r3, #32
 3756              	.LVL335:
 3757 0024 80F83930 		strb	r3, [r0, #57]
 3758              	.LVL336:
2388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3759              		.loc 1 2388 0 discriminator 2
 3760 0028 0023     		movs	r3, #0
 3761 002a 80F83830 		strb	r3, [r0, #56]
2390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 3762              		.loc 1 2390 0 discriminator 2
 3763 002e 1846     		mov	r0, r3
 3764              	.LVL337:
 3765 0030 7047     		bx	lr
 3766              	.LVL338:
 3767              	.L254:
2369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3768              		.loc 1 2369 0
 3769 0032 0220     		movs	r0, #2
 3770              	.LVL339:
2391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3771              		.loc 1 2391 0
 3772 0034 7047     		bx	lr
 3773              		.cfi_endproc
 3774              	.LFE106:
 3776 0036 00BF     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3777              		.align	2
 3778              		.global	HAL_HalfDuplex_EnableReceiver
 3779              		.thumb
 3780              		.thumb_func
 3782              	HAL_HalfDuplex_EnableReceiver:
 3783              	.LFB107:
2400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3784              		.loc 1 2400 0
 3785              		.cfi_startproc
 3786              		@ args = 0, pretend = 0, frame = 0
 3787              		@ frame_needed = 0, uses_anonymous_args = 0
 3788              		@ link register save eliminated.
 3789              	.LVL340:
2404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3790              		.loc 1 2404 0
 3791 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
ARM GAS  /tmp/ccCgvysJ.s 			page 131


 3792 0004 012B     		cmp	r3, #1
 3793 0006 14D0     		beq	.L257
2404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3794              		.loc 1 2404 0 is_stmt 0 discriminator 2
 3795 0008 0123     		movs	r3, #1
 3796 000a 80F83830 		strb	r3, [r0, #56]
2406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3797              		.loc 1 2406 0 is_stmt 1 discriminator 2
 3798 000e 2423     		movs	r3, #36
 3799 0010 80F83930 		strb	r3, [r0, #57]
2409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3800              		.loc 1 2409 0 discriminator 2
 3801 0014 0268     		ldr	r2, [r0]
 3802 0016 D368     		ldr	r3, [r2, #12]
 3803              	.LVL341:
2412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3804              		.loc 1 2412 0 discriminator 2
 3805 0018 23F00C03 		bic	r3, r3, #12
 3806              	.LVL342:
2415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3807              		.loc 1 2415 0 discriminator 2
 3808 001c 43F00403 		orr	r3, r3, #4
 3809              	.LVL343:
2418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3810              		.loc 1 2418 0 discriminator 2
 3811 0020 D360     		str	r3, [r2, #12]
2420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3812              		.loc 1 2420 0 discriminator 2
 3813 0022 2023     		movs	r3, #32
 3814              	.LVL344:
 3815 0024 80F83930 		strb	r3, [r0, #57]
 3816              	.LVL345:
2423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3817              		.loc 1 2423 0 discriminator 2
 3818 0028 0023     		movs	r3, #0
 3819 002a 80F83830 		strb	r3, [r0, #56]
2425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 3820              		.loc 1 2425 0 discriminator 2
 3821 002e 1846     		mov	r0, r3
 3822              	.LVL346:
 3823 0030 7047     		bx	lr
 3824              	.LVL347:
 3825              	.L257:
2404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3826              		.loc 1 2404 0
 3827 0032 0220     		movs	r0, #2
 3828              	.LVL348:
2426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3829              		.loc 1 2426 0
 3830 0034 7047     		bx	lr
 3831              		.cfi_endproc
 3832              	.LFE107:
 3834 0036 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 3835              		.align	2
 3836              		.global	HAL_UART_GetState
 3837              		.thumb
 3838              		.thumb_func
ARM GAS  /tmp/ccCgvysJ.s 			page 132


 3840              	HAL_UART_GetState:
 3841              	.LFB108:
2457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 3842              		.loc 1 2457 0
 3843              		.cfi_startproc
 3844              		@ args = 0, pretend = 0, frame = 0
 3845              		@ frame_needed = 0, uses_anonymous_args = 0
 3846              		@ link register save eliminated.
 3847              	.LVL349:
2459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   temp2 = huart->RxState;
 3848              		.loc 1 2459 0
 3849 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 3850              	.LVL350:
2460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3851              		.loc 1 2460 0
 3852 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 3853              	.LVL351:
2463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3854              		.loc 1 2463 0
 3855 0008 1843     		orrs	r0, r0, r3
 3856              	.LVL352:
 3857 000a 7047     		bx	lr
 3858              		.cfi_endproc
 3859              	.LFE108:
 3861              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3862              		.align	2
 3863              		.global	HAL_UART_GetError
 3864              		.thumb
 3865              		.thumb_func
 3867              	HAL_UART_GetError:
 3868              	.LFB109:
2472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c ****   return huart->ErrorCode;
 3869              		.loc 1 2472 0
 3870              		.cfi_startproc
 3871              		@ args = 0, pretend = 0, frame = 0
 3872              		@ frame_needed = 0, uses_anonymous_args = 0
 3873              		@ link register save eliminated.
 3874              	.LVL353:
2473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** }
 3875              		.loc 1 2473 0
 3876 0000 C06B     		ldr	r0, [r0, #60]
 3877              	.LVL354:
2474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_uart.c **** 
 3878              		.loc 1 2474 0
 3879 0002 7047     		bx	lr
 3880              		.cfi_endproc
 3881              	.LFE109:
 3883              		.text
 3884              	.Letext0:
 3885              		.file 2 "/usr/bin/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 3886              		.file 3 "/usr/bin/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 3887              		.file 4 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xba.h"
 3888              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 3889              		.file 6 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 3890              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 3891              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_uart.h"
 3892              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_rcc.h"
ARM GAS  /tmp/ccCgvysJ.s 			page 133


 3893              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
 3894              		.file 11 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccCgvysJ.s 			page 134


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l1xx_hal_uart.c
     /tmp/ccCgvysJ.s:20     .text.UART_EndTxTransfer:00000000 $t
     /tmp/ccCgvysJ.s:24     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/ccCgvysJ.s:46     .text.UART_EndRxTransfer:00000000 $t
     /tmp/ccCgvysJ.s:50     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/ccCgvysJ.s:76     .text.UART_Transmit_IT:00000000 $t
     /tmp/ccCgvysJ.s:80     .text.UART_Transmit_IT:00000000 UART_Transmit_IT
     /tmp/ccCgvysJ.s:168    .text.UART_SetConfig:00000000 $t
     /tmp/ccCgvysJ.s:172    .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccCgvysJ.s:351    .text.UART_SetConfig:0000015c $d
     /tmp/ccCgvysJ.s:357    .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccCgvysJ.s:361    .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccCgvysJ.s:438    .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccCgvysJ.s:443    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccCgvysJ.s:456    .text.HAL_UART_Init:00000000 $t
     /tmp/ccCgvysJ.s:461    .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccCgvysJ.s:539    .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/ccCgvysJ.s:544    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/ccCgvysJ.s:628    .text.HAL_LIN_Init:00000000 $t
     /tmp/ccCgvysJ.s:633    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     /tmp/ccCgvysJ.s:733    .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/ccCgvysJ.s:738    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/ccCgvysJ.s:844    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccCgvysJ.s:849    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccCgvysJ.s:862    .text.HAL_UART_DeInit:00000000 $t
     /tmp/ccCgvysJ.s:867    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/ccCgvysJ.s:919    .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccCgvysJ.s:924    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccCgvysJ.s:1107   .text.HAL_UART_Receive:00000000 $t
     /tmp/ccCgvysJ.s:1112   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccCgvysJ.s:1302   .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/ccCgvysJ.s:1307   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/ccCgvysJ.s:1382   .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/ccCgvysJ.s:1387   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/ccCgvysJ.s:1472   .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/ccCgvysJ.s:1477   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/ccCgvysJ.s:1588   .text.HAL_UART_Transmit_DMA:00000080 $d
     /tmp/ccCgvysJ.s:2291   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/ccCgvysJ.s:2395   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/ccCgvysJ.s:2685   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/ccCgvysJ.s:1595   .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/ccCgvysJ.s:1600   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/ccCgvysJ.s:1733   .text.HAL_UART_Receive_DMA:0000009c $d
     /tmp/ccCgvysJ.s:2441   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/ccCgvysJ.s:2639   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/ccCgvysJ.s:1740   .text.HAL_UART_DMAPause:00000000 $t
     /tmp/ccCgvysJ.s:1745   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/ccCgvysJ.s:1823   .text.HAL_UART_DMAResume:00000000 $t
     /tmp/ccCgvysJ.s:1828   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/ccCgvysJ.s:1926   .text.HAL_UART_DMAStop:00000000 $t
     /tmp/ccCgvysJ.s:1931   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/ccCgvysJ.s:2009   .text.HAL_UART_Abort:00000000 $t
     /tmp/ccCgvysJ.s:2014   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/ccCgvysJ.s:2124   .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/ccCgvysJ.s:2129   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
     /tmp/ccCgvysJ.s:2194   .text.HAL_UART_AbortReceive:00000000 $t
ARM GAS  /tmp/ccCgvysJ.s 			page 135


     /tmp/ccCgvysJ.s:2199   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/ccCgvysJ.s:2269   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccCgvysJ.s:2274   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccCgvysJ.s:2287   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/ccCgvysJ.s:2339   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/ccCgvysJ.s:2343   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/ccCgvysJ.s:2373   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/ccCgvysJ.s:2378   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccCgvysJ.s:2391   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/ccCgvysJ.s:2419   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccCgvysJ.s:2424   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccCgvysJ.s:2437   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/ccCgvysJ.s:2494   .text.UART_Receive_IT:00000000 $t
     /tmp/ccCgvysJ.s:2498   .text.UART_Receive_IT:00000000 UART_Receive_IT
     /tmp/ccCgvysJ.s:2617   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/ccCgvysJ.s:2622   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccCgvysJ.s:2635   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/ccCgvysJ.s:2663   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/ccCgvysJ.s:2668   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/ccCgvysJ.s:2681   .text.UART_DMAError:00000000 $t
     /tmp/ccCgvysJ.s:2756   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/ccCgvysJ.s:2761   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/ccCgvysJ.s:2971   .text.HAL_UART_IRQHandler:00000118 $d
     /tmp/ccCgvysJ.s:2980   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/ccCgvysJ.s:2976   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/ccCgvysJ.s:3008   .text.HAL_UART_AbortCpltCallback:00000000 $t
     /tmp/ccCgvysJ.s:3013   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/ccCgvysJ.s:3026   .text.HAL_UART_Abort_IT:00000000 $t
     /tmp/ccCgvysJ.s:3031   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/ccCgvysJ.s:3183   .text.HAL_UART_Abort_IT:000000c0 $d
     /tmp/ccCgvysJ.s:3244   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/ccCgvysJ.s:3193   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/ccCgvysJ.s:3189   .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/ccCgvysJ.s:3240   .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/ccCgvysJ.s:3291   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/ccCgvysJ.s:3296   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccCgvysJ.s:3309   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/ccCgvysJ.s:3314   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/ccCgvysJ.s:3391   .text.HAL_UART_AbortTransmit_IT:0000005c $d
     /tmp/ccCgvysJ.s:3400   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/ccCgvysJ.s:3396   .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/ccCgvysJ.s:3429   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/ccCgvysJ.s:3434   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccCgvysJ.s:3447   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/ccCgvysJ.s:3452   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/ccCgvysJ.s:3534   .text.HAL_UART_AbortReceive_IT:00000064 $d
     /tmp/ccCgvysJ.s:3543   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
     /tmp/ccCgvysJ.s:3539   .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/ccCgvysJ.s:3572   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/ccCgvysJ.s:3577   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/ccCgvysJ.s:3621   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/ccCgvysJ.s:3626   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccCgvysJ.s:3670   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
     /tmp/ccCgvysJ.s:3675   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccCgvysJ.s:3719   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/ccCgvysJ.s:3724   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccCgvysJ.s:3777   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
ARM GAS  /tmp/ccCgvysJ.s 			page 136


     /tmp/ccCgvysJ.s:3782   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccCgvysJ.s:3835   .text.HAL_UART_GetState:00000000 $t
     /tmp/ccCgvysJ.s:3840   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/ccCgvysJ.s:3862   .text.HAL_UART_GetError:00000000 $t
     /tmp/ccCgvysJ.s:3867   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
