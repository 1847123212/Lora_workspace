ARM GAS  /tmp/cc9tM1KX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32l1xx_hal_spi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	SPI_AbortRx_ISR:
  25              	.LFB125:
  26              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c"
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @file    stm32l1xx_hal_spi.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
ARM GAS  /tmp/cc9tM1KX.s 			page 2


  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Callback registration:
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           and a pointer to the user callback function.
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           weak function.
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           and the Callback ID.
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
ARM GAS  /tmp/cc9tM1KX.s 			page 3


  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        or HAL_SPI_Init() function.
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        not defined, the callback registering feature is not available
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   @endverbatim
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   Additional table :
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |===========================================================================================
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/8  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
ARM GAS  /tmp/cc9tM1KX.s 			page 4


 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |===========================================================================================
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/4  |    NA     |    NA    |    NA     |   NA  
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/32  | Fpclk/
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/4  | Fpclk/4  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (8bits, 16bits),
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        @note
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @attention
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * All rights reserved.</center></h2>
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #include "stm32l1xx_hal.h"
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @addtogroup STM32L1xx_HAL_Driver
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
ARM GAS  /tmp/cc9tM1KX.s 			page 5


 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI SPI
 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief SPI HAL module driver
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
ARM GAS  /tmp/cc9tM1KX.s 			page 6


 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           the selected configuration:
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Mode
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Direction
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Data Size
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Clock Polarity and Phase
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) NSS Management
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) BaudRate Prescaler
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) FirstBit
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) TIMode
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) CRC Calculation
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           of the selected SPIx peripheral.
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi == NULL)
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the parameters */
ARM GAS  /tmp/cc9tM1KX.s 			page 7


 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* TI mode is not supported on all devices in stm32l1xx serie.
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      TIMode parameter is mandatory equal to SPI_TIMODE_DISABLE if TI mode is not supported */
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the SPI Callback settings */
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
ARM GAS  /tmp/cc9tM1KX.s 			page 8


 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : NSS management, TI Mode */
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : NSS management */
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, ((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE));
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi == NULL)
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check SPI Instance parameter */
 427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
ARM GAS  /tmp/cc9tM1KX.s 			page 9


 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
 454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
 461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
 466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
 482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
 486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/cc9tM1KX.s 			page 10


 489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (pCallback == NULL)
 504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
 511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
ARM GAS  /tmp/cc9tM1KX.s 			page 11


 546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Return error status */
 593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     status =  HAL_ERROR;
 594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return status;
 599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
ARM GAS  /tmp/cc9tM1KX.s 			page 12


 603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
 614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 13


 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Return error status */
 696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     status =  HAL_ERROR;
 697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return status;
 702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *  @brief   Data transfers functions
 710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
 712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
 713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                       ##### IO operation functions #####
 714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  [..]
 716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
ARM GAS  /tmp/cc9tM1KX.s 			page 14


 717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     data transfers.
 718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     (#) There are two modes of transfer:
 722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             after finishing transfer.
 725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The end of the data processing will be indicated through the
 728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             using DMA mode.
 730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
 738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
 747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
 757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc9tM1KX.s 			page 15


 774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
 800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
 810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
ARM GAS  /tmp/cc9tM1KX.s 			page 16


 831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
 833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
 862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
 864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
 874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
 881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
ARM GAS  /tmp/cc9tM1KX.s 			page 17


 888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error:
 898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
 900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be received
 910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
 944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
ARM GAS  /tmp/cc9tM1KX.s 			page 18


 945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
 959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
 963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount--;
 964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction: 1Line */
 968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
 977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
 981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transfer loop */
 984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check the RXNE flag */
 987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* read the received data */
 990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
 995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
 997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
1001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
ARM GAS  /tmp/cc9tM1KX.s 			page 19


1002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transfer loop */
1008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check the RXNE flag */
1011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
1018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
1020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
1024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Handle the CRC Transmission */
1031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read the latest data */
1037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* the latest data has not been received */
1040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
1042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
1051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait the CRC data */
1056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
ARM GAS  /tmp/cc9tM1KX.s 			page 20


1059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
1061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
1069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
1076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
1102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                           uint32_t Timeout)
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
1109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tickstart;
1111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 21


1116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
1124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
1129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc9tM1KX.s 			page 22


1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
1185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check TXE flag */
1189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
1194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 0U;
1196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Enable CRC Transmission */
1199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check RXNE flag */
1207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 1U;
1214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
1219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
1228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
ARM GAS  /tmp/cc9tM1KX.s 			page 23


1230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check TXE flag */
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
1239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 0U;
1241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Enable CRC Transmission */
1244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
1255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
1256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 1U;
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
1264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait until TXE flag */
1273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Error on the CRC reception */
1276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
1279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read CRC */
1281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
1285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc9tM1KX.s 			page 24


1287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear CRC Flag */
1289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
1296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
1304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
1305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
1307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc9tM1KX.s 			page 25


1344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/cc9tM1KX.s 			page 26


1401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc9tM1KX.s 			page 27


1458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             process unlock */
1475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
1501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
ARM GAS  /tmp/cc9tM1KX.s 			page 28


1515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 29


1572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check tx dma handle */
1591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
ARM GAS  /tmp/cc9tM1KX.s 			page 30


1629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
1654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/cc9tM1KX.s 			page 31


1686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check rx dma handle */
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check tx dma handle */
1704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc9tM1KX.s 			page 32


1743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
1757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
1767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error:
1790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
ARM GAS  /tmp/cc9tM1KX.s 			page 33


1800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                               uint16_t Size)
1807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
1809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check rx & tx dma handles */
1813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
1820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
1827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
ARM GAS  /tmp/cc9tM1KX.s 			page 34


1857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
1872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
1877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
1878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
1889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
1904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
1905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
1906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
1907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
1909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
1911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
ARM GAS  /tmp/cc9tM1KX.s 			page 35


1914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
1940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
1941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         This procedure performs following operations :
1944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Set handle State to READY
1948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
1952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
1955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t resetcount;
1956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Initialized local variable  */
1958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   errorcode = HAL_OK;
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
1960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
1961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
1963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
1964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
1966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
1967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
1969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
1970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
ARM GAS  /tmp/cc9tM1KX.s 			page 36


1971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
1973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
1975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
1976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
1978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
1979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
1980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
1981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
1984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
1986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
1987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
1988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
1990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
1992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
1993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
1995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
1996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
1998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable Tx DMA Request */
2017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set */
2020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       do
2021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (count == 0U)
2023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           break;
2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         count--;
ARM GAS  /tmp/cc9tM1KX.s 			page 37


2028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable peripheral */
2049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable Rx DMA Request */
2052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check error during Abort procedure */
2060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
2064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
2066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
2068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->state to ready */
2078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
ARM GAS  /tmp/cc9tM1KX.s 			page 38


2085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
2086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         This procedure performs following operations :
2089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Set handle State to READY
2093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t abortcplt ;
2102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
2103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t resetcount;
2104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Initialized local variable  */
2106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   errorcode = HAL_OK;
2107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   abortcplt = 1U;
2108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
2122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
2125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
2127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
2129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
2130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
2137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
2139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
ARM GAS  /tmp/cc9tM1KX.s 			page 39


2142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
2144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
2146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
2147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      before any call to DMA Abort functions */
2151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Otherwise, set it to NULL */
2156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Otherwise, set it to NULL */
2170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         abortcplt = 0U;
2195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
ARM GAS  /tmp/cc9tM1KX.s 			page 40


2199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         abortcplt = 0U;
2213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (abortcplt == 1U)
2218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check error during Abort procedure */
2224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Reset errorCode */
2232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
ARM GAS  /tmp/cc9tM1KX.s 			page 41


2256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
2264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
2273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
2284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
2290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
2293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      */
2309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc9tM1KX.s 			page 42


2313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR(hspi);
2351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR(hspi);
2358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
2365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
2368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc9tM1KX.s 			page 43


2370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return;
2382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
2395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable all interrupts */
2404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
2420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
2422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
ARM GAS  /tmp/cc9tM1KX.s 			page 44


2427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
2431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
2433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user error callback */
2438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/cc9tM1KX.s 			page 45


2484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/cc9tM1KX.s 			page 46


2541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  SPI error callback.
2547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
2567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   SPI control functions
2585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
2586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
2587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
2588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
2590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]
2591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
2595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
2596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 47


2598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval SPI state
2603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI handle state */
2607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return hspi->State;
2608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Return the SPI error code.
2612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI ErrorCode */
2619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return hspi->ErrorCode;
2620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   Private functions
2632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
2633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 48


2655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable Tx DMA Request */
2656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
2676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Tx complete callback */
2685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 49


2712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* CRC handling */
2714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until RXNE flag */
2717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Error on the CRC reception */
2720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Read CRC */
2723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
2728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
2734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check if CRC error occurred */
2741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
2751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Rx complete callback */
2760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
2762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
2764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
ARM GAS  /tmp/cc9tM1KX.s 			page 50


2769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* CRC handling */
2789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait the CRC data */
2792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check if CRC error occurred */
2816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
ARM GAS  /tmp/cc9tM1KX.s 			page 51


2826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user TxRx complete callback */
2835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
2837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
2839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Tx half complete callback */
2853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
2855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
2857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Rx half complete callback */
2871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
2873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
2875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/cc9tM1KX.s 			page 52


2883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user TxRx half complete callback */
2889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
2891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
2893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
2907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
2912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
2921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
2923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
2932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
ARM GAS  /tmp/cc9tM1KX.s 			page 53


2940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
2941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
2944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
2945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
2951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
2953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable Tx DMA Request */
2956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
2959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
2960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
2962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
2965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
2967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
2970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
2973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
2979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check no error during Abort procedure */
2983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
2984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
2986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
2996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
ARM GAS  /tmp/cc9tM1KX.s 			page 54


2997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Abort complete callback */
2999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
3012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable Rx DMA Request */
3024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Busy flag */
3027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
3049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
ARM GAS  /tmp/cc9tM1KX.s 			page 55


3054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
3055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
3057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Abort complete callback */
3062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8bit mode */
3078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check end of the reception */
3083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
ARM GAS  /tmp/cc9tM1KX.s 			page 56


3111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
3121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transmission */
3138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable TXE interrupt */
3146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable TXE interrupt */
3152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
ARM GAS  /tmp/cc9tM1KX.s 			page 57


3168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable RXNE interrupt */
3185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE interrupt */
3207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
ARM GAS  /tmp/cc9tM1KX.s 			page 58


3225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
3227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable TXE interrupt */
3235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable TXE interrupt */
3241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
3280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc9tM1KX.s 			page 59


3282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
3332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
ARM GAS  /tmp/cc9tM1KX.s 			page 60


3339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Enable CRC Transmission */
3369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Enable CRC Transmission */
3395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
ARM GAS  /tmp/cc9tM1KX.s 			page 61


3396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *              the configuration information for SPI module.
3406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Flag SPI flag to check
3407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  State flag state to check
3408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
3410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
3411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
3416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
3418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
3420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         and slave for their respective CRC calculation */
3424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
3427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
3431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Disable SPI peripheral */
3432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
3434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Reset CRC Calculation */
3436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
3438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
3440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Process Unlocked */
3444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
3445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
ARM GAS  /tmp/cc9tM1KX.s 			page 62


3453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
3460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
3461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI peripheral */
3468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
3472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
3473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
3475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Control the BSY flag */
3477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait the RXNE reset */
3486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait the RXNE reset */
3496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
3500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle
3508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
ARM GAS  /tmp/cc9tM1KX.s 			page 63


3510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
3511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
3515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
3516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Control the BSY flag */
3518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
3522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Control RXNE flag in case of Full-Duplex transfer */
3527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
3528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait the RXNE reset */
3530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
3549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable ERR interrupt */
3555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
3561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
3566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
ARM GAS  /tmp/cc9tM1KX.s 			page 64


3567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
3569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
3582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user Rx complete callback */
3603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
3605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
3607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
3610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user TxRx complete callback */
3613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
3615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
ARM GAS  /tmp/cc9tM1KX.s 			page 65


3624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
3647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
3661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user Rx complete callback */
3678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
ARM GAS  /tmp/cc9tM1KX.s 			page 66


3681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
3682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
3687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
3707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
3716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
3721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
3725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
3727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 67


3738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user Rx complete callback */
3751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
3753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
  27              		.loc 1 3766 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
3767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
  36              		.loc 1 3767 0
  37 0002 154B     		ldr	r3, .L6
  38 0004 1B68     		ldr	r3, [r3]
  39 0006 154A     		ldr	r2, .L6+4
  40 0008 A2FB0323 		umull	r2, r3, r2, r3
  41 000c 5B0A     		lsrs	r3, r3, #9
  42 000e 6422     		movs	r2, #100
  43 0010 02FB03F3 		mul	r3, r2, r3
  44 0014 0193     		str	r3, [sp, #4]
  45              	.L4:
3768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
  46              		.loc 1 3772 0
  47 0016 019B     		ldr	r3, [sp, #4]
  48 0018 23B9     		cbnz	r3, .L2
ARM GAS  /tmp/cc9tM1KX.s 			page 68


3773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
  49              		.loc 1 3774 0
  50 001a 436D     		ldr	r3, [r0, #84]
  51 001c 43F04003 		orr	r3, r3, #64
  52 0020 4365     		str	r3, [r0, #84]
3775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
  53              		.loc 1 3775 0
  54 0022 07E0     		b	.L3
  55              	.L2:
3776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
  56              		.loc 1 3777 0
  57 0024 019B     		ldr	r3, [sp, #4]
  58 0026 013B     		subs	r3, r3, #1
  59 0028 0193     		str	r3, [sp, #4]
3778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
  60              		.loc 1 3778 0
  61 002a 0368     		ldr	r3, [r0]
  62 002c 9B68     		ldr	r3, [r3, #8]
  63 002e 13F0020F 		tst	r3, #2
  64 0032 F0D0     		beq	.L4
  65              	.L3:
3779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  66              		.loc 1 3781 0
  67 0034 0268     		ldr	r2, [r0]
  68 0036 1368     		ldr	r3, [r2]
  69 0038 23F04003 		bic	r3, r3, #64
  70 003c 1360     		str	r3, [r2]
3782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
  71              		.loc 1 3784 0
  72 003e 0268     		ldr	r2, [r0]
  73 0040 5368     		ldr	r3, [r2, #4]
  74 0042 23F0E003 		bic	r3, r3, #224
  75 0046 5360     		str	r3, [r2, #4]
3785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read CRC to flush Data Register */
3787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
  76              		.loc 1 3787 0
  77 0048 0368     		ldr	r3, [r0]
  78 004a DB68     		ldr	r3, [r3, #12]
3788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
  79              		.loc 1 3789 0
  80 004c 0723     		movs	r3, #7
  81 004e 80F85130 		strb	r3, [r0, #81]
3790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
  82              		.loc 1 3790 0
  83 0052 02B0     		add	sp, sp, #8
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 0
  86              		@ sp needed
  87 0054 7047     		bx	lr
ARM GAS  /tmp/cc9tM1KX.s 			page 69


  88              	.L7:
  89 0056 00BF     		.align	2
  90              	.L6:
  91 0058 00000000 		.word	SystemCoreClock
  92 005c F1197605 		.word	91625969
  93              		.cfi_endproc
  94              	.LFE125:
  96              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
  97              		.align	2
  98              		.thumb
  99              		.thumb_func
 101              	SPI_AbortTx_ISR:
 102              	.LFB126:
3791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 103              		.loc 1 3799 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL1:
3800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE interrupt */
3801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 109              		.loc 1 3801 0
 110 0000 0268     		ldr	r2, [r0]
 111 0002 5368     		ldr	r3, [r2, #4]
 112 0004 23F08003 		bic	r3, r3, #128
 113 0008 5360     		str	r3, [r2, #4]
3802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 114              		.loc 1 3804 0
 115 000a 0268     		ldr	r2, [r0]
 116 000c 1368     		ldr	r3, [r2]
 117 000e 23F04003 		bic	r3, r3, #64
 118 0012 1360     		str	r3, [r2]
3805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 119              		.loc 1 3806 0
 120 0014 0723     		movs	r3, #7
 121 0016 80F85130 		strb	r3, [r0, #81]
 122 001a 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE126:
 126              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 127              		.align	2
 128              		.thumb
 129              		.thumb_func
 131              	SPI_WaitFlagStateUntilTimeout:
 132              	.LFB119:
ARM GAS  /tmp/cc9tM1KX.s 			page 70


3414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 133              		.loc 1 3414 0
 134              		.cfi_startproc
 135              		@ args = 4, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              	.LVL2:
 138 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 24
 141              		.cfi_offset 3, -24
 142              		.cfi_offset 4, -20
 143              		.cfi_offset 5, -16
 144              		.cfi_offset 6, -12
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 0546     		mov	r5, r0
 148 0004 0F46     		mov	r7, r1
 149 0006 1646     		mov	r6, r2
 150 0008 1C46     		mov	r4, r3
3415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 151              		.loc 1 3415 0
 152 000a 34E0     		b	.L11
 153              	.LVL3:
 154              	.L17:
3417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 155              		.loc 1 3417 0
 156 000c B4F1FF3F 		cmp	r4, #-1
 157 0010 31D0     		beq	.L11
3419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 158              		.loc 1 3419 0
 159 0012 FFF7FEFF 		bl	HAL_GetTick
 160              	.LVL4:
 161 0016 069B     		ldr	r3, [sp, #24]
 162 0018 C01A     		subs	r0, r0, r3
 163 001a 8442     		cmp	r4, r0
 164 001c 00D9     		bls	.L12
3419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 165              		.loc 1 3419 0 is_stmt 0 discriminator 1
 166 001e 54BB     		cbnz	r4, .L11
 167              	.L12:
3426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 168              		.loc 1 3426 0 is_stmt 1
 169 0020 2A68     		ldr	r2, [r5]
 170 0022 5368     		ldr	r3, [r2, #4]
 171 0024 23F0E003 		bic	r3, r3, #224
 172 0028 5360     		str	r3, [r2, #4]
3428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 173              		.loc 1 3428 0
 174 002a 6B68     		ldr	r3, [r5, #4]
 175 002c B3F5827F 		cmp	r3, #260
 176 0030 0BD1     		bne	.L13
3428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 177              		.loc 1 3428 0 is_stmt 0 discriminator 1
 178 0032 AB68     		ldr	r3, [r5, #8]
 179 0034 B3F5004F 		cmp	r3, #32768
 180 0038 02D0     		beq	.L14
3429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
ARM GAS  /tmp/cc9tM1KX.s 			page 71


 181              		.loc 1 3429 0 is_stmt 1
 182 003a B3F5806F 		cmp	r3, #1024
 183 003e 04D1     		bne	.L13
 184              	.L14:
3432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 185              		.loc 1 3432 0
 186 0040 2A68     		ldr	r2, [r5]
 187 0042 1368     		ldr	r3, [r2]
 188 0044 23F04003 		bic	r3, r3, #64
 189 0048 1360     		str	r3, [r2]
 190              	.L13:
3436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 191              		.loc 1 3436 0
 192 004a AB6A     		ldr	r3, [r5, #40]
 193 004c B3F5005F 		cmp	r3, #8192
 194 0050 09D1     		bne	.L15
3438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 195              		.loc 1 3438 0
 196 0052 2A68     		ldr	r2, [r5]
 197 0054 1368     		ldr	r3, [r2]
 198 0056 23F40053 		bic	r3, r3, #8192
 199 005a 1360     		str	r3, [r2]
 200 005c 2A68     		ldr	r2, [r5]
 201 005e 1368     		ldr	r3, [r2]
 202 0060 43F40053 		orr	r3, r3, #8192
 203 0064 1360     		str	r3, [r2]
 204              	.L15:
3441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 205              		.loc 1 3441 0
 206 0066 0123     		movs	r3, #1
 207 0068 85F85130 		strb	r3, [r5, #81]
3444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 208              		.loc 1 3444 0
 209 006c 0023     		movs	r3, #0
 210 006e 85F85030 		strb	r3, [r5, #80]
3446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 211              		.loc 1 3446 0
 212 0072 0320     		movs	r0, #3
 213 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 214              	.LVL5:
 215              	.L11:
3415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 216              		.loc 1 3415 0
 217 0076 2B68     		ldr	r3, [r5]
 218 0078 9B68     		ldr	r3, [r3, #8]
 219 007a 37EA0303 		bics	r3, r7, r3
 220 007e 0CBF     		ite	eq
 221 0080 0123     		moveq	r3, #1
 222 0082 0023     		movne	r3, #0
 223 0084 B342     		cmp	r3, r6
 224 0086 C1D1     		bne	.L17
3451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 225              		.loc 1 3451 0
 226 0088 0020     		movs	r0, #0
3452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 227              		.loc 1 3452 0
 228 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/cc9tM1KX.s 			page 72


 229              		.cfi_endproc
 230              	.LFE119:
 232              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 233              		.align	2
 234              		.thumb
 235              		.thumb_func
 237              	SPI_EndRxTxTransaction:
 238              	.LFB121:
3513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
 239              		.loc 1 3513 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL6:
 244 0000 10B5     		push	{r4, lr}
 245              	.LCFI3:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 4, -8
 248              		.cfi_offset 14, -4
 249 0002 82B0     		sub	sp, sp, #8
 250              	.LCFI4:
 251              		.cfi_def_cfa_offset 16
 252 0004 0446     		mov	r4, r0
3515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 253              		.loc 1 3515 0
 254 0006 4068     		ldr	r0, [r0, #4]
 255              	.LVL7:
 256 0008 B0F5827F 		cmp	r0, #260
 257 000c 0ED1     		bne	.L20
3518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 258              		.loc 1 3518 0
 259 000e 0092     		str	r2, [sp]
 260 0010 0B46     		mov	r3, r1
 261 0012 0022     		movs	r2, #0
 262              	.LVL8:
 263 0014 8021     		movs	r1, #128
 264              	.LVL9:
 265 0016 2046     		mov	r0, r4
 266 0018 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 267              	.LVL10:
 268 001c 0346     		mov	r3, r0
 269 001e D0B1     		cbz	r0, .L21
3520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
 270              		.loc 1 3520 0
 271 0020 636D     		ldr	r3, [r4, #84]
 272 0022 43F02003 		orr	r3, r3, #32
 273 0026 6365     		str	r3, [r4, #84]
3521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 274              		.loc 1 3521 0
 275 0028 0323     		movs	r3, #3
 276 002a 14E0     		b	.L21
 277              	.LVL11:
 278              	.L20:
3527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 279              		.loc 1 3527 0
 280 002c 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 281 0030 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/cc9tM1KX.s 			page 73


 282 0032 0528     		cmp	r0, #5
 283 0034 0ED1     		bne	.L22
3530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 284              		.loc 1 3530 0
 285 0036 0092     		str	r2, [sp]
 286 0038 0B46     		mov	r3, r1
 287 003a 0022     		movs	r2, #0
 288              	.LVL12:
 289 003c 0121     		movs	r1, #1
 290              	.LVL13:
 291 003e 2046     		mov	r0, r4
 292 0040 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 293              	.LVL14:
 294 0044 0346     		mov	r3, r0
 295 0046 30B1     		cbz	r0, .L21
3532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
 296              		.loc 1 3532 0
 297 0048 636D     		ldr	r3, [r4, #84]
 298 004a 43F02003 		orr	r3, r3, #32
 299 004e 6365     		str	r3, [r4, #84]
3533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 300              		.loc 1 3533 0
 301 0050 0323     		movs	r3, #3
 302 0052 00E0     		b	.L21
 303              	.LVL15:
 304              	.L22:
3537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 305              		.loc 1 3537 0
 306 0054 0023     		movs	r3, #0
 307              	.LVL16:
 308              	.L21:
3538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 309              		.loc 1 3538 0
 310 0056 1846     		mov	r0, r3
 311 0058 02B0     		add	sp, sp, #8
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 8
 314              		@ sp needed
 315 005a 10BD     		pop	{r4, pc}
 316              		.cfi_endproc
 317              	.LFE121:
 319              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 320              		.align	2
 321              		.thumb
 322              		.thumb_func
 324              	SPI_EndRxTransaction:
 325              	.LFB120:
3463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 326              		.loc 1 3463 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              	.LVL17:
 331 0000 10B5     		push	{r4, lr}
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
ARM GAS  /tmp/cc9tM1KX.s 			page 74


 335              		.cfi_offset 14, -4
 336 0002 82B0     		sub	sp, sp, #8
 337              	.LCFI7:
 338              		.cfi_def_cfa_offset 16
 339 0004 0446     		mov	r4, r0
3464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 340              		.loc 1 3464 0
 341 0006 4068     		ldr	r0, [r0, #4]
 342              	.LVL18:
 343 0008 B0F5827F 		cmp	r0, #260
 344 000c 0BD1     		bne	.L25
3464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 345              		.loc 1 3464 0 is_stmt 0 discriminator 1
 346 000e A368     		ldr	r3, [r4, #8]
 347 0010 B3F5004F 		cmp	r3, #32768
 348 0014 02D0     		beq	.L26
3465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 349              		.loc 1 3465 0 is_stmt 1
 350 0016 B3F5806F 		cmp	r3, #1024
 351 001a 04D1     		bne	.L25
 352              	.L26:
3468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 353              		.loc 1 3468 0
 354 001c 2068     		ldr	r0, [r4]
 355 001e 0368     		ldr	r3, [r0]
 356 0020 23F04003 		bic	r3, r3, #64
 357 0024 0360     		str	r3, [r0]
 358              	.L25:
3472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 359              		.loc 1 3472 0
 360 0026 6068     		ldr	r0, [r4, #4]
 361 0028 B0F5827F 		cmp	r0, #260
 362 002c 21D1     		bne	.L27
3474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 363              		.loc 1 3474 0
 364 002e A368     		ldr	r3, [r4, #8]
 365 0030 B3F5806F 		cmp	r3, #1024
 366 0034 0ED0     		beq	.L28
3477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 367              		.loc 1 3477 0
 368 0036 0092     		str	r2, [sp]
 369 0038 0B46     		mov	r3, r1
 370 003a 0022     		movs	r2, #0
 371              	.LVL19:
 372 003c 8021     		movs	r1, #128
 373              	.LVL20:
 374 003e 2046     		mov	r0, r4
 375 0040 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 376              	.LVL21:
 377 0044 0346     		mov	r3, r0
 378 0046 10B3     		cbz	r0, .L29
3479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
 379              		.loc 1 3479 0
 380 0048 636D     		ldr	r3, [r4, #84]
 381 004a 43F02003 		orr	r3, r3, #32
 382 004e 6365     		str	r3, [r4, #84]
3480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
ARM GAS  /tmp/cc9tM1KX.s 			page 75


 383              		.loc 1 3480 0
 384 0050 0323     		movs	r3, #3
 385 0052 1CE0     		b	.L29
 386              	.LVL22:
 387              	.L28:
3486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 388              		.loc 1 3486 0
 389 0054 0092     		str	r2, [sp]
 390 0056 0B46     		mov	r3, r1
 391 0058 0022     		movs	r2, #0
 392              	.LVL23:
 393 005a 0121     		movs	r1, #1
 394              	.LVL24:
 395 005c 2046     		mov	r0, r4
 396 005e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 397              	.LVL25:
 398 0062 0346     		mov	r3, r0
 399 0064 98B1     		cbz	r0, .L29
3488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
 400              		.loc 1 3488 0
 401 0066 636D     		ldr	r3, [r4, #84]
 402 0068 43F02003 		orr	r3, r3, #32
 403 006c 6365     		str	r3, [r4, #84]
3489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 404              		.loc 1 3489 0
 405 006e 0323     		movs	r3, #3
 406 0070 0DE0     		b	.L29
 407              	.LVL26:
 408              	.L27:
3496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 409              		.loc 1 3496 0
 410 0072 0092     		str	r2, [sp]
 411 0074 0B46     		mov	r3, r1
 412 0076 0022     		movs	r2, #0
 413              	.LVL27:
 414 0078 0121     		movs	r1, #1
 415              	.LVL28:
 416 007a 2046     		mov	r0, r4
 417 007c FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 418              	.LVL29:
 419 0080 0346     		mov	r3, r0
 420 0082 20B1     		cbz	r0, .L29
3498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
 421              		.loc 1 3498 0
 422 0084 636D     		ldr	r3, [r4, #84]
 423 0086 43F02003 		orr	r3, r3, #32
 424 008a 6365     		str	r3, [r4, #84]
3499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 425              		.loc 1 3499 0
 426 008c 0323     		movs	r3, #3
 427              	.L29:
3503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 428              		.loc 1 3503 0
 429 008e 1846     		mov	r0, r3
 430 0090 02B0     		add	sp, sp, #8
 431              	.LCFI8:
 432              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc9tM1KX.s 			page 76


 433              		@ sp needed
 434 0092 10BD     		pop	{r4, pc}
 435              		.cfi_endproc
 436              	.LFE120:
 438              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 439              		.align	2
 440              		.weak	HAL_SPI_MspInit
 441              		.thumb
 442              		.thumb_func
 444              	HAL_SPI_MspInit:
 445              	.LFB74:
 463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 446              		.loc 1 463 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL30:
 452 0000 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE74:
 456 0002 00BF     		.section	.text.HAL_SPI_Init,"ax",%progbits
 457              		.align	2
 458              		.global	HAL_SPI_Init
 459              		.thumb
 460              		.thumb_func
 462              	HAL_SPI_Init:
 463              	.LFB72:
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 464              		.loc 1 310 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              	.LVL31:
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 469              		.loc 1 312 0
 470 0000 0028     		cmp	r0, #0
 471 0002 35D0     		beq	.L35
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 472              		.loc 1 310 0
 473 0004 10B5     		push	{r4, lr}
 474              	.LCFI9:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 478 0006 0446     		mov	r4, r0
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 479              		.loc 1 340 0
 480 0008 0023     		movs	r3, #0
 481 000a 8362     		str	r3, [r0, #40]
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 482              		.loc 1 343 0
 483 000c 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 484 0010 13F0FF0F 		tst	r3, #255
 485 0014 04D1     		bne	.L34
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 486              		.loc 1 346 0
ARM GAS  /tmp/cc9tM1KX.s 			page 77


 487 0016 0023     		movs	r3, #0
 488 0018 80F85030 		strb	r3, [r0, #80]
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 489              		.loc 1 368 0
 490 001c FFF7FEFF 		bl	HAL_SPI_MspInit
 491              	.LVL32:
 492              	.L34:
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 493              		.loc 1 372 0
 494 0020 0223     		movs	r3, #2
 495 0022 84F85130 		strb	r3, [r4, #81]
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 496              		.loc 1 375 0
 497 0026 2268     		ldr	r2, [r4]
 498 0028 1368     		ldr	r3, [r2]
 499 002a 23F04003 		bic	r3, r3, #64
 500 002e 1360     		str	r3, [r2]
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 501              		.loc 1 380 0
 502 0030 2168     		ldr	r1, [r4]
 503 0032 6268     		ldr	r2, [r4, #4]
 504 0034 A368     		ldr	r3, [r4, #8]
 505 0036 1A43     		orrs	r2, r2, r3
 506 0038 E368     		ldr	r3, [r4, #12]
 507 003a 1A43     		orrs	r2, r2, r3
 508 003c 2369     		ldr	r3, [r4, #16]
 509 003e 1A43     		orrs	r2, r2, r3
 510 0040 6369     		ldr	r3, [r4, #20]
 511 0042 1A43     		orrs	r2, r2, r3
 512 0044 A369     		ldr	r3, [r4, #24]
 513 0046 03F40073 		and	r3, r3, #512
 514 004a 1343     		orrs	r3, r3, r2
 515 004c E269     		ldr	r2, [r4, #28]
 516 004e 1343     		orrs	r3, r3, r2
 517 0050 226A     		ldr	r2, [r4, #32]
 518 0052 1343     		orrs	r3, r3, r2
 519 0054 A26A     		ldr	r2, [r4, #40]
 520 0056 1A43     		orrs	r2, r2, r3
 521 0058 0A60     		str	r2, [r1]
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 522              		.loc 1 389 0
 523 005a 2268     		ldr	r2, [r4]
 524 005c 638B     		ldrh	r3, [r4, #26]
 525 005e 03F00403 		and	r3, r3, #4
 526 0062 5360     		str	r3, [r2, #4]
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 527              		.loc 1 406 0
 528 0064 0020     		movs	r0, #0
 529 0066 6065     		str	r0, [r4, #84]
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 530              		.loc 1 407 0
 531 0068 0123     		movs	r3, #1
 532 006a 84F85130 		strb	r3, [r4, #81]
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 533              		.loc 1 409 0
 534 006e 10BD     		pop	{r4, pc}
 535              	.LVL33:
ARM GAS  /tmp/cc9tM1KX.s 			page 78


 536              	.L35:
 537              	.LCFI10:
 538              		.cfi_def_cfa_offset 0
 539              		.cfi_restore 4
 540              		.cfi_restore 14
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 541              		.loc 1 314 0
 542 0070 0120     		movs	r0, #1
 543              	.LVL34:
 544 0072 7047     		bx	lr
 545              		.cfi_endproc
 546              	.LFE72:
 548              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 549              		.align	2
 550              		.weak	HAL_SPI_MspDeInit
 551              		.thumb
 552              		.thumb_func
 554              	HAL_SPI_MspDeInit:
 555              	.LFB75:
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 556              		.loc 1 479 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561              	.LVL35:
 562 0000 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE75:
 566 0002 00BF     		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 567              		.align	2
 568              		.global	HAL_SPI_DeInit
 569              		.thumb
 570              		.thumb_func
 572              	HAL_SPI_DeInit:
 573              	.LFB73:
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 574              		.loc 1 419 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              	.LVL36:
 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 579              		.loc 1 421 0
 580 0000 90B1     		cbz	r0, .L41
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 581              		.loc 1 419 0
 582 0002 10B5     		push	{r4, lr}
 583              	.LCFI11:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 587 0004 0446     		mov	r4, r0
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 588              		.loc 1 429 0
 589 0006 0223     		movs	r3, #2
 590 0008 80F85130 		strb	r3, [r0, #81]
ARM GAS  /tmp/cc9tM1KX.s 			page 79


 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 591              		.loc 1 432 0
 592 000c 0268     		ldr	r2, [r0]
 593 000e 1368     		ldr	r3, [r2]
 594 0010 23F04003 		bic	r3, r3, #64
 595 0014 1360     		str	r3, [r2]
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 596              		.loc 1 444 0
 597 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 598              	.LVL37:
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 599              		.loc 1 447 0
 600 001a 0020     		movs	r0, #0
 601 001c 6065     		str	r0, [r4, #84]
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 602              		.loc 1 448 0
 603 001e 84F85100 		strb	r0, [r4, #81]
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 604              		.loc 1 451 0
 605 0022 84F85000 		strb	r0, [r4, #80]
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 606              		.loc 1 453 0
 607 0026 10BD     		pop	{r4, pc}
 608              	.LVL38:
 609              	.L41:
 610              	.LCFI12:
 611              		.cfi_def_cfa_offset 0
 612              		.cfi_restore 4
 613              		.cfi_restore 14
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 614              		.loc 1 423 0
 615 0028 0120     		movs	r0, #1
 616              	.LVL39:
 617 002a 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE73:
 621              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 622              		.align	2
 623              		.global	HAL_SPI_Transmit
 624              		.thumb
 625              		.thumb_func
 627              	HAL_SPI_Transmit:
 628              	.LFB76:
 751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 629              		.loc 1 751 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 8
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              	.LVL40:
 634 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 635              	.LCFI13:
 636              		.cfi_def_cfa_offset 24
 637              		.cfi_offset 4, -24
 638              		.cfi_offset 5, -20
 639              		.cfi_offset 6, -16
 640              		.cfi_offset 7, -12
 641              		.cfi_offset 8, -8
ARM GAS  /tmp/cc9tM1KX.s 			page 80


 642              		.cfi_offset 14, -4
 643 0004 82B0     		sub	sp, sp, #8
 644              	.LCFI14:
 645              		.cfi_def_cfa_offset 32
 646              	.LVL41:
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 647              		.loc 1 760 0
 648 0006 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 649 000a 012C     		cmp	r4, #1
 650 000c 00F0C680 		beq	.L67
 651 0010 1D46     		mov	r5, r3
 652 0012 1746     		mov	r7, r2
 653 0014 8846     		mov	r8, r1
 654 0016 0446     		mov	r4, r0
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 655              		.loc 1 760 0 is_stmt 0 discriminator 2
 656 0018 0123     		movs	r3, #1
 657              	.LVL42:
 658 001a 80F85030 		strb	r3, [r0, #80]
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 659              		.loc 1 763 0 is_stmt 1 discriminator 2
 660 001e FFF7FEFF 		bl	HAL_GetTick
 661              	.LVL43:
 662 0022 0646     		mov	r6, r0
 663              	.LVL44:
 766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 664              		.loc 1 766 0 discriminator 2
 665 0024 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 666 0028 DBB2     		uxtb	r3, r3
 667 002a 012B     		cmp	r3, #1
 668 002c 40F0A080 		bne	.L68
 772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 669              		.loc 1 772 0
 670 0030 B8F1000F 		cmp	r8, #0
 671 0034 00F09E80 		beq	.L69
 772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 672              		.loc 1 772 0 is_stmt 0 discriminator 1
 673 0038 002F     		cmp	r7, #0
 674 003a 00F09D80 		beq	.L70
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 675              		.loc 1 779 0 is_stmt 1
 676 003e 0323     		movs	r3, #3
 677 0040 84F85130 		strb	r3, [r4, #81]
 780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 678              		.loc 1 780 0
 679 0044 0023     		movs	r3, #0
 680 0046 6365     		str	r3, [r4, #84]
 781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 681              		.loc 1 781 0
 682 0048 C4F83080 		str	r8, [r4, #48]
 782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 683              		.loc 1 782 0
 684 004c A786     		strh	r7, [r4, #52]	@ movhi
 783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 685              		.loc 1 783 0
 686 004e E786     		strh	r7, [r4, #54]	@ movhi
 786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
ARM GAS  /tmp/cc9tM1KX.s 			page 81


 687              		.loc 1 786 0
 688 0050 A363     		str	r3, [r4, #56]
 787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 689              		.loc 1 787 0
 690 0052 A387     		strh	r3, [r4, #60]	@ movhi
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 691              		.loc 1 788 0
 692 0054 E387     		strh	r3, [r4, #62]	@ movhi
 789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 693              		.loc 1 789 0
 694 0056 6364     		str	r3, [r4, #68]
 790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 695              		.loc 1 790 0
 696 0058 2364     		str	r3, [r4, #64]
 793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 697              		.loc 1 793 0
 698 005a A368     		ldr	r3, [r4, #8]
 699 005c B3F5004F 		cmp	r3, #32768
 700 0060 04D1     		bne	.L47
 795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 701              		.loc 1 795 0
 702 0062 2268     		ldr	r2, [r4]
 703 0064 1368     		ldr	r3, [r2]
 704 0066 43F48043 		orr	r3, r3, #16384
 705 006a 1360     		str	r3, [r2]
 706              	.L47:
 807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 707              		.loc 1 807 0
 708 006c 2368     		ldr	r3, [r4]
 709 006e 1A68     		ldr	r2, [r3]
 710 0070 12F0400F 		tst	r2, #64
 711 0074 03D1     		bne	.L48
 810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 712              		.loc 1 810 0
 713 0076 1A68     		ldr	r2, [r3]
 714 0078 42F04002 		orr	r2, r2, #64
 715 007c 1A60     		str	r2, [r3]
 716              	.L48:
 814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 717              		.loc 1 814 0
 718 007e E368     		ldr	r3, [r4, #12]
 719 0080 B3F5006F 		cmp	r3, #2048
 720 0084 30D1     		bne	.L49
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 721              		.loc 1 816 0
 722 0086 6368     		ldr	r3, [r4, #4]
 723 0088 0BB1     		cbz	r3, .L50
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 724              		.loc 1 816 0 is_stmt 0 discriminator 1
 725 008a 012F     		cmp	r7, #1
 726 008c 27D1     		bne	.L52
 727              	.L50:
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 728              		.loc 1 818 0 is_stmt 1
 729 008e 2368     		ldr	r3, [r4]
 730 0090 226B     		ldr	r2, [r4, #48]
 731 0092 1288     		ldrh	r2, [r2]
ARM GAS  /tmp/cc9tM1KX.s 			page 82


 732 0094 DA60     		str	r2, [r3, #12]
 819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 733              		.loc 1 819 0
 734 0096 236B     		ldr	r3, [r4, #48]
 735 0098 0233     		adds	r3, r3, #2
 736 009a 2363     		str	r3, [r4, #48]
 820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 737              		.loc 1 820 0
 738 009c E38E     		ldrh	r3, [r4, #54]
 739 009e 9BB2     		uxth	r3, r3
 740 00a0 013B     		subs	r3, r3, #1
 741 00a2 9BB2     		uxth	r3, r3
 742 00a4 E386     		strh	r3, [r4, #54]	@ movhi
 743 00a6 1AE0     		b	.L52
 744              	.LVL45:
 745              	.L56:
 826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 746              		.loc 1 826 0
 747 00a8 2368     		ldr	r3, [r4]
 748 00aa 9A68     		ldr	r2, [r3, #8]
 749 00ac 12F0020F 		tst	r2, #2
 750 00b0 0BD0     		beq	.L53
 828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 751              		.loc 1 828 0
 752 00b2 226B     		ldr	r2, [r4, #48]
 753 00b4 1288     		ldrh	r2, [r2]
 754 00b6 DA60     		str	r2, [r3, #12]
 829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 755              		.loc 1 829 0
 756 00b8 236B     		ldr	r3, [r4, #48]
 757 00ba 0233     		adds	r3, r3, #2
 758 00bc 2363     		str	r3, [r4, #48]
 830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 759              		.loc 1 830 0
 760 00be E38E     		ldrh	r3, [r4, #54]
 761 00c0 9BB2     		uxth	r3, r3
 762 00c2 013B     		subs	r3, r3, #1
 763 00c4 9BB2     		uxth	r3, r3
 764 00c6 E386     		strh	r3, [r4, #54]	@ movhi
 765 00c8 09E0     		b	.L52
 766              	.L53:
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 767              		.loc 1 835 0
 768 00ca FFF7FEFF 		bl	HAL_GetTick
 769              	.LVL46:
 770 00ce 801B     		subs	r0, r0, r6
 771 00d0 A842     		cmp	r0, r5
 772 00d2 02D3     		bcc	.L55
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 773              		.loc 1 835 0 is_stmt 0 discriminator 1
 774 00d4 B5F1FF3F 		cmp	r5, #-1
 775 00d8 50D1     		bne	.L71
 776              	.L55:
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 777              		.loc 1 835 0 discriminator 3
 778 00da 002D     		cmp	r5, #0
 779 00dc 50D0     		beq	.L72
ARM GAS  /tmp/cc9tM1KX.s 			page 83


 780              	.L52:
 823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 781              		.loc 1 823 0 is_stmt 1
 782 00de E38E     		ldrh	r3, [r4, #54]
 783 00e0 9BB2     		uxth	r3, r3
 784 00e2 002B     		cmp	r3, #0
 785 00e4 E0D1     		bne	.L56
 786 00e6 2EE0     		b	.L57
 787              	.LVL47:
 788              	.L49:
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 789              		.loc 1 846 0
 790 00e8 6368     		ldr	r3, [r4, #4]
 791 00ea 0BB1     		cbz	r3, .L58
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 792              		.loc 1 846 0 is_stmt 0 discriminator 1
 793 00ec 012F     		cmp	r7, #1
 794 00ee 26D1     		bne	.L60
 795              	.L58:
 848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 796              		.loc 1 848 0 is_stmt 1
 797 00f0 2368     		ldr	r3, [r4]
 798 00f2 226B     		ldr	r2, [r4, #48]
 799 00f4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 800 00f6 1A73     		strb	r2, [r3, #12]
 849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 801              		.loc 1 849 0
 802 00f8 236B     		ldr	r3, [r4, #48]
 803 00fa 0133     		adds	r3, r3, #1
 804 00fc 2363     		str	r3, [r4, #48]
 850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 805              		.loc 1 850 0
 806 00fe E38E     		ldrh	r3, [r4, #54]
 807 0100 9BB2     		uxth	r3, r3
 808 0102 013B     		subs	r3, r3, #1
 809 0104 9BB2     		uxth	r3, r3
 810 0106 E386     		strh	r3, [r4, #54]	@ movhi
 811 0108 19E0     		b	.L60
 812              	.LVL48:
 813              	.L64:
 855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 814              		.loc 1 855 0
 815 010a 2368     		ldr	r3, [r4]
 816 010c 9A68     		ldr	r2, [r3, #8]
 817 010e 12F0020F 		tst	r2, #2
 818 0112 0BD0     		beq	.L61
 857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 819              		.loc 1 857 0
 820 0114 226B     		ldr	r2, [r4, #48]
 821 0116 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 822 0118 1A73     		strb	r2, [r3, #12]
 858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 823              		.loc 1 858 0
 824 011a 236B     		ldr	r3, [r4, #48]
 825 011c 0133     		adds	r3, r3, #1
 826 011e 2363     		str	r3, [r4, #48]
 859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
ARM GAS  /tmp/cc9tM1KX.s 			page 84


 827              		.loc 1 859 0
 828 0120 E28E     		ldrh	r2, [r4, #54]
 829 0122 92B2     		uxth	r2, r2
 830 0124 013A     		subs	r2, r2, #1
 831 0126 92B2     		uxth	r2, r2
 832 0128 E286     		strh	r2, [r4, #54]	@ movhi
 833 012a 08E0     		b	.L60
 834              	.L61:
 864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 835              		.loc 1 864 0
 836 012c FFF7FEFF 		bl	HAL_GetTick
 837              	.LVL49:
 838 0130 801B     		subs	r0, r0, r6
 839 0132 8542     		cmp	r5, r0
 840 0134 02D8     		bhi	.L63
 864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 841              		.loc 1 864 0 is_stmt 0 discriminator 1
 842 0136 B5F1FF3F 		cmp	r5, #-1
 843 013a 23D1     		bne	.L73
 844              	.L63:
 864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 845              		.loc 1 864 0 discriminator 3
 846 013c 25B3     		cbz	r5, .L74
 847              	.L60:
 852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 848              		.loc 1 852 0 is_stmt 1
 849 013e E28E     		ldrh	r2, [r4, #54]
 850 0140 92B2     		uxth	r2, r2
 851 0142 002A     		cmp	r2, #0
 852 0144 E1D1     		bne	.L64
 853              	.L57:
 881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 854              		.loc 1 881 0
 855 0146 3246     		mov	r2, r6
 856 0148 2946     		mov	r1, r5
 857 014a 2046     		mov	r0, r4
 858 014c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 859              	.LVL50:
 860 0150 08B1     		cbz	r0, .L65
 883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 861              		.loc 1 883 0
 862 0152 2023     		movs	r3, #32
 863 0154 6365     		str	r3, [r4, #84]
 864              	.L65:
 887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 865              		.loc 1 887 0
 866 0156 A368     		ldr	r3, [r4, #8]
 867 0158 33B9     		cbnz	r3, .L66
 868              	.LBB2:
 889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 869              		.loc 1 889 0
 870 015a 0193     		str	r3, [sp, #4]
 871 015c 2368     		ldr	r3, [r4]
 872 015e DA68     		ldr	r2, [r3, #12]
 873 0160 0192     		str	r2, [sp, #4]
 874 0162 9B68     		ldr	r3, [r3, #8]
 875 0164 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc9tM1KX.s 			page 85


 876 0166 019B     		ldr	r3, [sp, #4]
 877              	.L66:
 878              	.LBE2:
 892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 879              		.loc 1 892 0
 880 0168 636D     		ldr	r3, [r4, #84]
 881 016a 7BB9     		cbnz	r3, .L75
 753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 882              		.loc 1 753 0
 883 016c 0020     		movs	r0, #0
 884 016e 0EE0     		b	.L46
 885              	.LVL51:
 886              	.L68:
 768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 887              		.loc 1 768 0
 888 0170 0220     		movs	r0, #2
 889              	.LVL52:
 890 0172 0CE0     		b	.L46
 891              	.LVL53:
 892              	.L69:
 774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 893              		.loc 1 774 0
 894 0174 0120     		movs	r0, #1
 895              	.LVL54:
 896 0176 0AE0     		b	.L46
 897              	.LVL55:
 898              	.L70:
 899 0178 0120     		movs	r0, #1
 900              	.LVL56:
 901 017a 08E0     		b	.L46
 902              	.L71:
 837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 903              		.loc 1 837 0
 904 017c 0320     		movs	r0, #3
 905 017e 06E0     		b	.L46
 906              	.L72:
 907 0180 0320     		movs	r0, #3
 908 0182 04E0     		b	.L46
 909              	.L73:
 866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 910              		.loc 1 866 0
 911 0184 0320     		movs	r0, #3
 912 0186 02E0     		b	.L46
 913              	.L74:
 914 0188 0320     		movs	r0, #3
 915 018a 00E0     		b	.L46
 916              	.L75:
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 917              		.loc 1 894 0
 918 018c 0120     		movs	r0, #1
 919              	.L46:
 920              	.LVL57:
 898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
 921              		.loc 1 898 0
 922 018e 0123     		movs	r3, #1
 923 0190 84F85130 		strb	r3, [r4, #81]
 900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
ARM GAS  /tmp/cc9tM1KX.s 			page 86


 924              		.loc 1 900 0
 925 0194 0023     		movs	r3, #0
 926 0196 84F85030 		strb	r3, [r4, #80]
 901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 927              		.loc 1 901 0
 928 019a 00E0     		b	.L45
 929              	.LVL58:
 930              	.L67:
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 931              		.loc 1 760 0
 932 019c 0220     		movs	r0, #2
 933              	.LVL59:
 934              	.L45:
 902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 935              		.loc 1 902 0
 936 019e 02B0     		add	sp, sp, #8
 937              	.LCFI15:
 938              		.cfi_def_cfa_offset 24
 939              		@ sp needed
 940 01a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 941              		.cfi_endproc
 942              	.LFE76:
 944              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 945              		.align	2
 946              		.global	HAL_SPI_TransmitReceive
 947              		.thumb
 948              		.thumb_func
 950              	HAL_SPI_TransmitReceive:
 951              	.LFB78:
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 952              		.loc 1 1106 0
 953              		.cfi_startproc
 954              		@ args = 4, pretend = 0, frame = 8
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL60:
 957 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 958              	.LCFI16:
 959              		.cfi_def_cfa_offset 28
 960              		.cfi_offset 4, -28
 961              		.cfi_offset 5, -24
 962              		.cfi_offset 6, -20
 963              		.cfi_offset 7, -16
 964              		.cfi_offset 8, -12
 965              		.cfi_offset 9, -8
 966              		.cfi_offset 14, -4
 967 0004 83B0     		sub	sp, sp, #12
 968              	.LCFI17:
 969              		.cfi_def_cfa_offset 40
 970 0006 0A9D     		ldr	r5, [sp, #40]
 971              	.LVL61:
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 972              		.loc 1 1120 0
 973 0008 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 974 000c 012C     		cmp	r4, #1
 975 000e 00F00F81 		beq	.L99
 976 0012 1E46     		mov	r6, r3
 977 0014 9046     		mov	r8, r2
ARM GAS  /tmp/cc9tM1KX.s 			page 87


 978 0016 0F46     		mov	r7, r1
 979 0018 0446     		mov	r4, r0
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 980              		.loc 1 1120 0 is_stmt 0 discriminator 2
 981 001a 0123     		movs	r3, #1
 982              	.LVL62:
 983 001c 80F85030 		strb	r3, [r0, #80]
1123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 984              		.loc 1 1123 0 is_stmt 1 discriminator 2
 985 0020 FFF7FEFF 		bl	HAL_GetTick
 986              	.LVL63:
 987 0024 8146     		mov	r9, r0
 988              	.LVL64:
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 989              		.loc 1 1126 0 discriminator 2
 990 0026 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 991 002a DBB2     		uxtb	r3, r3
 992              	.LVL65:
1127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 993              		.loc 1 1127 0 discriminator 2
 994 002c 6268     		ldr	r2, [r4, #4]
 995              	.LVL66:
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 996              		.loc 1 1130 0 discriminator 2
 997 002e 012B     		cmp	r3, #1
 998 0030 0AD0     		beq	.L79
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 999              		.loc 1 1130 0 is_stmt 0 discriminator 1
 1000 0032 B2F5827F 		cmp	r2, #260
 1001 0036 40F0E180 		bne	.L100
1131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1002              		.loc 1 1131 0 is_stmt 1
 1003 003a A268     		ldr	r2, [r4, #8]
 1004              	.LVL67:
 1005 003c 002A     		cmp	r2, #0
 1006 003e 40F0DF80 		bne	.L101
1131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1007              		.loc 1 1131 0 is_stmt 0 discriminator 1
 1008 0042 042B     		cmp	r3, #4
 1009 0044 40F0DE80 		bne	.L102
 1010              	.L79:
1137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1011              		.loc 1 1137 0 is_stmt 1
 1012 0048 002F     		cmp	r7, #0
 1013 004a 00F0DD80 		beq	.L103
1137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1014              		.loc 1 1137 0 is_stmt 0 discriminator 1
 1015 004e B8F1000F 		cmp	r8, #0
 1016 0052 00F0DB80 		beq	.L104
1137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1017              		.loc 1 1137 0 discriminator 2
 1018 0056 002E     		cmp	r6, #0
 1019 0058 00F0DA80 		beq	.L105
1144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1020              		.loc 1 1144 0 is_stmt 1
 1021 005c 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1022              	.LVL68:
ARM GAS  /tmp/cc9tM1KX.s 			page 88


 1023 0060 DBB2     		uxtb	r3, r3
 1024 0062 042B     		cmp	r3, #4
 1025 0064 02D0     		beq	.L81
1146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1026              		.loc 1 1146 0
 1027 0066 0523     		movs	r3, #5
 1028 0068 84F85130 		strb	r3, [r4, #81]
 1029              	.L81:
1150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1030              		.loc 1 1150 0
 1031 006c 0023     		movs	r3, #0
 1032 006e 6365     		str	r3, [r4, #84]
1151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1033              		.loc 1 1151 0
 1034 0070 C4F83880 		str	r8, [r4, #56]
1152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1035              		.loc 1 1152 0
 1036 0074 E687     		strh	r6, [r4, #62]	@ movhi
1153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1037              		.loc 1 1153 0
 1038 0076 A687     		strh	r6, [r4, #60]	@ movhi
1154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1039              		.loc 1 1154 0
 1040 0078 2763     		str	r7, [r4, #48]
1155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1041              		.loc 1 1155 0
 1042 007a E686     		strh	r6, [r4, #54]	@ movhi
1156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1043              		.loc 1 1156 0
 1044 007c A686     		strh	r6, [r4, #52]	@ movhi
1159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1045              		.loc 1 1159 0
 1046 007e 2364     		str	r3, [r4, #64]
1160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1047              		.loc 1 1160 0
 1048 0080 6364     		str	r3, [r4, #68]
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1049              		.loc 1 1171 0
 1050 0082 2368     		ldr	r3, [r4]
 1051 0084 1A68     		ldr	r2, [r3]
 1052 0086 12F0400F 		tst	r2, #64
 1053 008a 03D1     		bne	.L82
1174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1054              		.loc 1 1174 0
 1055 008c 1A68     		ldr	r2, [r3]
 1056 008e 42F04002 		orr	r2, r2, #64
 1057 0092 1A60     		str	r2, [r3]
 1058              	.LVL69:
 1059              	.L82:
1178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1060              		.loc 1 1178 0
 1061 0094 E368     		ldr	r3, [r4, #12]
 1062 0096 B3F5006F 		cmp	r3, #2048
 1063 009a 4CD1     		bne	.L83
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1064              		.loc 1 1180 0
 1065 009c 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/cc9tM1KX.s 			page 89


 1066 009e 0BB1     		cbz	r3, .L84
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1067              		.loc 1 1180 0 is_stmt 0 discriminator 1
 1068 00a0 012E     		cmp	r6, #1
 1069 00a2 0BD1     		bne	.L85
 1070              	.L84:
1182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1071              		.loc 1 1182 0 is_stmt 1
 1072 00a4 2368     		ldr	r3, [r4]
 1073 00a6 226B     		ldr	r2, [r4, #48]
 1074 00a8 1288     		ldrh	r2, [r2]
 1075 00aa DA60     		str	r2, [r3, #12]
1183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 1076              		.loc 1 1183 0
 1077 00ac 236B     		ldr	r3, [r4, #48]
 1078 00ae 0233     		adds	r3, r3, #2
 1079 00b0 2363     		str	r3, [r4, #48]
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 1080              		.loc 1 1184 0
 1081 00b2 E38E     		ldrh	r3, [r4, #54]
 1082 00b4 9BB2     		uxth	r3, r3
 1083 00b6 013B     		subs	r3, r3, #1
 1084 00b8 9BB2     		uxth	r3, r3
 1085 00ba E386     		strh	r3, [r4, #54]	@ movhi
 1086              	.L85:
1213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1087              		.loc 1 1213 0
 1088 00bc 0126     		movs	r6, #1
 1089              	.LVL70:
 1090 00be 31E0     		b	.L86
 1091              	.LVL71:
 1092              	.L89:
1189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1093              		.loc 1 1189 0
 1094 00c0 2368     		ldr	r3, [r4]
 1095 00c2 9A68     		ldr	r2, [r3, #8]
 1096 00c4 12F0020F 		tst	r2, #2
 1097 00c8 0FD0     		beq	.L87
1189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1098              		.loc 1 1189 0 is_stmt 0 discriminator 1
 1099 00ca E28E     		ldrh	r2, [r4, #54]
 1100 00cc 92B2     		uxth	r2, r2
 1101 00ce 62B1     		cbz	r2, .L87
1189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1102              		.loc 1 1189 0 discriminator 2
 1103 00d0 5EB1     		cbz	r6, .L87
1191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1104              		.loc 1 1191 0 is_stmt 1
 1105 00d2 226B     		ldr	r2, [r4, #48]
 1106 00d4 1288     		ldrh	r2, [r2]
 1107 00d6 DA60     		str	r2, [r3, #12]
1192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 1108              		.loc 1 1192 0
 1109 00d8 236B     		ldr	r3, [r4, #48]
 1110 00da 0233     		adds	r3, r3, #2
 1111 00dc 2363     		str	r3, [r4, #48]
1193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
ARM GAS  /tmp/cc9tM1KX.s 			page 90


 1112              		.loc 1 1193 0
 1113 00de E38E     		ldrh	r3, [r4, #54]
 1114 00e0 9BB2     		uxth	r3, r3
 1115 00e2 013B     		subs	r3, r3, #1
 1116 00e4 9BB2     		uxth	r3, r3
 1117 00e6 E386     		strh	r3, [r4, #54]	@ movhi
 1118              	.LVL72:
1195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1119              		.loc 1 1195 0
 1120 00e8 0026     		movs	r6, #0
 1121              	.LVL73:
 1122              	.L87:
1207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1123              		.loc 1 1207 0
 1124 00ea 2368     		ldr	r3, [r4]
 1125 00ec 9A68     		ldr	r2, [r3, #8]
 1126 00ee 12F0010F 		tst	r2, #1
 1127 00f2 0ED0     		beq	.L88
1207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1128              		.loc 1 1207 0 is_stmt 0 discriminator 1
 1129 00f4 E28F     		ldrh	r2, [r4, #62]
 1130 00f6 92B2     		uxth	r2, r2
 1131 00f8 5AB1     		cbz	r2, .L88
1209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1132              		.loc 1 1209 0 is_stmt 1
 1133 00fa A26B     		ldr	r2, [r4, #56]
 1134 00fc DB68     		ldr	r3, [r3, #12]
 1135 00fe 1380     		strh	r3, [r2]	@ movhi
1210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1136              		.loc 1 1210 0
 1137 0100 A36B     		ldr	r3, [r4, #56]
 1138 0102 0233     		adds	r3, r3, #2
 1139 0104 A363     		str	r3, [r4, #56]
1211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1140              		.loc 1 1211 0
 1141 0106 E38F     		ldrh	r3, [r4, #62]
 1142 0108 9BB2     		uxth	r3, r3
 1143 010a 013B     		subs	r3, r3, #1
 1144 010c 9BB2     		uxth	r3, r3
 1145 010e E387     		strh	r3, [r4, #62]	@ movhi
 1146              	.LVL74:
1213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1147              		.loc 1 1213 0
 1148 0110 0126     		movs	r6, #1
 1149              	.LVL75:
 1150              	.L88:
1215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1151              		.loc 1 1215 0
 1152 0112 FFF7FEFF 		bl	HAL_GetTick
 1153              	.LVL76:
 1154 0116 C9EB0000 		rsb	r0, r9, r0
 1155 011a A842     		cmp	r0, r5
 1156 011c 02D3     		bcc	.L86
1215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1157              		.loc 1 1215 0 is_stmt 0 discriminator 1
 1158 011e B5F1FF3F 		cmp	r5, #-1
 1159 0122 77D1     		bne	.L106
ARM GAS  /tmp/cc9tM1KX.s 			page 91


 1160              	.LVL77:
 1161              	.L86:
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1162              		.loc 1 1186 0 is_stmt 1
 1163 0124 E38E     		ldrh	r3, [r4, #54]
 1164 0126 9BB2     		uxth	r3, r3
 1165 0128 002B     		cmp	r3, #0
 1166 012a C9D1     		bne	.L89
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1167              		.loc 1 1186 0 is_stmt 0 discriminator 1
 1168 012c E38F     		ldrh	r3, [r4, #62]
 1169 012e 9BB2     		uxth	r3, r3
 1170 0130 002B     		cmp	r3, #0
 1171 0132 C5D1     		bne	.L89
 1172 0134 4DE0     		b	.L90
 1173              	.LVL78:
 1174              	.L83:
1225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1175              		.loc 1 1225 0 is_stmt 1
 1176 0136 6368     		ldr	r3, [r4, #4]
 1177 0138 0BB1     		cbz	r3, .L91
1225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1178              		.loc 1 1225 0 is_stmt 0 discriminator 1
 1179 013a 012E     		cmp	r6, #1
 1180 013c 40D1     		bne	.L92
 1181              	.L91:
1227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 1182              		.loc 1 1227 0 is_stmt 1
 1183 013e 2368     		ldr	r3, [r4]
 1184 0140 226B     		ldr	r2, [r4, #48]
 1185 0142 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1186 0144 1A73     		strb	r2, [r3, #12]
1228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 1187              		.loc 1 1228 0
 1188 0146 236B     		ldr	r3, [r4, #48]
 1189 0148 0133     		adds	r3, r3, #1
 1190 014a 2363     		str	r3, [r4, #48]
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 1191              		.loc 1 1229 0
 1192 014c E38E     		ldrh	r3, [r4, #54]
 1193 014e 9BB2     		uxth	r3, r3
 1194 0150 013B     		subs	r3, r3, #1
 1195 0152 9BB2     		uxth	r3, r3
 1196 0154 E386     		strh	r3, [r4, #54]	@ movhi
 1197 0156 33E0     		b	.L92
 1198              	.LVL79:
 1199              	.L97:
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1200              		.loc 1 1234 0
 1201 0158 2368     		ldr	r3, [r4]
 1202 015a 9A68     		ldr	r2, [r3, #8]
 1203 015c 12F0020F 		tst	r2, #2
 1204 0160 0FD0     		beq	.L93
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1205              		.loc 1 1234 0 is_stmt 0 discriminator 1
 1206 0162 E28E     		ldrh	r2, [r4, #54]
 1207 0164 92B2     		uxth	r2, r2
ARM GAS  /tmp/cc9tM1KX.s 			page 92


 1208 0166 62B1     		cbz	r2, .L93
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1209              		.loc 1 1234 0 discriminator 2
 1210 0168 5EB1     		cbz	r6, .L93
1236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1211              		.loc 1 1236 0 is_stmt 1
 1212 016a 226B     		ldr	r2, [r4, #48]
 1213 016c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1214 016e 1A73     		strb	r2, [r3, #12]
1237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 1215              		.loc 1 1237 0
 1216 0170 236B     		ldr	r3, [r4, #48]
 1217 0172 0133     		adds	r3, r3, #1
 1218 0174 2363     		str	r3, [r4, #48]
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1219              		.loc 1 1238 0
 1220 0176 E38E     		ldrh	r3, [r4, #54]
 1221 0178 9BB2     		uxth	r3, r3
 1222 017a 013B     		subs	r3, r3, #1
 1223 017c 9BB2     		uxth	r3, r3
 1224 017e E386     		strh	r3, [r4, #54]	@ movhi
 1225              	.LVL80:
1240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1226              		.loc 1 1240 0
 1227 0180 0026     		movs	r6, #0
 1228              	.LVL81:
 1229              	.L93:
1252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1230              		.loc 1 1252 0
 1231 0182 2368     		ldr	r3, [r4]
 1232 0184 9A68     		ldr	r2, [r3, #8]
 1233 0186 12F0010F 		tst	r2, #1
 1234 018a 0ED0     		beq	.L94
1252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1235              		.loc 1 1252 0 is_stmt 0 discriminator 1
 1236 018c E28F     		ldrh	r2, [r4, #62]
 1237 018e 92B2     		uxth	r2, r2
 1238 0190 5AB1     		cbz	r2, .L94
1254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
 1239              		.loc 1 1254 0 is_stmt 1
 1240 0192 A26B     		ldr	r2, [r4, #56]
 1241 0194 DB68     		ldr	r3, [r3, #12]
 1242 0196 1370     		strb	r3, [r2]
1255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1243              		.loc 1 1255 0
 1244 0198 A36B     		ldr	r3, [r4, #56]
 1245 019a 0133     		adds	r3, r3, #1
 1246 019c A363     		str	r3, [r4, #56]
1256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1247              		.loc 1 1256 0
 1248 019e E38F     		ldrh	r3, [r4, #62]
 1249 01a0 9BB2     		uxth	r3, r3
 1250 01a2 013B     		subs	r3, r3, #1
 1251 01a4 9BB2     		uxth	r3, r3
 1252 01a6 E387     		strh	r3, [r4, #62]	@ movhi
 1253              	.LVL82:
1258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
ARM GAS  /tmp/cc9tM1KX.s 			page 93


 1254              		.loc 1 1258 0
 1255 01a8 0126     		movs	r6, #1
 1256              	.LVL83:
 1257              	.L94:
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1258              		.loc 1 1260 0
 1259 01aa FFF7FEFF 		bl	HAL_GetTick
 1260              	.LVL84:
 1261 01ae C9EB0000 		rsb	r0, r9, r0
 1262 01b2 8542     		cmp	r5, r0
 1263 01b4 02D8     		bhi	.L95
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1264              		.loc 1 1260 0 is_stmt 0 discriminator 1
 1265 01b6 B5F1FF3F 		cmp	r5, #-1
 1266 01ba 2DD1     		bne	.L107
 1267              	.L95:
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1268              		.loc 1 1260 0 discriminator 3
 1269 01bc 0DB9     		cbnz	r5, .L96
 1270 01be 2DE0     		b	.L108
 1271              	.LVL85:
 1272              	.L92:
1258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1273              		.loc 1 1258 0 is_stmt 1
 1274 01c0 0126     		movs	r6, #1
 1275              	.LVL86:
 1276              	.L96:
1231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1277              		.loc 1 1231 0
 1278 01c2 E38E     		ldrh	r3, [r4, #54]
 1279 01c4 9BB2     		uxth	r3, r3
 1280 01c6 002B     		cmp	r3, #0
 1281 01c8 C6D1     		bne	.L97
1231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1282              		.loc 1 1231 0 is_stmt 0 discriminator 1
 1283 01ca E38F     		ldrh	r3, [r4, #62]
 1284 01cc 9BB2     		uxth	r3, r3
 1285 01ce 002B     		cmp	r3, #0
 1286 01d0 C2D1     		bne	.L97
 1287              	.L90:
1296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1288              		.loc 1 1296 0 is_stmt 1
 1289 01d2 4A46     		mov	r2, r9
 1290 01d4 2946     		mov	r1, r5
 1291 01d6 2046     		mov	r0, r4
 1292 01d8 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1293              	.LVL87:
 1294 01dc 18B1     		cbz	r0, .L98
 1295              	.LVL88:
1299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1296              		.loc 1 1299 0
 1297 01de 2023     		movs	r3, #32
 1298 01e0 6365     		str	r3, [r4, #84]
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1299              		.loc 1 1298 0
 1300 01e2 0120     		movs	r0, #1
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc9tM1KX.s 			page 94


 1301              		.loc 1 1300 0
 1302 01e4 1DE0     		b	.L80
 1303              	.LVL89:
 1304              	.L98:
1304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1305              		.loc 1 1304 0
 1306 01e6 A368     		ldr	r3, [r4, #8]
 1307 01e8 D3B9     		cbnz	r3, .L109
 1308              	.LBB3:
1306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1309              		.loc 1 1306 0
 1310 01ea 0020     		movs	r0, #0
 1311 01ec 0190     		str	r0, [sp, #4]
 1312 01ee 2368     		ldr	r3, [r4]
 1313 01f0 DA68     		ldr	r2, [r3, #12]
 1314 01f2 0192     		str	r2, [sp, #4]
 1315 01f4 9B68     		ldr	r3, [r3, #8]
 1316 01f6 0193     		str	r3, [sp, #4]
 1317 01f8 019B     		ldr	r3, [sp, #4]
 1318 01fa 12E0     		b	.L80
 1319              	.LVL90:
 1320              	.L100:
 1321              	.LBE3:
1133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1322              		.loc 1 1133 0
 1323 01fc 0220     		movs	r0, #2
 1324              	.LVL91:
 1325 01fe 10E0     		b	.L80
 1326              	.LVL92:
 1327              	.L101:
 1328 0200 0220     		movs	r0, #2
 1329              	.LVL93:
 1330 0202 0EE0     		b	.L80
 1331              	.LVL94:
 1332              	.L102:
 1333 0204 0220     		movs	r0, #2
 1334              	.LVL95:
 1335 0206 0CE0     		b	.L80
 1336              	.LVL96:
 1337              	.L103:
1139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1338              		.loc 1 1139 0
 1339 0208 0120     		movs	r0, #1
 1340              	.LVL97:
 1341 020a 0AE0     		b	.L80
 1342              	.LVL98:
 1343              	.L104:
 1344 020c 0120     		movs	r0, #1
 1345              	.LVL99:
 1346 020e 08E0     		b	.L80
 1347              	.LVL100:
 1348              	.L105:
 1349 0210 0120     		movs	r0, #1
 1350              	.LVL101:
 1351 0212 06E0     		b	.L80
 1352              	.LVL102:
 1353              	.L106:
ARM GAS  /tmp/cc9tM1KX.s 			page 95


1217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
 1354              		.loc 1 1217 0
 1355 0214 0320     		movs	r0, #3
 1356 0216 04E0     		b	.L80
 1357              	.L107:
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
 1358              		.loc 1 1262 0
 1359 0218 0320     		movs	r0, #3
 1360 021a 02E0     		b	.L80
 1361              	.L108:
 1362 021c 0320     		movs	r0, #3
 1363 021e 00E0     		b	.L80
 1364              	.L109:
1114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1365              		.loc 1 1114 0
 1366 0220 0020     		movs	r0, #0
 1367              	.LVL103:
 1368              	.L80:
1310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1369              		.loc 1 1310 0
 1370 0222 0123     		movs	r3, #1
 1371 0224 84F85130 		strb	r3, [r4, #81]
1311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1372              		.loc 1 1311 0
 1373 0228 0023     		movs	r3, #0
 1374 022a 84F85030 		strb	r3, [r4, #80]
1312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1375              		.loc 1 1312 0
 1376 022e 00E0     		b	.L78
 1377              	.LVL104:
 1378              	.L99:
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1379              		.loc 1 1120 0
 1380 0230 0220     		movs	r0, #2
 1381              	.LVL105:
 1382              	.L78:
1313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1383              		.loc 1 1313 0
 1384 0232 03B0     		add	sp, sp, #12
 1385              	.LCFI18:
 1386              		.cfi_def_cfa_offset 28
 1387              		@ sp needed
 1388 0234 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1389              		.cfi_endproc
 1390              	.LFE78:
 1392              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1393              		.align	2
 1394              		.global	HAL_SPI_Receive
 1395              		.thumb
 1396              		.thumb_func
 1398              	HAL_SPI_Receive:
 1399              	.LFB77:
 914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 1400              		.loc 1 914 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc9tM1KX.s 			page 96


 1404              	.LVL106:
 1405 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1406              	.LCFI19:
 1407              		.cfi_def_cfa_offset 24
 1408              		.cfi_offset 4, -24
 1409              		.cfi_offset 5, -20
 1410              		.cfi_offset 6, -16
 1411              		.cfi_offset 7, -12
 1412              		.cfi_offset 8, -8
 1413              		.cfi_offset 14, -4
 1414 0004 82B0     		sub	sp, sp, #8
 1415              	.LCFI20:
 1416              		.cfi_def_cfa_offset 32
 1417 0006 0446     		mov	r4, r0
 1418 0008 0F46     		mov	r7, r1
 1419 000a 9046     		mov	r8, r2
 1420 000c 1D46     		mov	r5, r3
 1421              	.LVL107:
 918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1422              		.loc 1 918 0
 1423 000e 4368     		ldr	r3, [r0, #4]
 1424              	.LVL108:
 1425 0010 B3F5827F 		cmp	r3, #260
 1426 0014 0AD1     		bne	.L112
 918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1427              		.loc 1 918 0 is_stmt 0 discriminator 1
 1428 0016 8368     		ldr	r3, [r0, #8]
 1429 0018 43B9     		cbnz	r3, .L112
 920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 1430              		.loc 1 920 0 is_stmt 1
 1431 001a 0423     		movs	r3, #4
 1432 001c 80F85130 		strb	r3, [r0, #81]
 922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1433              		.loc 1 922 0
 1434 0020 0095     		str	r5, [sp]
 1435 0022 1346     		mov	r3, r2
 1436 0024 0A46     		mov	r2, r1
 1437              	.LVL109:
 1438 0026 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1439              	.LVL110:
 1440 002a 99E0     		b	.L113
 1441              	.LVL111:
 1442              	.L112:
 926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1443              		.loc 1 926 0
 1444 002c 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1445 0030 012B     		cmp	r3, #1
 1446 0032 00F09480 		beq	.L129
 926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1447              		.loc 1 926 0 is_stmt 0 discriminator 2
 1448 0036 0123     		movs	r3, #1
 1449 0038 84F85030 		strb	r3, [r4, #80]
 929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1450              		.loc 1 929 0 is_stmt 1 discriminator 2
 1451 003c FFF7FEFF 		bl	HAL_GetTick
 1452              	.LVL112:
 1453 0040 0646     		mov	r6, r0
ARM GAS  /tmp/cc9tM1KX.s 			page 97


 1454              	.LVL113:
 931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1455              		.loc 1 931 0 discriminator 2
 1456 0042 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1457 0046 DBB2     		uxtb	r3, r3
 1458 0048 012B     		cmp	r3, #1
 1459 004a 72D1     		bne	.L130
 937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1460              		.loc 1 937 0
 1461 004c 002F     		cmp	r7, #0
 1462 004e 72D0     		beq	.L131
 937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1463              		.loc 1 937 0 is_stmt 0 discriminator 1
 1464 0050 B8F1000F 		cmp	r8, #0
 1465 0054 71D0     		beq	.L132
 944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1466              		.loc 1 944 0 is_stmt 1
 1467 0056 0423     		movs	r3, #4
 1468 0058 84F85130 		strb	r3, [r4, #81]
 945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1469              		.loc 1 945 0
 1470 005c 0023     		movs	r3, #0
 1471 005e 6365     		str	r3, [r4, #84]
 946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1472              		.loc 1 946 0
 1473 0060 A763     		str	r7, [r4, #56]
 947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1474              		.loc 1 947 0
 1475 0062 A4F83C80 		strh	r8, [r4, #60]	@ movhi
 948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1476              		.loc 1 948 0
 1477 0066 A4F83E80 		strh	r8, [r4, #62]	@ movhi
 951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1478              		.loc 1 951 0
 1479 006a 2363     		str	r3, [r4, #48]
 952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1480              		.loc 1 952 0
 1481 006c A386     		strh	r3, [r4, #52]	@ movhi
 953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1482              		.loc 1 953 0
 1483 006e E386     		strh	r3, [r4, #54]	@ movhi
 954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1484              		.loc 1 954 0
 1485 0070 2364     		str	r3, [r4, #64]
 955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1486              		.loc 1 955 0
 1487 0072 6364     		str	r3, [r4, #68]
 968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1488              		.loc 1 968 0
 1489 0074 A368     		ldr	r3, [r4, #8]
 1490 0076 B3F5004F 		cmp	r3, #32768
 1491 007a 04D1     		bne	.L115
 970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1492              		.loc 1 970 0
 1493 007c 2268     		ldr	r2, [r4]
 1494 007e 1368     		ldr	r3, [r2]
 1495 0080 23F48043 		bic	r3, r3, #16384
ARM GAS  /tmp/cc9tM1KX.s 			page 98


 1496 0084 1360     		str	r3, [r2]
 1497              	.L115:
 974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1498              		.loc 1 974 0
 1499 0086 2368     		ldr	r3, [r4]
 1500 0088 1A68     		ldr	r2, [r3]
 1501 008a 12F0400F 		tst	r2, #64
 1502 008e 03D1     		bne	.L116
 977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1503              		.loc 1 977 0
 1504 0090 1A68     		ldr	r2, [r3]
 1505 0092 42F04002 		orr	r2, r2, #64
 1506 0096 1A60     		str	r2, [r3]
 1507              	.L116:
 981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1508              		.loc 1 981 0
 1509 0098 E368     		ldr	r3, [r4, #12]
 1510 009a DBB1     		cbz	r3, .L117
 1511 009c 39E0     		b	.L118
 1512              	.LVL114:
 1513              	.L122:
 987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1514              		.loc 1 987 0
 1515 009e 2368     		ldr	r3, [r4]
 1516 00a0 9A68     		ldr	r2, [r3, #8]
 1517 00a2 12F0010F 		tst	r2, #1
 1518 00a6 0BD0     		beq	.L119
 990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1519              		.loc 1 990 0
 1520 00a8 A26B     		ldr	r2, [r4, #56]
 1521 00aa 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1522 00ac 1370     		strb	r3, [r2]
 991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1523              		.loc 1 991 0
 1524 00ae A36B     		ldr	r3, [r4, #56]
 1525 00b0 0133     		adds	r3, r3, #1
 1526 00b2 A363     		str	r3, [r4, #56]
 992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1527              		.loc 1 992 0
 1528 00b4 E38F     		ldrh	r3, [r4, #62]
 1529 00b6 9BB2     		uxth	r3, r3
 1530 00b8 013B     		subs	r3, r3, #1
 1531 00ba 9BB2     		uxth	r3, r3
 1532 00bc E387     		strh	r3, [r4, #62]	@ movhi
 1533 00be 09E0     		b	.L117
 1534              	.L119:
 997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1535              		.loc 1 997 0
 1536 00c0 FFF7FEFF 		bl	HAL_GetTick
 1537              	.LVL115:
 1538 00c4 801B     		subs	r0, r0, r6
 1539 00c6 8542     		cmp	r5, r0
 1540 00c8 02D8     		bhi	.L121
 997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1541              		.loc 1 997 0 is_stmt 0 discriminator 1
 1542 00ca B5F1FF3F 		cmp	r5, #-1
 1543 00ce 36D1     		bne	.L133
ARM GAS  /tmp/cc9tM1KX.s 			page 99


 1544              	.L121:
 997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1545              		.loc 1 997 0 discriminator 3
 1546 00d0 002D     		cmp	r5, #0
 1547 00d2 36D0     		beq	.L134
 1548              	.L117:
 984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1549              		.loc 1 984 0 is_stmt 1
 1550 00d4 E38F     		ldrh	r3, [r4, #62]
 1551 00d6 9BB2     		uxth	r3, r3
 1552 00d8 002B     		cmp	r3, #0
 1553 00da E0D1     		bne	.L122
 1554 00dc 1DE0     		b	.L123
 1555              	.L127:
1011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1556              		.loc 1 1011 0
 1557 00de 2368     		ldr	r3, [r4]
 1558 00e0 9A68     		ldr	r2, [r3, #8]
 1559 00e2 12F0010F 		tst	r2, #1
 1560 00e6 0BD0     		beq	.L124
1013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1561              		.loc 1 1013 0
 1562 00e8 A26B     		ldr	r2, [r4, #56]
 1563 00ea DB68     		ldr	r3, [r3, #12]
 1564 00ec 1380     		strh	r3, [r2]	@ movhi
1014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1565              		.loc 1 1014 0
 1566 00ee A36B     		ldr	r3, [r4, #56]
 1567 00f0 0233     		adds	r3, r3, #2
 1568 00f2 A363     		str	r3, [r4, #56]
1015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1569              		.loc 1 1015 0
 1570 00f4 E38F     		ldrh	r3, [r4, #62]
 1571 00f6 9BB2     		uxth	r3, r3
 1572 00f8 013B     		subs	r3, r3, #1
 1573 00fa 9BB2     		uxth	r3, r3
 1574 00fc E387     		strh	r3, [r4, #62]	@ movhi
 1575 00fe 08E0     		b	.L118
 1576              	.L124:
1020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1577              		.loc 1 1020 0
 1578 0100 FFF7FEFF 		bl	HAL_GetTick
 1579              	.LVL116:
 1580 0104 801B     		subs	r0, r0, r6
 1581 0106 8542     		cmp	r5, r0
 1582 0108 02D8     		bhi	.L126
1020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1583              		.loc 1 1020 0 is_stmt 0 discriminator 1
 1584 010a B5F1FF3F 		cmp	r5, #-1
 1585 010e 1AD1     		bne	.L135
 1586              	.L126:
1020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1587              		.loc 1 1020 0 discriminator 3
 1588 0110 DDB1     		cbz	r5, .L136
 1589              	.L118:
1008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1590              		.loc 1 1008 0 is_stmt 1
ARM GAS  /tmp/cc9tM1KX.s 			page 100


 1591 0112 E38F     		ldrh	r3, [r4, #62]
 1592 0114 9BB2     		uxth	r3, r3
 1593 0116 002B     		cmp	r3, #0
 1594 0118 E1D1     		bne	.L127
 1595              	.L123:
1069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1596              		.loc 1 1069 0
 1597 011a 3246     		mov	r2, r6
 1598 011c 2946     		mov	r1, r5
 1599 011e 2046     		mov	r0, r4
 1600 0120 FFF7FEFF 		bl	SPI_EndRxTransaction
 1601              	.LVL117:
 1602 0124 08B1     		cbz	r0, .L128
1071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1603              		.loc 1 1071 0
 1604 0126 2023     		movs	r3, #32
 1605 0128 6365     		str	r3, [r4, #84]
 1606              	.L128:
1083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1607              		.loc 1 1083 0
 1608 012a 636D     		ldr	r3, [r4, #84]
 1609 012c 7BB9     		cbnz	r3, .L137
 916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1610              		.loc 1 916 0
 1611 012e 0020     		movs	r0, #0
 1612 0130 0EE0     		b	.L114
 1613              	.LVL118:
 1614              	.L130:
 933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1615              		.loc 1 933 0
 1616 0132 0220     		movs	r0, #2
 1617              	.LVL119:
 1618 0134 0CE0     		b	.L114
 1619              	.LVL120:
 1620              	.L131:
 939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1621              		.loc 1 939 0
 1622 0136 0120     		movs	r0, #1
 1623              	.LVL121:
 1624 0138 0AE0     		b	.L114
 1625              	.LVL122:
 1626              	.L132:
 1627 013a 0120     		movs	r0, #1
 1628              	.LVL123:
 1629 013c 08E0     		b	.L114
 1630              	.L133:
 999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 1631              		.loc 1 999 0
 1632 013e 0320     		movs	r0, #3
 1633 0140 06E0     		b	.L114
 1634              	.L134:
 1635 0142 0320     		movs	r0, #3
 1636 0144 04E0     		b	.L114
 1637              	.L135:
1022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 1638              		.loc 1 1022 0
 1639 0146 0320     		movs	r0, #3
ARM GAS  /tmp/cc9tM1KX.s 			page 101


 1640 0148 02E0     		b	.L114
 1641              	.L136:
 1642 014a 0320     		movs	r0, #3
 1643 014c 00E0     		b	.L114
 1644              	.L137:
1085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1645              		.loc 1 1085 0
 1646 014e 0120     		movs	r0, #1
 1647              	.L114:
 1648              	.LVL124:
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1649              		.loc 1 1089 0
 1650 0150 0123     		movs	r3, #1
 1651 0152 84F85130 		strb	r3, [r4, #81]
1090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1652              		.loc 1 1090 0
 1653 0156 0023     		movs	r3, #0
 1654 0158 84F85030 		strb	r3, [r4, #80]
1091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1655              		.loc 1 1091 0
 1656 015c 00E0     		b	.L113
 1657              	.LVL125:
 1658              	.L129:
 926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1659              		.loc 1 926 0
 1660 015e 0220     		movs	r0, #2
 1661              	.LVL126:
 1662              	.L113:
1092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1663              		.loc 1 1092 0
 1664 0160 02B0     		add	sp, sp, #8
 1665              	.LCFI21:
 1666              		.cfi_def_cfa_offset 24
 1667              		@ sp needed
 1668 0162 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1669              		.cfi_endproc
 1670              	.LFE77:
 1672 0166 00BF     		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1673              		.align	2
 1674              		.global	HAL_SPI_Transmit_IT
 1675              		.thumb
 1676              		.thumb_func
 1678              	HAL_SPI_Transmit_IT:
 1679              	.LFB79:
1324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1680              		.loc 1 1324 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
 1685              	.LVL127:
1331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1686              		.loc 1 1331 0
 1687 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1688 0004 012B     		cmp	r3, #1
 1689 0006 43D0     		beq	.L145
1331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 102


 1690              		.loc 1 1331 0 is_stmt 0 discriminator 2
 1691 0008 0123     		movs	r3, #1
 1692 000a 80F85030 		strb	r3, [r0, #80]
1333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1693              		.loc 1 1333 0 is_stmt 1 discriminator 2
 1694 000e 0029     		cmp	r1, #0
 1695 0010 32D0     		beq	.L146
1333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1696              		.loc 1 1333 0 is_stmt 0 discriminator 1
 1697 0012 002A     		cmp	r2, #0
 1698 0014 32D0     		beq	.L147
1339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1699              		.loc 1 1339 0 is_stmt 1
 1700 0016 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 1701 001a DBB2     		uxtb	r3, r3
 1702 001c 012B     		cmp	r3, #1
 1703 001e 2FD1     		bne	.L148
1346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1704              		.loc 1 1346 0
 1705 0020 0323     		movs	r3, #3
 1706 0022 80F85130 		strb	r3, [r0, #81]
1347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1707              		.loc 1 1347 0
 1708 0026 0023     		movs	r3, #0
 1709 0028 4365     		str	r3, [r0, #84]
1348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1710              		.loc 1 1348 0
 1711 002a 0163     		str	r1, [r0, #48]
1349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1712              		.loc 1 1349 0
 1713 002c 8286     		strh	r2, [r0, #52]	@ movhi
1350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1714              		.loc 1 1350 0
 1715 002e C286     		strh	r2, [r0, #54]	@ movhi
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1716              		.loc 1 1353 0
 1717 0030 8363     		str	r3, [r0, #56]
1354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1718              		.loc 1 1354 0
 1719 0032 8387     		strh	r3, [r0, #60]	@ movhi
1355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1720              		.loc 1 1355 0
 1721 0034 C387     		strh	r3, [r0, #62]	@ movhi
1356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1722              		.loc 1 1356 0
 1723 0036 0364     		str	r3, [r0, #64]
1359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1724              		.loc 1 1359 0
 1725 0038 C368     		ldr	r3, [r0, #12]
 1726 003a 13B1     		cbz	r3, .L142
1361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1727              		.loc 1 1361 0
 1728 003c 154B     		ldr	r3, .L150
 1729 003e 4364     		str	r3, [r0, #68]
 1730 0040 01E0     		b	.L143
 1731              	.L142:
1365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc9tM1KX.s 			page 103


 1732              		.loc 1 1365 0
 1733 0042 154B     		ldr	r3, .L150+4
 1734 0044 4364     		str	r3, [r0, #68]
 1735              	.L143:
1369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1736              		.loc 1 1369 0
 1737 0046 8368     		ldr	r3, [r0, #8]
 1738 0048 B3F5004F 		cmp	r3, #32768
 1739 004c 04D1     		bne	.L144
1371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1740              		.loc 1 1371 0
 1741 004e 0268     		ldr	r2, [r0]
 1742              	.LVL128:
 1743 0050 1368     		ldr	r3, [r2]
 1744 0052 43F48043 		orr	r3, r3, #16384
 1745 0056 1360     		str	r3, [r2]
 1746              	.LVL129:
 1747              	.L144:
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1748              		.loc 1 1383 0
 1749 0058 0268     		ldr	r2, [r0]
 1750 005a 5368     		ldr	r3, [r2, #4]
 1751 005c 43F0A003 		orr	r3, r3, #160
 1752 0060 5360     		str	r3, [r2, #4]
1387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1753              		.loc 1 1387 0
 1754 0062 0368     		ldr	r3, [r0]
 1755 0064 1A68     		ldr	r2, [r3]
 1756 0066 12F0400F 		tst	r2, #64
 1757 006a 0BD1     		bne	.L149
1390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1758              		.loc 1 1390 0
 1759 006c 1A68     		ldr	r2, [r3]
 1760 006e 42F04002 		orr	r2, r2, #64
 1761 0072 1A60     		str	r2, [r3]
1325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1762              		.loc 1 1325 0
 1763 0074 0023     		movs	r3, #0
 1764 0076 06E0     		b	.L141
 1765              	.LVL130:
 1766              	.L146:
1335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1767              		.loc 1 1335 0
 1768 0078 0123     		movs	r3, #1
 1769 007a 04E0     		b	.L141
 1770              	.L147:
 1771 007c 0123     		movs	r3, #1
 1772 007e 02E0     		b	.L141
 1773              	.L148:
1341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1774              		.loc 1 1341 0
 1775 0080 0223     		movs	r3, #2
 1776 0082 00E0     		b	.L141
 1777              	.LVL131:
 1778              	.L149:
1325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1779              		.loc 1 1325 0
ARM GAS  /tmp/cc9tM1KX.s 			page 104


 1780 0084 0023     		movs	r3, #0
 1781              	.L141:
 1782              	.LVL132:
1394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1783              		.loc 1 1394 0
 1784 0086 0022     		movs	r2, #0
 1785 0088 80F85020 		strb	r2, [r0, #80]
1395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1786              		.loc 1 1395 0
 1787 008c 1846     		mov	r0, r3
 1788              	.LVL133:
 1789 008e 7047     		bx	lr
 1790              	.LVL134:
 1791              	.L145:
1331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1792              		.loc 1 1331 0
 1793 0090 0220     		movs	r0, #2
 1794              	.LVL135:
1396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1795              		.loc 1 1396 0
 1796 0092 7047     		bx	lr
 1797              	.L151:
 1798              		.align	2
 1799              	.L150:
 1800 0094 00000000 		.word	SPI_TxISR_16BIT
 1801 0098 00000000 		.word	SPI_TxISR_8BIT
 1802              		.cfi_endproc
 1803              	.LFE79:
 1805              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 1806              		.align	2
 1807              		.global	HAL_SPI_TransmitReceive_IT
 1808              		.thumb
 1809              		.thumb_func
 1811              	HAL_SPI_TransmitReceive_IT:
 1812              	.LFB81:
1499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
 1813              		.loc 1 1499 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817              		@ link register save eliminated.
 1818              	.LVL136:
 1819 0000 30B4     		push	{r4, r5}
 1820              	.LCFI22:
 1821              		.cfi_def_cfa_offset 8
 1822              		.cfi_offset 4, -8
 1823              		.cfi_offset 5, -4
 1824              	.LVL137:
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1825              		.loc 1 1508 0
 1826 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1827 0006 012C     		cmp	r4, #1
 1828 0008 53D0     		beq	.L159
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1829              		.loc 1 1508 0 is_stmt 0 discriminator 2
 1830 000a 0124     		movs	r4, #1
 1831 000c 80F85040 		strb	r4, [r0, #80]
ARM GAS  /tmp/cc9tM1KX.s 			page 105


1511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1832              		.loc 1 1511 0 is_stmt 1 discriminator 2
 1833 0010 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1834 0014 E4B2     		uxtb	r4, r4
 1835              	.LVL138:
1512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1836              		.loc 1 1512 0 discriminator 2
 1837 0016 4568     		ldr	r5, [r0, #4]
 1838              	.LVL139:
1514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1839              		.loc 1 1514 0 discriminator 2
 1840 0018 012C     		cmp	r4, #1
 1841 001a 07D0     		beq	.L154
1514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1842              		.loc 1 1514 0 is_stmt 0 discriminator 1
 1843 001c B5F5827F 		cmp	r5, #260
 1844 0020 35D1     		bne	.L160
1515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1845              		.loc 1 1515 0 is_stmt 1
 1846 0022 8568     		ldr	r5, [r0, #8]
 1847              	.LVL140:
 1848 0024 002D     		cmp	r5, #0
 1849 0026 34D1     		bne	.L161
1515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1850              		.loc 1 1515 0 is_stmt 0 discriminator 1
 1851 0028 042C     		cmp	r4, #4
 1852 002a 34D1     		bne	.L162
 1853              	.L154:
1521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1854              		.loc 1 1521 0 is_stmt 1
 1855 002c 0029     		cmp	r1, #0
 1856 002e 34D0     		beq	.L163
1521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1857              		.loc 1 1521 0 is_stmt 0 discriminator 1
 1858 0030 002A     		cmp	r2, #0
 1859 0032 34D0     		beq	.L164
1521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1860              		.loc 1 1521 0 discriminator 2
 1861 0034 002B     		cmp	r3, #0
 1862 0036 34D0     		beq	.L165
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1863              		.loc 1 1528 0 is_stmt 1
 1864 0038 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1865              	.LVL141:
 1866 003c E4B2     		uxtb	r4, r4
 1867 003e 042C     		cmp	r4, #4
 1868 0040 02D0     		beq	.L156
1530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1869              		.loc 1 1530 0
 1870 0042 0524     		movs	r4, #5
 1871 0044 80F85140 		strb	r4, [r0, #81]
 1872              	.L156:
1534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1873              		.loc 1 1534 0
 1874 0048 0024     		movs	r4, #0
 1875 004a 4465     		str	r4, [r0, #84]
1535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
ARM GAS  /tmp/cc9tM1KX.s 			page 106


 1876              		.loc 1 1535 0
 1877 004c 0163     		str	r1, [r0, #48]
1536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1878              		.loc 1 1536 0
 1879 004e 8386     		strh	r3, [r0, #52]	@ movhi
1537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1880              		.loc 1 1537 0
 1881 0050 C386     		strh	r3, [r0, #54]	@ movhi
1538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1882              		.loc 1 1538 0
 1883 0052 8263     		str	r2, [r0, #56]
1539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1884              		.loc 1 1539 0
 1885 0054 8387     		strh	r3, [r0, #60]	@ movhi
1540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1886              		.loc 1 1540 0
 1887 0056 C387     		strh	r3, [r0, #62]	@ movhi
1543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1888              		.loc 1 1543 0
 1889 0058 C368     		ldr	r3, [r0, #12]
 1890              	.LVL142:
 1891 005a 23B1     		cbz	r3, .L157
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 1892              		.loc 1 1545 0
 1893 005c 164B     		ldr	r3, .L168
 1894 005e 0364     		str	r3, [r0, #64]
1546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1895              		.loc 1 1546 0
 1896 0060 164B     		ldr	r3, .L168+4
 1897 0062 4364     		str	r3, [r0, #68]
 1898 0064 03E0     		b	.L158
 1899              	.L157:
1550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 1900              		.loc 1 1550 0
 1901 0066 164B     		ldr	r3, .L168+8
 1902 0068 0364     		str	r3, [r0, #64]
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1903              		.loc 1 1551 0
 1904 006a 164B     		ldr	r3, .L168+12
 1905 006c 4364     		str	r3, [r0, #68]
 1906              	.L158:
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1907              		.loc 1 1563 0
 1908 006e 0268     		ldr	r2, [r0]
 1909              	.LVL143:
 1910 0070 5368     		ldr	r3, [r2, #4]
 1911 0072 43F0E003 		orr	r3, r3, #224
 1912 0076 5360     		str	r3, [r2, #4]
 1913              	.LVL144:
1566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1914              		.loc 1 1566 0
 1915 0078 0368     		ldr	r3, [r0]
 1916 007a 1A68     		ldr	r2, [r3]
 1917 007c 12F0400F 		tst	r2, #64
 1918 0080 11D1     		bne	.L166
1569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1919              		.loc 1 1569 0
ARM GAS  /tmp/cc9tM1KX.s 			page 107


 1920 0082 1A68     		ldr	r2, [r3]
 1921 0084 42F04002 		orr	r2, r2, #64
 1922 0088 1A60     		str	r2, [r3]
1502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1923              		.loc 1 1502 0
 1924 008a 0023     		movs	r3, #0
 1925 008c 0CE0     		b	.L155
 1926              	.LVL145:
 1927              	.L160:
1517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1928              		.loc 1 1517 0
 1929 008e 0223     		movs	r3, #2
 1930              	.LVL146:
 1931 0090 0AE0     		b	.L155
 1932              	.LVL147:
 1933              	.L161:
 1934 0092 0223     		movs	r3, #2
 1935              	.LVL148:
 1936 0094 08E0     		b	.L155
 1937              	.LVL149:
 1938              	.L162:
 1939 0096 0223     		movs	r3, #2
 1940              	.LVL150:
 1941 0098 06E0     		b	.L155
 1942              	.LVL151:
 1943              	.L163:
1523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1944              		.loc 1 1523 0
 1945 009a 0123     		movs	r3, #1
 1946              	.LVL152:
 1947 009c 04E0     		b	.L155
 1948              	.LVL153:
 1949              	.L164:
 1950 009e 0123     		movs	r3, #1
 1951              	.LVL154:
 1952 00a0 02E0     		b	.L155
 1953              	.LVL155:
 1954              	.L165:
 1955 00a2 0123     		movs	r3, #1
 1956              	.LVL156:
 1957 00a4 00E0     		b	.L155
 1958              	.LVL157:
 1959              	.L166:
1502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1960              		.loc 1 1502 0
 1961 00a6 0023     		movs	r3, #0
 1962              	.L155:
 1963              	.LVL158:
1574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1964              		.loc 1 1574 0
 1965 00a8 0022     		movs	r2, #0
 1966 00aa 80F85020 		strb	r2, [r0, #80]
1575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1967              		.loc 1 1575 0
 1968 00ae 1846     		mov	r0, r3
 1969              	.LVL159:
 1970 00b0 00E0     		b	.L153
ARM GAS  /tmp/cc9tM1KX.s 			page 108


 1971              	.LVL160:
 1972              	.L159:
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1973              		.loc 1 1508 0
 1974 00b2 0220     		movs	r0, #2
 1975              	.LVL161:
 1976              	.L153:
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1977              		.loc 1 1576 0
 1978 00b4 30BC     		pop	{r4, r5}
 1979              	.LCFI23:
 1980              		.cfi_restore 5
 1981              		.cfi_restore 4
 1982              		.cfi_def_cfa_offset 0
 1983 00b6 7047     		bx	lr
 1984              	.L169:
 1985              		.align	2
 1986              	.L168:
 1987 00b8 00000000 		.word	SPI_2linesRxISR_16BIT
 1988 00bc 00000000 		.word	SPI_2linesTxISR_16BIT
 1989 00c0 00000000 		.word	SPI_2linesRxISR_8BIT
 1990 00c4 00000000 		.word	SPI_2linesTxISR_8BIT
 1991              		.cfi_endproc
 1992              	.LFE81:
 1994              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 1995              		.align	2
 1996              		.global	HAL_SPI_Receive_IT
 1997              		.thumb
 1998              		.thumb_func
 2000              	HAL_SPI_Receive_IT:
 2001              	.LFB80:
1407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2002              		.loc 1 1407 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006              	.LVL162:
 2007 0000 38B5     		push	{r3, r4, r5, lr}
 2008              	.LCFI24:
 2009              		.cfi_def_cfa_offset 16
 2010              		.cfi_offset 3, -16
 2011              		.cfi_offset 4, -12
 2012              		.cfi_offset 5, -8
 2013              		.cfi_offset 14, -4
 2014              	.LVL163:
1410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2015              		.loc 1 1410 0
 2016 0002 8568     		ldr	r5, [r0, #8]
 2017 0004 5DB9     		cbnz	r5, .L171
1410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2018              		.loc 1 1410 0 is_stmt 0 discriminator 1
 2019 0006 4368     		ldr	r3, [r0, #4]
 2020 0008 B3F5827F 		cmp	r3, #260
 2021 000c 07D1     		bne	.L171
 2022 000e 1346     		mov	r3, r2
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2023              		.loc 1 1412 0 is_stmt 1
ARM GAS  /tmp/cc9tM1KX.s 			page 109


 2024 0010 0422     		movs	r2, #4
 2025              	.LVL164:
 2026 0012 80F85120 		strb	r2, [r0, #81]
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2027              		.loc 1 1414 0
 2028 0016 0A46     		mov	r2, r1
 2029 0018 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2030              	.LVL165:
 2031 001c 38BD     		pop	{r3, r4, r5, pc}
 2032              	.LVL166:
 2033              	.L171:
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2034              		.loc 1 1418 0
 2035 001e 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 2036 0022 012C     		cmp	r4, #1
 2037 0024 42D0     		beq	.L177
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2038              		.loc 1 1418 0 is_stmt 0 discriminator 2
 2039 0026 0123     		movs	r3, #1
 2040 0028 80F85030 		strb	r3, [r0, #80]
1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2041              		.loc 1 1420 0 is_stmt 1 discriminator 2
 2042 002c 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 2043 0030 E4B2     		uxtb	r4, r4
 2044 0032 9C42     		cmp	r4, r3
 2045 0034 2ED1     		bne	.L178
1426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2046              		.loc 1 1426 0
 2047 0036 0029     		cmp	r1, #0
 2048 0038 2ED0     		beq	.L179
1426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2049              		.loc 1 1426 0 is_stmt 0 discriminator 1
 2050 003a 002A     		cmp	r2, #0
 2051 003c 2ED0     		beq	.L180
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2052              		.loc 1 1433 0 is_stmt 1
 2053 003e 0423     		movs	r3, #4
 2054 0040 80F85130 		strb	r3, [r0, #81]
1434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2055              		.loc 1 1434 0
 2056 0044 0023     		movs	r3, #0
 2057 0046 4365     		str	r3, [r0, #84]
1435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2058              		.loc 1 1435 0
 2059 0048 8163     		str	r1, [r0, #56]
1436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2060              		.loc 1 1436 0
 2061 004a 8287     		strh	r2, [r0, #60]	@ movhi
1437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2062              		.loc 1 1437 0
 2063 004c C287     		strh	r2, [r0, #62]	@ movhi
1440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2064              		.loc 1 1440 0
 2065 004e 0363     		str	r3, [r0, #48]
1441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2066              		.loc 1 1441 0
 2067 0050 8386     		strh	r3, [r0, #52]	@ movhi
ARM GAS  /tmp/cc9tM1KX.s 			page 110


1442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2068              		.loc 1 1442 0
 2069 0052 C386     		strh	r3, [r0, #54]	@ movhi
1443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2070              		.loc 1 1443 0
 2071 0054 4364     		str	r3, [r0, #68]
1446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2072              		.loc 1 1446 0
 2073 0056 C368     		ldr	r3, [r0, #12]
 2074 0058 13B1     		cbz	r3, .L174
1448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2075              		.loc 1 1448 0
 2076 005a 154B     		ldr	r3, .L183
 2077 005c 0364     		str	r3, [r0, #64]
 2078 005e 01E0     		b	.L175
 2079              	.L174:
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2080              		.loc 1 1452 0
 2081 0060 144B     		ldr	r3, .L183+4
 2082 0062 0364     		str	r3, [r0, #64]
 2083              	.L175:
1456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2084              		.loc 1 1456 0
 2085 0064 B5F5004F 		cmp	r5, #32768
 2086 0068 04D1     		bne	.L176
1458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2087              		.loc 1 1458 0
 2088 006a 0268     		ldr	r2, [r0]
 2089              	.LVL167:
 2090 006c 1368     		ldr	r3, [r2]
 2091 006e 23F48043 		bic	r3, r3, #16384
 2092 0072 1360     		str	r3, [r2]
 2093              	.LVL168:
 2094              	.L176:
1470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2095              		.loc 1 1470 0
 2096 0074 0268     		ldr	r2, [r0]
 2097 0076 5368     		ldr	r3, [r2, #4]
 2098 0078 43F06003 		orr	r3, r3, #96
 2099 007c 5360     		str	r3, [r2, #4]
1477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2100              		.loc 1 1477 0
 2101 007e 0368     		ldr	r3, [r0]
 2102 0080 1A68     		ldr	r2, [r3]
 2103 0082 12F0400F 		tst	r2, #64
 2104 0086 0BD1     		bne	.L181
1480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2105              		.loc 1 1480 0
 2106 0088 1A68     		ldr	r2, [r3]
 2107 008a 42F04002 		orr	r2, r2, #64
 2108 008e 1A60     		str	r2, [r3]
1408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2109              		.loc 1 1408 0
 2110 0090 0023     		movs	r3, #0
 2111 0092 06E0     		b	.L173
 2112              	.LVL169:
 2113              	.L178:
ARM GAS  /tmp/cc9tM1KX.s 			page 111


1422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2114              		.loc 1 1422 0
 2115 0094 0223     		movs	r3, #2
 2116 0096 04E0     		b	.L173
 2117              	.L179:
1428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2118              		.loc 1 1428 0
 2119 0098 0123     		movs	r3, #1
 2120 009a 02E0     		b	.L173
 2121              	.L180:
 2122 009c 0123     		movs	r3, #1
 2123 009e 00E0     		b	.L173
 2124              	.LVL170:
 2125              	.L181:
1408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2126              		.loc 1 1408 0
 2127 00a0 0023     		movs	r3, #0
 2128              	.L173:
 2129              	.LVL171:
1485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2130              		.loc 1 1485 0
 2131 00a2 0022     		movs	r2, #0
 2132 00a4 80F85020 		strb	r2, [r0, #80]
1486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 2133              		.loc 1 1486 0
 2134 00a8 1846     		mov	r0, r3
 2135              	.LVL172:
 2136 00aa 38BD     		pop	{r3, r4, r5, pc}
 2137              	.LVL173:
 2138              	.L177:
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2139              		.loc 1 1418 0
 2140 00ac 0220     		movs	r0, #2
 2141              	.LVL174:
1487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2142              		.loc 1 1487 0
 2143 00ae 38BD     		pop	{r3, r4, r5, pc}
 2144              	.L184:
 2145              		.align	2
 2146              	.L183:
 2147 00b0 00000000 		.word	SPI_RxISR_16BIT
 2148 00b4 00000000 		.word	SPI_RxISR_8BIT
 2149              		.cfi_endproc
 2150              	.LFE80:
 2152              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2153              		.align	2
 2154              		.global	HAL_SPI_Transmit_DMA
 2155              		.thumb
 2156              		.thumb_func
 2158              	HAL_SPI_Transmit_DMA:
 2159              	.LFB82:
1587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2160              		.loc 1 1587 0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 0
 2163              		@ frame_needed = 0, uses_anonymous_args = 0
 2164              	.LVL175:
ARM GAS  /tmp/cc9tM1KX.s 			page 112


1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2165              		.loc 1 1597 0
 2166 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2167 0004 012B     		cmp	r3, #1
 2168 0006 5ED0     		beq	.L191
1587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2169              		.loc 1 1587 0 discriminator 2
 2170 0008 10B5     		push	{r4, lr}
 2171              	.LCFI25:
 2172              		.cfi_def_cfa_offset 8
 2173              		.cfi_offset 4, -8
 2174              		.cfi_offset 14, -4
 2175 000a 0446     		mov	r4, r0
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2176              		.loc 1 1597 0 discriminator 2
 2177 000c 0123     		movs	r3, #1
 2178 000e 80F85030 		strb	r3, [r0, #80]
1599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2179              		.loc 1 1599 0 discriminator 2
 2180 0012 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 2181 0016 DBB2     		uxtb	r3, r3
 2182 0018 012B     		cmp	r3, #1
 2183 001a 4BD1     		bne	.L192
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2184              		.loc 1 1605 0
 2185 001c 0029     		cmp	r1, #0
 2186 001e 4BD0     		beq	.L193
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2187              		.loc 1 1605 0 is_stmt 0 discriminator 1
 2188 0020 002A     		cmp	r2, #0
 2189 0022 4BD0     		beq	.L194
1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2190              		.loc 1 1612 0 is_stmt 1
 2191 0024 0323     		movs	r3, #3
 2192 0026 80F85130 		strb	r3, [r0, #81]
1613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2193              		.loc 1 1613 0
 2194 002a 0023     		movs	r3, #0
 2195 002c 4365     		str	r3, [r0, #84]
1614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2196              		.loc 1 1614 0
 2197 002e 0163     		str	r1, [r0, #48]
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2198              		.loc 1 1615 0
 2199 0030 8286     		strh	r2, [r0, #52]	@ movhi
1616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2200              		.loc 1 1616 0
 2201 0032 C286     		strh	r2, [r0, #54]	@ movhi
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2202              		.loc 1 1619 0
 2203 0034 8363     		str	r3, [r0, #56]
1620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2204              		.loc 1 1620 0
 2205 0036 4364     		str	r3, [r0, #68]
1621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2206              		.loc 1 1621 0
 2207 0038 0364     		str	r3, [r0, #64]
ARM GAS  /tmp/cc9tM1KX.s 			page 113


1622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2208              		.loc 1 1622 0
 2209 003a 8387     		strh	r3, [r0, #60]	@ movhi
1623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2210              		.loc 1 1623 0
 2211 003c C387     		strh	r3, [r0, #62]	@ movhi
1626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2212              		.loc 1 1626 0
 2213 003e 8368     		ldr	r3, [r0, #8]
 2214 0040 B3F5004F 		cmp	r3, #32768
 2215 0044 04D1     		bne	.L188
1628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2216              		.loc 1 1628 0
 2217 0046 0268     		ldr	r2, [r0]
 2218              	.LVL176:
 2219 0048 1368     		ldr	r3, [r2]
 2220 004a 43F48043 		orr	r3, r3, #16384
 2221 004e 1360     		str	r3, [r2]
 2222              	.LVL177:
 2223              	.L188:
1640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2224              		.loc 1 1640 0
 2225 0050 A36C     		ldr	r3, [r4, #72]
 2226 0052 1E4A     		ldr	r2, .L197
 2227 0054 DA62     		str	r2, [r3, #44]
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2228              		.loc 1 1643 0
 2229 0056 A36C     		ldr	r3, [r4, #72]
 2230 0058 1D4A     		ldr	r2, .L197+4
 2231 005a 9A62     		str	r2, [r3, #40]
1646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2232              		.loc 1 1646 0
 2233 005c A36C     		ldr	r3, [r4, #72]
 2234 005e 1D4A     		ldr	r2, .L197+8
 2235 0060 1A63     		str	r2, [r3, #48]
1649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2236              		.loc 1 1649 0
 2237 0062 A36C     		ldr	r3, [r4, #72]
 2238 0064 0022     		movs	r2, #0
 2239 0066 5A63     		str	r2, [r3, #52]
1652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2240              		.loc 1 1652 0
 2241 0068 2268     		ldr	r2, [r4]
1653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2242              		.loc 1 1653 0
 2243 006a E38E     		ldrh	r3, [r4, #54]
1652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2244              		.loc 1 1652 0
 2245 006c 9BB2     		uxth	r3, r3
 2246 006e 0C32     		adds	r2, r2, #12
 2247 0070 216B     		ldr	r1, [r4, #48]
 2248              	.LVL178:
 2249 0072 A06C     		ldr	r0, [r4, #72]
 2250              	.LVL179:
 2251 0074 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2252              	.LVL180:
 2253 0078 38B1     		cbz	r0, .L189
ARM GAS  /tmp/cc9tM1KX.s 			page 114


1656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2254              		.loc 1 1656 0
 2255 007a 636D     		ldr	r3, [r4, #84]
 2256 007c 43F01003 		orr	r3, r3, #16
 2257 0080 6365     		str	r3, [r4, #84]
 2258              	.LVL181:
1659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2259              		.loc 1 1659 0
 2260 0082 0120     		movs	r0, #1
 2261 0084 84F85100 		strb	r0, [r4, #81]
1660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2262              		.loc 1 1660 0
 2263 0088 19E0     		b	.L187
 2264              	.LVL182:
 2265              	.L189:
1664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2266              		.loc 1 1664 0
 2267 008a 2368     		ldr	r3, [r4]
 2268 008c 1A68     		ldr	r2, [r3]
 2269 008e 12F0400F 		tst	r2, #64
 2270 0092 03D1     		bne	.L190
1667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2271              		.loc 1 1667 0
 2272 0094 1A68     		ldr	r2, [r3]
 2273 0096 42F04002 		orr	r2, r2, #64
 2274 009a 1A60     		str	r2, [r3]
 2275              	.L190:
1671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2276              		.loc 1 1671 0
 2277 009c 2268     		ldr	r2, [r4]
 2278 009e 5368     		ldr	r3, [r2, #4]
 2279 00a0 43F02003 		orr	r3, r3, #32
 2280 00a4 5360     		str	r3, [r2, #4]
1674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2281              		.loc 1 1674 0
 2282 00a6 2268     		ldr	r2, [r4]
 2283 00a8 5368     		ldr	r3, [r2, #4]
 2284 00aa 43F00203 		orr	r3, r3, #2
 2285 00ae 5360     		str	r3, [r2, #4]
1588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2286              		.loc 1 1588 0
 2287 00b0 0020     		movs	r0, #0
 2288 00b2 04E0     		b	.L187
 2289              	.LVL183:
 2290              	.L192:
1601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2291              		.loc 1 1601 0
 2292 00b4 0220     		movs	r0, #2
 2293              	.LVL184:
 2294 00b6 02E0     		b	.L187
 2295              	.LVL185:
 2296              	.L193:
1607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2297              		.loc 1 1607 0
 2298 00b8 0120     		movs	r0, #1
 2299              	.LVL186:
 2300 00ba 00E0     		b	.L187
ARM GAS  /tmp/cc9tM1KX.s 			page 115


 2301              	.LVL187:
 2302              	.L194:
 2303 00bc 0120     		movs	r0, #1
 2304              	.LVL188:
 2305              	.L187:
1678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2306              		.loc 1 1678 0
 2307 00be 0023     		movs	r3, #0
 2308 00c0 84F85030 		strb	r3, [r4, #80]
1679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 2309              		.loc 1 1679 0
 2310 00c4 10BD     		pop	{r4, pc}
 2311              	.LVL189:
 2312              	.L191:
 2313              	.LCFI26:
 2314              		.cfi_def_cfa_offset 0
 2315              		.cfi_restore 4
 2316              		.cfi_restore 14
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2317              		.loc 1 1597 0
 2318 00c6 0220     		movs	r0, #2
 2319              	.LVL190:
 2320 00c8 7047     		bx	lr
 2321              	.L198:
 2322 00ca 00BF     		.align	2
 2323              	.L197:
 2324 00cc 00000000 		.word	SPI_DMAHalfTransmitCplt
 2325 00d0 00000000 		.word	SPI_DMATransmitCplt
 2326 00d4 00000000 		.word	SPI_DMAError
 2327              		.cfi_endproc
 2328              	.LFE82:
 2330              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2331              		.align	2
 2332              		.global	HAL_SPI_TransmitReceive_DMA
 2333              		.thumb
 2334              		.thumb_func
 2336              	HAL_SPI_TransmitReceive_DMA:
 2337              	.LFB84:
1807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
 2338              		.loc 1 1807 0
 2339              		.cfi_startproc
 2340              		@ args = 0, pretend = 0, frame = 0
 2341              		@ frame_needed = 0, uses_anonymous_args = 0
 2342              	.LVL191:
 2343 0000 38B5     		push	{r3, r4, r5, lr}
 2344              	.LCFI27:
 2345              		.cfi_def_cfa_offset 16
 2346              		.cfi_offset 3, -16
 2347              		.cfi_offset 4, -12
 2348              		.cfi_offset 5, -8
 2349              		.cfi_offset 14, -4
 2350              	.LVL192:
1820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2351              		.loc 1 1820 0
 2352 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 2353 0006 012C     		cmp	r4, #1
 2354 0008 00F09680 		beq	.L209
ARM GAS  /tmp/cc9tM1KX.s 			page 116


 2355 000c 0446     		mov	r4, r0
1820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2356              		.loc 1 1820 0 is_stmt 0 discriminator 2
 2357 000e 0120     		movs	r0, #1
 2358              	.LVL193:
 2359 0010 84F85000 		strb	r0, [r4, #80]
1823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2360              		.loc 1 1823 0 is_stmt 1 discriminator 2
 2361 0014 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2362 0018 C0B2     		uxtb	r0, r0
 2363              	.LVL194:
1824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2364              		.loc 1 1824 0 discriminator 2
 2365 001a 6568     		ldr	r5, [r4, #4]
 2366              	.LVL195:
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2367              		.loc 1 1826 0 discriminator 2
 2368 001c 0128     		cmp	r0, #1
 2369 001e 07D0     		beq	.L201
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2370              		.loc 1 1826 0 is_stmt 0 discriminator 1
 2371 0020 B5F5827F 		cmp	r5, #260
 2372 0024 79D1     		bne	.L210
1827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2373              		.loc 1 1827 0 is_stmt 1
 2374 0026 A568     		ldr	r5, [r4, #8]
 2375              	.LVL196:
 2376 0028 002D     		cmp	r5, #0
 2377 002a 78D1     		bne	.L211
1827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2378              		.loc 1 1827 0 is_stmt 0 discriminator 1
 2379 002c 0428     		cmp	r0, #4
 2380 002e 78D1     		bne	.L212
 2381              	.L201:
1833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2382              		.loc 1 1833 0 is_stmt 1
 2383 0030 0029     		cmp	r1, #0
 2384 0032 78D0     		beq	.L213
1833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2385              		.loc 1 1833 0 is_stmt 0 discriminator 1
 2386 0034 002A     		cmp	r2, #0
 2387 0036 78D0     		beq	.L214
1833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2388              		.loc 1 1833 0 discriminator 2
 2389 0038 002B     		cmp	r3, #0
 2390 003a 78D0     		beq	.L215
1840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2391              		.loc 1 1840 0 is_stmt 1
 2392 003c 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2393              	.LVL197:
 2394 0040 C0B2     		uxtb	r0, r0
 2395 0042 0428     		cmp	r0, #4
 2396 0044 02D0     		beq	.L203
1842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2397              		.loc 1 1842 0
 2398 0046 0520     		movs	r0, #5
 2399 0048 84F85100 		strb	r0, [r4, #81]
ARM GAS  /tmp/cc9tM1KX.s 			page 117


 2400              	.L203:
1846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2401              		.loc 1 1846 0
 2402 004c 0020     		movs	r0, #0
 2403 004e 6065     		str	r0, [r4, #84]
1847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2404              		.loc 1 1847 0
 2405 0050 2163     		str	r1, [r4, #48]
1848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2406              		.loc 1 1848 0
 2407 0052 A386     		strh	r3, [r4, #52]	@ movhi
1849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2408              		.loc 1 1849 0
 2409 0054 E386     		strh	r3, [r4, #54]	@ movhi
1850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2410              		.loc 1 1850 0
 2411 0056 A263     		str	r2, [r4, #56]
1851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2412              		.loc 1 1851 0
 2413 0058 A387     		strh	r3, [r4, #60]	@ movhi
1852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2414              		.loc 1 1852 0
 2415 005a E387     		strh	r3, [r4, #62]	@ movhi
1855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2416              		.loc 1 1855 0
 2417 005c 2064     		str	r0, [r4, #64]
1856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2418              		.loc 1 1856 0
 2419 005e 6064     		str	r0, [r4, #68]
1867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2420              		.loc 1 1867 0
 2421 0060 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2422              	.LVL198:
 2423 0064 DBB2     		uxtb	r3, r3
 2424 0066 042B     		cmp	r3, #4
 2425 0068 06D1     		bne	.L204
1870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 2426              		.loc 1 1870 0
 2427 006a E36C     		ldr	r3, [r4, #76]
 2428 006c 334A     		ldr	r2, .L217
 2429              	.LVL199:
 2430 006e DA62     		str	r2, [r3, #44]
 2431              	.LVL200:
1871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2432              		.loc 1 1871 0
 2433 0070 E36C     		ldr	r3, [r4, #76]
 2434 0072 334A     		ldr	r2, .L217+4
 2435 0074 9A62     		str	r2, [r3, #40]
 2436 0076 05E0     		b	.L205
 2437              	.LVL201:
 2438              	.L204:
1876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 2439              		.loc 1 1876 0
 2440 0078 E36C     		ldr	r3, [r4, #76]
 2441 007a 324A     		ldr	r2, .L217+8
 2442              	.LVL202:
 2443 007c DA62     		str	r2, [r3, #44]
ARM GAS  /tmp/cc9tM1KX.s 			page 118


 2444              	.LVL203:
1877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2445              		.loc 1 1877 0
 2446 007e E36C     		ldr	r3, [r4, #76]
 2447 0080 314A     		ldr	r2, .L217+12
 2448 0082 9A62     		str	r2, [r3, #40]
 2449              	.L205:
1881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2450              		.loc 1 1881 0
 2451 0084 E36C     		ldr	r3, [r4, #76]
 2452 0086 314A     		ldr	r2, .L217+16
 2453 0088 1A63     		str	r2, [r3, #48]
1884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2454              		.loc 1 1884 0
 2455 008a E36C     		ldr	r3, [r4, #76]
 2456 008c 0022     		movs	r2, #0
 2457 008e 5A63     		str	r2, [r3, #52]
1887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2458              		.loc 1 1887 0
 2459 0090 2168     		ldr	r1, [r4]
 2460              	.LVL204:
1888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2461              		.loc 1 1888 0
 2462 0092 E38F     		ldrh	r3, [r4, #62]
1887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2463              		.loc 1 1887 0
 2464 0094 9BB2     		uxth	r3, r3
 2465 0096 A26B     		ldr	r2, [r4, #56]
 2466 0098 0C31     		adds	r1, r1, #12
 2467 009a E06C     		ldr	r0, [r4, #76]
 2468 009c FFF7FEFF 		bl	HAL_DMA_Start_IT
 2469              	.LVL205:
 2470 00a0 38B1     		cbz	r0, .L206
1891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2471              		.loc 1 1891 0
 2472 00a2 636D     		ldr	r3, [r4, #84]
 2473 00a4 43F01003 		orr	r3, r3, #16
 2474 00a8 6365     		str	r3, [r4, #84]
 2475              	.LVL206:
1894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2476              		.loc 1 1894 0
 2477 00aa 0120     		movs	r0, #1
 2478 00ac 84F85100 		strb	r0, [r4, #81]
1895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2479              		.loc 1 1895 0
 2480 00b0 3EE0     		b	.L202
 2481              	.LVL207:
 2482              	.L206:
1899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2483              		.loc 1 1899 0
 2484 00b2 2268     		ldr	r2, [r4]
 2485 00b4 5368     		ldr	r3, [r2, #4]
 2486 00b6 43F00103 		orr	r3, r3, #1
 2487 00ba 5360     		str	r3, [r2, #4]
1903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 2488              		.loc 1 1903 0
 2489 00bc A26C     		ldr	r2, [r4, #72]
ARM GAS  /tmp/cc9tM1KX.s 			page 119


 2490 00be 0023     		movs	r3, #0
 2491 00c0 D362     		str	r3, [r2, #44]
1904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 2492              		.loc 1 1904 0
 2493 00c2 A26C     		ldr	r2, [r4, #72]
 2494 00c4 9362     		str	r3, [r2, #40]
1905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 2495              		.loc 1 1905 0
 2496 00c6 A26C     		ldr	r2, [r4, #72]
 2497 00c8 1363     		str	r3, [r2, #48]
1906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2498              		.loc 1 1906 0
 2499 00ca A26C     		ldr	r2, [r4, #72]
 2500 00cc 5363     		str	r3, [r2, #52]
1909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2501              		.loc 1 1909 0
 2502 00ce 2268     		ldr	r2, [r4]
1910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2503              		.loc 1 1910 0
 2504 00d0 E38E     		ldrh	r3, [r4, #54]
1909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2505              		.loc 1 1909 0
 2506 00d2 9BB2     		uxth	r3, r3
 2507 00d4 0C32     		adds	r2, r2, #12
 2508 00d6 216B     		ldr	r1, [r4, #48]
 2509 00d8 A06C     		ldr	r0, [r4, #72]
 2510 00da FFF7FEFF 		bl	HAL_DMA_Start_IT
 2511              	.LVL208:
 2512 00de 38B1     		cbz	r0, .L207
1913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2513              		.loc 1 1913 0
 2514 00e0 636D     		ldr	r3, [r4, #84]
 2515 00e2 43F01003 		orr	r3, r3, #16
 2516 00e6 6365     		str	r3, [r4, #84]
 2517              	.LVL209:
1916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2518              		.loc 1 1916 0
 2519 00e8 0120     		movs	r0, #1
 2520 00ea 84F85100 		strb	r0, [r4, #81]
1917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2521              		.loc 1 1917 0
 2522 00ee 1FE0     		b	.L202
 2523              	.LVL210:
 2524              	.L207:
1921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2525              		.loc 1 1921 0
 2526 00f0 2368     		ldr	r3, [r4]
 2527 00f2 1A68     		ldr	r2, [r3]
 2528 00f4 12F0400F 		tst	r2, #64
 2529 00f8 03D1     		bne	.L208
1924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2530              		.loc 1 1924 0
 2531 00fa 1A68     		ldr	r2, [r3]
 2532 00fc 42F04002 		orr	r2, r2, #64
 2533 0100 1A60     		str	r2, [r3]
 2534              	.L208:
1927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/cc9tM1KX.s 			page 120


 2535              		.loc 1 1927 0
 2536 0102 2268     		ldr	r2, [r4]
 2537 0104 5368     		ldr	r3, [r2, #4]
 2538 0106 43F02003 		orr	r3, r3, #32
 2539 010a 5360     		str	r3, [r2, #4]
1930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2540              		.loc 1 1930 0
 2541 010c 2268     		ldr	r2, [r4]
 2542 010e 5368     		ldr	r3, [r2, #4]
 2543 0110 43F00203 		orr	r3, r3, #2
 2544 0114 5360     		str	r3, [r2, #4]
1810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2545              		.loc 1 1810 0
 2546 0116 0020     		movs	r0, #0
 2547 0118 0AE0     		b	.L202
 2548              	.LVL211:
 2549              	.L210:
1829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2550              		.loc 1 1829 0
 2551 011a 0220     		movs	r0, #2
 2552              	.LVL212:
 2553 011c 08E0     		b	.L202
 2554              	.LVL213:
 2555              	.L211:
 2556 011e 0220     		movs	r0, #2
 2557              	.LVL214:
 2558 0120 06E0     		b	.L202
 2559              	.LVL215:
 2560              	.L212:
 2561 0122 0220     		movs	r0, #2
 2562              	.LVL216:
 2563 0124 04E0     		b	.L202
 2564              	.LVL217:
 2565              	.L213:
1835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2566              		.loc 1 1835 0
 2567 0126 0120     		movs	r0, #1
 2568              	.LVL218:
 2569 0128 02E0     		b	.L202
 2570              	.LVL219:
 2571              	.L214:
 2572 012a 0120     		movs	r0, #1
 2573              	.LVL220:
 2574 012c 00E0     		b	.L202
 2575              	.LVL221:
 2576              	.L215:
 2577 012e 0120     		movs	r0, #1
 2578              	.LVL222:
 2579              	.L202:
1934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2580              		.loc 1 1934 0
 2581 0130 0023     		movs	r3, #0
 2582 0132 84F85030 		strb	r3, [r4, #80]
1935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 2583              		.loc 1 1935 0
 2584 0136 38BD     		pop	{r3, r4, r5, pc}
 2585              	.LVL223:
ARM GAS  /tmp/cc9tM1KX.s 			page 121


 2586              	.L209:
1820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2587              		.loc 1 1820 0
 2588 0138 0220     		movs	r0, #2
 2589              	.LVL224:
1936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2590              		.loc 1 1936 0
 2591 013a 38BD     		pop	{r3, r4, r5, pc}
 2592              	.LVL225:
 2593              	.L218:
 2594              		.align	2
 2595              	.L217:
 2596 013c 00000000 		.word	SPI_DMAHalfReceiveCplt
 2597 0140 00000000 		.word	SPI_DMAReceiveCplt
 2598 0144 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 2599 0148 00000000 		.word	SPI_DMATransmitReceiveCplt
 2600 014c 00000000 		.word	SPI_DMAError
 2601              		.cfi_endproc
 2602              	.LFE84:
 2604              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2605              		.align	2
 2606              		.global	HAL_SPI_Receive_DMA
 2607              		.thumb
 2608              		.thumb_func
 2610              	HAL_SPI_Receive_DMA:
 2611              	.LFB83:
1693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2612              		.loc 1 1693 0
 2613              		.cfi_startproc
 2614              		@ args = 0, pretend = 0, frame = 0
 2615              		@ frame_needed = 0, uses_anonymous_args = 0
 2616              	.LVL226:
 2617 0000 38B5     		push	{r3, r4, r5, lr}
 2618              	.LCFI28:
 2619              		.cfi_def_cfa_offset 16
 2620              		.cfi_offset 3, -16
 2621              		.cfi_offset 4, -12
 2622              		.cfi_offset 5, -8
 2623              		.cfi_offset 14, -4
 2624 0002 0446     		mov	r4, r0
 2625              	.LVL227:
1699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2626              		.loc 1 1699 0
 2627 0004 8568     		ldr	r5, [r0, #8]
 2628 0006 5DB9     		cbnz	r5, .L220
1699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2629              		.loc 1 1699 0 is_stmt 0 discriminator 1
 2630 0008 4368     		ldr	r3, [r0, #4]
 2631 000a B3F5827F 		cmp	r3, #260
 2632 000e 07D1     		bne	.L220
1701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2633              		.loc 1 1701 0 is_stmt 1
 2634 0010 0423     		movs	r3, #4
 2635 0012 80F85130 		strb	r3, [r0, #81]
1707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2636              		.loc 1 1707 0
 2637 0016 1346     		mov	r3, r2
ARM GAS  /tmp/cc9tM1KX.s 			page 122


 2638 0018 0A46     		mov	r2, r1
 2639              	.LVL228:
 2640 001a FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2641              	.LVL229:
 2642 001e 38BD     		pop	{r3, r4, r5, pc}
 2643              	.LVL230:
 2644              	.L220:
1711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2645              		.loc 1 1711 0
 2646 0020 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2647              	.LVL231:
 2648 0024 0128     		cmp	r0, #1
 2649 0026 5AD0     		beq	.L226
1711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2650              		.loc 1 1711 0 is_stmt 0 discriminator 2
 2651 0028 0123     		movs	r3, #1
 2652 002a 84F85030 		strb	r3, [r4, #80]
1713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2653              		.loc 1 1713 0 is_stmt 1 discriminator 2
 2654 002e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2655 0032 C0B2     		uxtb	r0, r0
 2656 0034 9842     		cmp	r0, r3
 2657 0036 49D1     		bne	.L227
1719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2658              		.loc 1 1719 0
 2659 0038 0029     		cmp	r1, #0
 2660 003a 49D0     		beq	.L228
1719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2661              		.loc 1 1719 0 is_stmt 0 discriminator 1
 2662 003c 002A     		cmp	r2, #0
 2663 003e 49D0     		beq	.L229
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2664              		.loc 1 1726 0 is_stmt 1
 2665 0040 0423     		movs	r3, #4
 2666 0042 84F85130 		strb	r3, [r4, #81]
1727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2667              		.loc 1 1727 0
 2668 0046 0023     		movs	r3, #0
 2669 0048 6365     		str	r3, [r4, #84]
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2670              		.loc 1 1728 0
 2671 004a A163     		str	r1, [r4, #56]
1729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2672              		.loc 1 1729 0
 2673 004c A287     		strh	r2, [r4, #60]	@ movhi
1730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2674              		.loc 1 1730 0
 2675 004e E287     		strh	r2, [r4, #62]	@ movhi
1733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2676              		.loc 1 1733 0
 2677 0050 2364     		str	r3, [r4, #64]
1734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2678              		.loc 1 1734 0
 2679 0052 6364     		str	r3, [r4, #68]
1735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2680              		.loc 1 1735 0
 2681 0054 A386     		strh	r3, [r4, #52]	@ movhi
ARM GAS  /tmp/cc9tM1KX.s 			page 123


1736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2682              		.loc 1 1736 0
 2683 0056 E386     		strh	r3, [r4, #54]	@ movhi
1739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2684              		.loc 1 1739 0
 2685 0058 B5F5004F 		cmp	r5, #32768
 2686 005c 04D1     		bne	.L223
1741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2687              		.loc 1 1741 0
 2688 005e 2268     		ldr	r2, [r4]
 2689              	.LVL232:
 2690 0060 1368     		ldr	r3, [r2]
 2691 0062 23F48043 		bic	r3, r3, #16384
 2692 0066 1360     		str	r3, [r2]
 2693              	.LVL233:
 2694              	.L223:
1753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2695              		.loc 1 1753 0
 2696 0068 E36C     		ldr	r3, [r4, #76]
 2697 006a 1E4A     		ldr	r2, .L231
 2698 006c DA62     		str	r2, [r3, #44]
1756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2699              		.loc 1 1756 0
 2700 006e E36C     		ldr	r3, [r4, #76]
 2701 0070 1D4A     		ldr	r2, .L231+4
 2702 0072 9A62     		str	r2, [r3, #40]
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2703              		.loc 1 1759 0
 2704 0074 E36C     		ldr	r3, [r4, #76]
 2705 0076 1D4A     		ldr	r2, .L231+8
 2706 0078 1A63     		str	r2, [r3, #48]
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2707              		.loc 1 1762 0
 2708 007a E36C     		ldr	r3, [r4, #76]
 2709 007c 0022     		movs	r2, #0
 2710 007e 5A63     		str	r2, [r3, #52]
1765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2711              		.loc 1 1765 0
 2712 0080 2168     		ldr	r1, [r4]
 2713              	.LVL234:
1766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2714              		.loc 1 1766 0
 2715 0082 E38F     		ldrh	r3, [r4, #62]
1765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2716              		.loc 1 1765 0
 2717 0084 9BB2     		uxth	r3, r3
 2718 0086 A26B     		ldr	r2, [r4, #56]
 2719 0088 0C31     		adds	r1, r1, #12
 2720 008a E06C     		ldr	r0, [r4, #76]
 2721 008c FFF7FEFF 		bl	HAL_DMA_Start_IT
 2722              	.LVL235:
 2723 0090 38B1     		cbz	r0, .L224
1769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2724              		.loc 1 1769 0
 2725 0092 636D     		ldr	r3, [r4, #84]
 2726 0094 43F01003 		orr	r3, r3, #16
 2727 0098 6365     		str	r3, [r4, #84]
ARM GAS  /tmp/cc9tM1KX.s 			page 124


 2728              	.LVL236:
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2729              		.loc 1 1772 0
 2730 009a 0120     		movs	r0, #1
 2731 009c 84F85100 		strb	r0, [r4, #81]
1773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2732              		.loc 1 1773 0
 2733 00a0 19E0     		b	.L222
 2734              	.LVL237:
 2735              	.L224:
1777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2736              		.loc 1 1777 0
 2737 00a2 2368     		ldr	r3, [r4]
 2738 00a4 1A68     		ldr	r2, [r3]
 2739 00a6 12F0400F 		tst	r2, #64
 2740 00aa 03D1     		bne	.L225
1780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2741              		.loc 1 1780 0
 2742 00ac 1A68     		ldr	r2, [r3]
 2743 00ae 42F04002 		orr	r2, r2, #64
 2744 00b2 1A60     		str	r2, [r3]
 2745              	.L225:
1784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2746              		.loc 1 1784 0
 2747 00b4 2268     		ldr	r2, [r4]
 2748 00b6 5368     		ldr	r3, [r2, #4]
 2749 00b8 43F02003 		orr	r3, r3, #32
 2750 00bc 5360     		str	r3, [r2, #4]
1787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2751              		.loc 1 1787 0
 2752 00be 2268     		ldr	r2, [r4]
 2753 00c0 5368     		ldr	r3, [r2, #4]
 2754 00c2 43F00103 		orr	r3, r3, #1
 2755 00c6 5360     		str	r3, [r2, #4]
1694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2756              		.loc 1 1694 0
 2757 00c8 0020     		movs	r0, #0
 2758 00ca 04E0     		b	.L222
 2759              	.LVL238:
 2760              	.L227:
1715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2761              		.loc 1 1715 0
 2762 00cc 0220     		movs	r0, #2
 2763 00ce 02E0     		b	.L222
 2764              	.L228:
1721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2765              		.loc 1 1721 0
 2766 00d0 0120     		movs	r0, #1
 2767 00d2 00E0     		b	.L222
 2768              	.L229:
 2769 00d4 0120     		movs	r0, #1
 2770              	.LVL239:
 2771              	.L222:
1791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2772              		.loc 1 1791 0
 2773 00d6 0023     		movs	r3, #0
 2774 00d8 84F85030 		strb	r3, [r4, #80]
ARM GAS  /tmp/cc9tM1KX.s 			page 125


1792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 2775              		.loc 1 1792 0
 2776 00dc 38BD     		pop	{r3, r4, r5, pc}
 2777              	.LVL240:
 2778              	.L226:
1711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2779              		.loc 1 1711 0
 2780 00de 0220     		movs	r0, #2
1793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2781              		.loc 1 1793 0
 2782 00e0 38BD     		pop	{r3, r4, r5, pc}
 2783              	.LVL241:
 2784              	.L232:
 2785 00e2 00BF     		.align	2
 2786              	.L231:
 2787 00e4 00000000 		.word	SPI_DMAHalfReceiveCplt
 2788 00e8 00000000 		.word	SPI_DMAReceiveCplt
 2789 00ec 00000000 		.word	SPI_DMAError
 2790              		.cfi_endproc
 2791              	.LFE83:
 2793              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 2794              		.align	2
 2795              		.global	HAL_SPI_Abort
 2796              		.thumb
 2797              		.thumb_func
 2799              	HAL_SPI_Abort:
 2800              	.LFB85:
1952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 2801              		.loc 1 1952 0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 16
 2804              		@ frame_needed = 0, uses_anonymous_args = 0
 2805              	.LVL242:
 2806 0000 10B5     		push	{r4, lr}
 2807              	.LCFI29:
 2808              		.cfi_def_cfa_offset 8
 2809              		.cfi_offset 4, -8
 2810              		.cfi_offset 14, -4
 2811 0002 84B0     		sub	sp, sp, #16
 2812              	.LCFI30:
 2813              		.cfi_def_cfa_offset 24
 2814 0004 0446     		mov	r4, r0
 2815              	.LVL243:
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
 2816              		.loc 1 1959 0
 2817 0006 494B     		ldr	r3, .L251
 2818 0008 1B68     		ldr	r3, [r3]
 2819 000a 494A     		ldr	r2, .L251+4
 2820 000c A2FB0323 		umull	r2, r3, r2, r3
 2821 0010 5B0A     		lsrs	r3, r3, #9
 2822 0012 6422     		movs	r2, #100
 2823 0014 02FB03F3 		mul	r3, r2, r3
 2824 0018 0293     		str	r3, [sp, #8]
1960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2825              		.loc 1 1960 0
 2826 001a 029B     		ldr	r3, [sp, #8]
 2827 001c 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cc9tM1KX.s 			page 126


1963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2828              		.loc 1 1963 0
 2829 001e 0268     		ldr	r2, [r0]
 2830 0020 5368     		ldr	r3, [r2, #4]
 2831 0022 23F02003 		bic	r3, r3, #32
 2832 0026 5360     		str	r3, [r2, #4]
1966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2833              		.loc 1 1966 0
 2834 0028 0268     		ldr	r2, [r0]
 2835 002a 5368     		ldr	r3, [r2, #4]
 2836 002c 13F0800F 		tst	r3, #128
 2837 0030 12D0     		beq	.L234
1968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 2838              		.loc 1 1968 0
 2839 0032 404B     		ldr	r3, .L251+8
 2840 0034 4364     		str	r3, [r0, #68]
 2841              	.L237:
1972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 2842              		.loc 1 1972 0
 2843 0036 039B     		ldr	r3, [sp, #12]
 2844 0038 23B9     		cbnz	r3, .L235
1974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 2845              		.loc 1 1974 0
 2846 003a 636D     		ldr	r3, [r4, #84]
 2847 003c 43F04003 		orr	r3, r3, #64
 2848 0040 6365     		str	r3, [r4, #84]
1975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 2849              		.loc 1 1975 0
 2850 0042 07E0     		b	.L236
 2851              	.L235:
1977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 2852              		.loc 1 1977 0
 2853 0044 039B     		ldr	r3, [sp, #12]
 2854 0046 013B     		subs	r3, r3, #1
 2855 0048 0393     		str	r3, [sp, #12]
1978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 2856              		.loc 1 1978 0
 2857 004a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2858 004e DBB2     		uxtb	r3, r3
 2859 0050 072B     		cmp	r3, #7
 2860 0052 F0D1     		bne	.L237
 2861              	.L236:
1980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2862              		.loc 1 1980 0
 2863 0054 029B     		ldr	r3, [sp, #8]
 2864 0056 0393     		str	r3, [sp, #12]
 2865              	.L234:
1983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2866              		.loc 1 1983 0
 2867 0058 5368     		ldr	r3, [r2, #4]
 2868 005a 13F0400F 		tst	r3, #64
 2869 005e 12D0     		beq	.L238
1985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 2870              		.loc 1 1985 0
 2871 0060 354B     		ldr	r3, .L251+12
 2872 0062 2364     		str	r3, [r4, #64]
 2873              	.L241:
ARM GAS  /tmp/cc9tM1KX.s 			page 127


1989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 2874              		.loc 1 1989 0
 2875 0064 039B     		ldr	r3, [sp, #12]
 2876 0066 23B9     		cbnz	r3, .L239
1991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 2877              		.loc 1 1991 0
 2878 0068 636D     		ldr	r3, [r4, #84]
 2879 006a 43F04003 		orr	r3, r3, #64
 2880 006e 6365     		str	r3, [r4, #84]
1992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 2881              		.loc 1 1992 0
 2882 0070 07E0     		b	.L240
 2883              	.L239:
1994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 2884              		.loc 1 1994 0
 2885 0072 039B     		ldr	r3, [sp, #12]
 2886 0074 013B     		subs	r3, r3, #1
 2887 0076 0393     		str	r3, [sp, #12]
1995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 2888              		.loc 1 1995 0
 2889 0078 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2890 007c DBB2     		uxtb	r3, r3
 2891 007e 072B     		cmp	r3, #7
 2892 0080 F0D1     		bne	.L241
 2893              	.L240:
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2894              		.loc 1 1997 0
 2895 0082 029B     		ldr	r3, [sp, #8]
 2896 0084 0393     		str	r3, [sp, #12]
 2897              	.L238:
2001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2898              		.loc 1 2001 0
 2899 0086 5368     		ldr	r3, [r2, #4]
 2900 0088 13F0020F 		tst	r3, #2
 2901 008c 1DD0     		beq	.L242
2004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 2902              		.loc 1 2004 0
 2903 008e A36C     		ldr	r3, [r4, #72]
 2904 0090 DBB1     		cbz	r3, .L242
2008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2905              		.loc 1 2008 0
 2906 0092 0022     		movs	r2, #0
 2907 0094 5A63     		str	r2, [r3, #52]
2011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 2908              		.loc 1 2011 0
 2909 0096 A06C     		ldr	r0, [r4, #72]
 2910              	.LVL244:
 2911 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 2912              	.LVL245:
 2913 009c 08B1     		cbz	r0, .L243
2013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 2914              		.loc 1 2013 0
 2915 009e 4023     		movs	r3, #64
 2916 00a0 6365     		str	r3, [r4, #84]
 2917              	.L243:
2017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2918              		.loc 1 2017 0
ARM GAS  /tmp/cc9tM1KX.s 			page 128


 2919 00a2 2268     		ldr	r2, [r4]
 2920 00a4 5368     		ldr	r3, [r2, #4]
 2921 00a6 23F00203 		bic	r3, r3, #2
 2922 00aa 5360     		str	r3, [r2, #4]
 2923              	.L245:
2022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 2924              		.loc 1 2022 0
 2925 00ac 039B     		ldr	r3, [sp, #12]
 2926 00ae 23B9     		cbnz	r3, .L244
2024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           break;
 2927              		.loc 1 2024 0
 2928 00b0 636D     		ldr	r3, [r4, #84]
 2929 00b2 43F04003 		orr	r3, r3, #64
 2930 00b6 6365     		str	r3, [r4, #84]
2025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 2931              		.loc 1 2025 0
 2932 00b8 07E0     		b	.L242
 2933              	.L244:
2027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 2934              		.loc 1 2027 0
 2935 00ba 039B     		ldr	r3, [sp, #12]
 2936 00bc 013B     		subs	r3, r3, #1
 2937 00be 0393     		str	r3, [sp, #12]
2028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 2938              		.loc 1 2028 0
 2939 00c0 2368     		ldr	r3, [r4]
 2940 00c2 9B68     		ldr	r3, [r3, #8]
 2941 00c4 13F0020F 		tst	r3, #2
 2942 00c8 F0D0     		beq	.L245
 2943              	.L242:
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2944              		.loc 1 2033 0
 2945 00ca 2368     		ldr	r3, [r4]
 2946 00cc 5B68     		ldr	r3, [r3, #4]
 2947 00ce 13F0010F 		tst	r3, #1
 2948 00d2 13D0     		beq	.L246
2036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 2949              		.loc 1 2036 0
 2950 00d4 E36C     		ldr	r3, [r4, #76]
 2951 00d6 8BB1     		cbz	r3, .L246
2040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2952              		.loc 1 2040 0
 2953 00d8 0022     		movs	r2, #0
 2954 00da 5A63     		str	r2, [r3, #52]
2043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 2955              		.loc 1 2043 0
 2956 00dc E06C     		ldr	r0, [r4, #76]
 2957 00de FFF7FEFF 		bl	HAL_DMA_Abort
 2958              	.LVL246:
 2959 00e2 08B1     		cbz	r0, .L247
2045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 2960              		.loc 1 2045 0
 2961 00e4 4023     		movs	r3, #64
 2962 00e6 6365     		str	r3, [r4, #84]
 2963              	.L247:
2049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2964              		.loc 1 2049 0
ARM GAS  /tmp/cc9tM1KX.s 			page 129


 2965 00e8 2268     		ldr	r2, [r4]
 2966 00ea 1368     		ldr	r3, [r2]
 2967 00ec 23F04003 		bic	r3, r3, #64
 2968 00f0 1360     		str	r3, [r2]
2052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 2969              		.loc 1 2052 0
 2970 00f2 2268     		ldr	r2, [r4]
 2971 00f4 5368     		ldr	r3, [r2, #4]
 2972 00f6 23F00103 		bic	r3, r3, #1
 2973 00fa 5360     		str	r3, [r2, #4]
 2974              	.L246:
2056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2975              		.loc 1 2056 0
 2976 00fc 0023     		movs	r3, #0
 2977 00fe E387     		strh	r3, [r4, #62]	@ movhi
2057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2978              		.loc 1 2057 0
 2979 0100 E386     		strh	r3, [r4, #54]	@ movhi
2060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2980              		.loc 1 2060 0
 2981 0102 636D     		ldr	r3, [r4, #84]
 2982 0104 402B     		cmp	r3, #64
 2983 0106 02D0     		beq	.L249
2068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2984              		.loc 1 2068 0
 2985 0108 0020     		movs	r0, #0
 2986 010a 6065     		str	r0, [r4, #84]
 2987 010c 00E0     		b	.L248
 2988              	.L249:
2063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2989              		.loc 1 2063 0
 2990 010e 0120     		movs	r0, #1
 2991              	.L248:
 2992              	.LVL247:
 2993              	.LBB4:
2072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 2994              		.loc 1 2072 0
 2995 0110 0023     		movs	r3, #0
 2996 0112 0193     		str	r3, [sp, #4]
 2997 0114 2368     		ldr	r3, [r4]
 2998 0116 DA68     		ldr	r2, [r3, #12]
 2999 0118 0192     		str	r2, [sp, #4]
 3000 011a 9B68     		ldr	r3, [r3, #8]
 3001 011c 0193     		str	r3, [sp, #4]
 3002 011e 019B     		ldr	r3, [sp, #4]
 3003              	.LBE4:
2078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3004              		.loc 1 2078 0
 3005 0120 0123     		movs	r3, #1
 3006 0122 84F85130 		strb	r3, [r4, #81]
2081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3007              		.loc 1 2081 0
 3008 0126 04B0     		add	sp, sp, #16
 3009              	.LCFI31:
 3010              		.cfi_def_cfa_offset 8
 3011              		@ sp needed
 3012 0128 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc9tM1KX.s 			page 130


 3013              	.LVL248:
 3014              	.L252:
 3015 012a 00BF     		.align	2
 3016              	.L251:
 3017 012c 00000000 		.word	SystemCoreClock
 3018 0130 F1197605 		.word	91625969
 3019 0134 00000000 		.word	SPI_AbortTx_ISR
 3020 0138 00000000 		.word	SPI_AbortRx_ISR
 3021              		.cfi_endproc
 3022              	.LFE85:
 3024              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 3025              		.align	2
 3026              		.global	HAL_SPI_DMAPause
 3027              		.thumb
 3028              		.thumb_func
 3030              	HAL_SPI_DMAPause:
 3031              	.LFB87:
2262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 3032              		.loc 1 2262 0
 3033              		.cfi_startproc
 3034              		@ args = 0, pretend = 0, frame = 0
 3035              		@ frame_needed = 0, uses_anonymous_args = 0
 3036              		@ link register save eliminated.
 3037              	.LVL249:
2264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3038              		.loc 1 2264 0
 3039 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3040 0004 012B     		cmp	r3, #1
 3041 0006 0CD0     		beq	.L255
2264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3042              		.loc 1 2264 0 is_stmt 0 discriminator 2
 3043 0008 0123     		movs	r3, #1
 3044 000a 80F85030 		strb	r3, [r0, #80]
2267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3045              		.loc 1 2267 0 is_stmt 1 discriminator 2
 3046 000e 0268     		ldr	r2, [r0]
 3047 0010 5368     		ldr	r3, [r2, #4]
 3048 0012 23F00303 		bic	r3, r3, #3
 3049 0016 5360     		str	r3, [r2, #4]
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3050              		.loc 1 2270 0 discriminator 2
 3051 0018 0023     		movs	r3, #0
 3052 001a 80F85030 		strb	r3, [r0, #80]
2272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 3053              		.loc 1 2272 0 discriminator 2
 3054 001e 1846     		mov	r0, r3
 3055              	.LVL250:
 3056 0020 7047     		bx	lr
 3057              	.LVL251:
 3058              	.L255:
2264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3059              		.loc 1 2264 0
 3060 0022 0220     		movs	r0, #2
 3061              	.LVL252:
2273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3062              		.loc 1 2273 0
 3063 0024 7047     		bx	lr
ARM GAS  /tmp/cc9tM1KX.s 			page 131


 3064              		.cfi_endproc
 3065              	.LFE87:
 3067 0026 00BF     		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3068              		.align	2
 3069              		.global	HAL_SPI_DMAResume
 3070              		.thumb
 3071              		.thumb_func
 3073              	HAL_SPI_DMAResume:
 3074              	.LFB88:
2282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 3075              		.loc 1 2282 0
 3076              		.cfi_startproc
 3077              		@ args = 0, pretend = 0, frame = 0
 3078              		@ frame_needed = 0, uses_anonymous_args = 0
 3079              		@ link register save eliminated.
 3080              	.LVL253:
2284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3081              		.loc 1 2284 0
 3082 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3083 0004 012B     		cmp	r3, #1
 3084 0006 0CD0     		beq	.L258
2284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3085              		.loc 1 2284 0 is_stmt 0 discriminator 2
 3086 0008 0123     		movs	r3, #1
 3087 000a 80F85030 		strb	r3, [r0, #80]
2287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3088              		.loc 1 2287 0 is_stmt 1 discriminator 2
 3089 000e 0268     		ldr	r2, [r0]
 3090 0010 5368     		ldr	r3, [r2, #4]
 3091 0012 43F00303 		orr	r3, r3, #3
 3092 0016 5360     		str	r3, [r2, #4]
2290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3093              		.loc 1 2290 0 discriminator 2
 3094 0018 0023     		movs	r3, #0
 3095 001a 80F85030 		strb	r3, [r0, #80]
2292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 3096              		.loc 1 2292 0 discriminator 2
 3097 001e 1846     		mov	r0, r3
 3098              	.LVL254:
 3099 0020 7047     		bx	lr
 3100              	.LVL255:
 3101              	.L258:
2284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3102              		.loc 1 2284 0
 3103 0022 0220     		movs	r0, #2
 3104              	.LVL256:
2293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3105              		.loc 1 2293 0
 3106 0024 7047     		bx	lr
 3107              		.cfi_endproc
 3108              	.LFE88:
 3110 0026 00BF     		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 3111              		.align	2
 3112              		.global	HAL_SPI_DMAStop
 3113              		.thumb
 3114              		.thumb_func
 3116              	HAL_SPI_DMAStop:
ARM GAS  /tmp/cc9tM1KX.s 			page 132


 3117              	.LFB89:
2302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3118              		.loc 1 2302 0
 3119              		.cfi_startproc
 3120              		@ args = 0, pretend = 0, frame = 0
 3121              		@ frame_needed = 0, uses_anonymous_args = 0
 3122              	.LVL257:
 3123 0000 38B5     		push	{r3, r4, r5, lr}
 3124              	.LCFI32:
 3125              		.cfi_def_cfa_offset 16
 3126              		.cfi_offset 3, -16
 3127              		.cfi_offset 4, -12
 3128              		.cfi_offset 5, -8
 3129              		.cfi_offset 14, -4
 3130 0002 0446     		mov	r4, r0
 3131              	.LVL258:
2311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3132              		.loc 1 2311 0
 3133 0004 806C     		ldr	r0, [r0, #72]
 3134              	.LVL259:
 3135 0006 40B1     		cbz	r0, .L262
2313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3136              		.loc 1 2313 0
 3137 0008 FFF7FEFF 		bl	HAL_DMA_Abort
 3138              	.LVL260:
 3139 000c 38B1     		cbz	r0, .L263
2315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3140              		.loc 1 2315 0
 3141 000e 636D     		ldr	r3, [r4, #84]
 3142 0010 43F01003 		orr	r3, r3, #16
 3143 0014 6365     		str	r3, [r4, #84]
 3144              	.LVL261:
2316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3145              		.loc 1 2316 0
 3146 0016 0125     		movs	r5, #1
 3147 0018 02E0     		b	.L260
 3148              	.LVL262:
 3149              	.L262:
2303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 3150              		.loc 1 2303 0
 3151 001a 0025     		movs	r5, #0
 3152 001c 00E0     		b	.L260
 3153              	.L263:
 3154 001e 0025     		movs	r5, #0
 3155              	.LVL263:
 3156              	.L260:
2320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3157              		.loc 1 2320 0
 3158 0020 E06C     		ldr	r0, [r4, #76]
 3159 0022 38B1     		cbz	r0, .L261
2322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3160              		.loc 1 2322 0
 3161 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 3162              	.LVL264:
 3163 0028 20B1     		cbz	r0, .L261
2324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3164              		.loc 1 2324 0
ARM GAS  /tmp/cc9tM1KX.s 			page 133


 3165 002a 636D     		ldr	r3, [r4, #84]
 3166 002c 43F01003 		orr	r3, r3, #16
 3167 0030 6365     		str	r3, [r4, #84]
 3168              	.LVL265:
2325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3169              		.loc 1 2325 0
 3170 0032 0125     		movs	r5, #1
 3171              	.LVL266:
 3172              	.L261:
2330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3173              		.loc 1 2330 0
 3174 0034 2268     		ldr	r2, [r4]
 3175 0036 5368     		ldr	r3, [r2, #4]
 3176 0038 23F00303 		bic	r3, r3, #3
 3177 003c 5360     		str	r3, [r2, #4]
2331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 3178              		.loc 1 2331 0
 3179 003e 0123     		movs	r3, #1
 3180 0040 84F85130 		strb	r3, [r4, #81]
2333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3181              		.loc 1 2333 0
 3182 0044 2846     		mov	r0, r5
 3183 0046 38BD     		pop	{r3, r4, r5, pc}
 3184              		.cfi_endproc
 3185              	.LFE89:
 3187              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3188              		.align	2
 3189              		.weak	HAL_SPI_TxCpltCallback
 3190              		.thumb
 3191              		.thumb_func
 3193              	HAL_SPI_TxCpltCallback:
 3194              	.LFB91:
2456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3195              		.loc 1 2456 0
 3196              		.cfi_startproc
 3197              		@ args = 0, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199              		@ link register save eliminated.
 3200              	.LVL267:
 3201 0000 7047     		bx	lr
 3202              		.cfi_endproc
 3203              	.LFE91:
 3205 0002 00BF     		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3206              		.align	2
 3207              		.weak	HAL_SPI_RxCpltCallback
 3208              		.thumb
 3209              		.thumb_func
 3211              	HAL_SPI_RxCpltCallback:
 3212              	.LFB92:
2472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3213              		.loc 1 2472 0
 3214              		.cfi_startproc
 3215              		@ args = 0, pretend = 0, frame = 0
 3216              		@ frame_needed = 0, uses_anonymous_args = 0
 3217              		@ link register save eliminated.
 3218              	.LVL268:
 3219 0000 7047     		bx	lr
ARM GAS  /tmp/cc9tM1KX.s 			page 134


 3220              		.cfi_endproc
 3221              	.LFE92:
 3223 0002 00BF     		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3224              		.align	2
 3225              		.weak	HAL_SPI_TxRxCpltCallback
 3226              		.thumb
 3227              		.thumb_func
 3229              	HAL_SPI_TxRxCpltCallback:
 3230              	.LFB93:
2488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3231              		.loc 1 2488 0
 3232              		.cfi_startproc
 3233              		@ args = 0, pretend = 0, frame = 0
 3234              		@ frame_needed = 0, uses_anonymous_args = 0
 3235              		@ link register save eliminated.
 3236              	.LVL269:
 3237 0000 7047     		bx	lr
 3238              		.cfi_endproc
 3239              	.LFE93:
 3241 0002 00BF     		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 3242              		.align	2
 3243              		.weak	HAL_SPI_TxHalfCpltCallback
 3244              		.thumb
 3245              		.thumb_func
 3247              	HAL_SPI_TxHalfCpltCallback:
 3248              	.LFB94:
2504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3249              		.loc 1 2504 0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 0
 3252              		@ frame_needed = 0, uses_anonymous_args = 0
 3253              		@ link register save eliminated.
 3254              	.LVL270:
 3255 0000 7047     		bx	lr
 3256              		.cfi_endproc
 3257              	.LFE94:
 3259 0002 00BF     		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 3260              		.align	2
 3261              		.thumb
 3262              		.thumb_func
 3264              	SPI_DMAHalfTransmitCplt:
 3265              	.LFB104:
2849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3266              		.loc 1 2849 0
 3267              		.cfi_startproc
 3268              		@ args = 0, pretend = 0, frame = 0
 3269              		@ frame_needed = 0, uses_anonymous_args = 0
 3270              	.LVL271:
2849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3271              		.loc 1 2849 0
 3272 0000 08B5     		push	{r3, lr}
 3273              	.LCFI33:
 3274              		.cfi_def_cfa_offset 8
 3275              		.cfi_offset 3, -8
 3276              		.cfi_offset 14, -4
 3277              	.LVL272:
2856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc9tM1KX.s 			page 135


 3278              		.loc 1 2856 0
 3279 0002 406A     		ldr	r0, [r0, #36]
 3280              	.LVL273:
 3281 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 3282              	.LVL274:
 3283 0008 08BD     		pop	{r3, pc}
 3284              		.cfi_endproc
 3285              	.LFE104:
 3287 000a 00BF     		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 3288              		.align	2
 3289              		.weak	HAL_SPI_RxHalfCpltCallback
 3290              		.thumb
 3291              		.thumb_func
 3293              	HAL_SPI_RxHalfCpltCallback:
 3294              	.LFB95:
2520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3295              		.loc 1 2520 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 0
 3298              		@ frame_needed = 0, uses_anonymous_args = 0
 3299              		@ link register save eliminated.
 3300              	.LVL275:
 3301 0000 7047     		bx	lr
 3302              		.cfi_endproc
 3303              	.LFE95:
 3305 0002 00BF     		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 3306              		.align	2
 3307              		.thumb
 3308              		.thumb_func
 3310              	SPI_DMAHalfReceiveCplt:
 3311              	.LFB105:
2867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3312              		.loc 1 2867 0
 3313              		.cfi_startproc
 3314              		@ args = 0, pretend = 0, frame = 0
 3315              		@ frame_needed = 0, uses_anonymous_args = 0
 3316              	.LVL276:
2867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3317              		.loc 1 2867 0
 3318 0000 08B5     		push	{r3, lr}
 3319              	.LCFI34:
 3320              		.cfi_def_cfa_offset 8
 3321              		.cfi_offset 3, -8
 3322              		.cfi_offset 14, -4
 3323              	.LVL277:
2874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3324              		.loc 1 2874 0
 3325 0002 406A     		ldr	r0, [r0, #36]
 3326              	.LVL278:
 3327 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 3328              	.LVL279:
 3329 0008 08BD     		pop	{r3, pc}
 3330              		.cfi_endproc
 3331              	.LFE105:
 3333 000a 00BF     		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 3334              		.align	2
 3335              		.weak	HAL_SPI_TxRxHalfCpltCallback
ARM GAS  /tmp/cc9tM1KX.s 			page 136


 3336              		.thumb
 3337              		.thumb_func
 3339              	HAL_SPI_TxRxHalfCpltCallback:
 3340              	.LFB96:
2536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3341              		.loc 1 2536 0
 3342              		.cfi_startproc
 3343              		@ args = 0, pretend = 0, frame = 0
 3344              		@ frame_needed = 0, uses_anonymous_args = 0
 3345              		@ link register save eliminated.
 3346              	.LVL280:
 3347 0000 7047     		bx	lr
 3348              		.cfi_endproc
 3349              	.LFE96:
 3351 0002 00BF     		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 3352              		.align	2
 3353              		.thumb
 3354              		.thumb_func
 3356              	SPI_DMAHalfTransmitReceiveCplt:
 3357              	.LFB106:
2885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3358              		.loc 1 2885 0
 3359              		.cfi_startproc
 3360              		@ args = 0, pretend = 0, frame = 0
 3361              		@ frame_needed = 0, uses_anonymous_args = 0
 3362              	.LVL281:
2885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3363              		.loc 1 2885 0
 3364 0000 08B5     		push	{r3, lr}
 3365              	.LCFI35:
 3366              		.cfi_def_cfa_offset 8
 3367              		.cfi_offset 3, -8
 3368              		.cfi_offset 14, -4
 3369              	.LVL282:
2892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3370              		.loc 1 2892 0
 3371 0002 406A     		ldr	r0, [r0, #36]
 3372              	.LVL283:
 3373 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 3374              	.LVL284:
 3375 0008 08BD     		pop	{r3, pc}
 3376              		.cfi_endproc
 3377              	.LFE106:
 3379 000a 00BF     		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 3380              		.align	2
 3381              		.weak	HAL_SPI_ErrorCallback
 3382              		.thumb
 3383              		.thumb_func
 3385              	HAL_SPI_ErrorCallback:
 3386              	.LFB97:
2552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3387              		.loc 1 2552 0
 3388              		.cfi_startproc
 3389              		@ args = 0, pretend = 0, frame = 0
 3390              		@ frame_needed = 0, uses_anonymous_args = 0
 3391              		@ link register save eliminated.
 3392              	.LVL285:
ARM GAS  /tmp/cc9tM1KX.s 			page 137


 3393 0000 7047     		bx	lr
 3394              		.cfi_endproc
 3395              	.LFE97:
 3397 0002 00BF     		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 3398              		.align	2
 3399              		.thumb
 3400              		.thumb_func
 3402              	SPI_CloseTx_ISR:
 3403              	.LFB124:
3705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 3404              		.loc 1 3705 0
 3405              		.cfi_startproc
 3406              		@ args = 0, pretend = 0, frame = 8
 3407              		@ frame_needed = 0, uses_anonymous_args = 0
 3408              	.LVL286:
3705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 3409              		.loc 1 3705 0
 3410 0000 10B5     		push	{r4, lr}
 3411              	.LCFI36:
 3412              		.cfi_def_cfa_offset 8
 3413              		.cfi_offset 4, -8
 3414              		.cfi_offset 14, -4
 3415 0002 82B0     		sub	sp, sp, #8
 3416              	.LCFI37:
 3417              		.cfi_def_cfa_offset 16
 3418 0004 0446     		mov	r4, r0
3707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3419              		.loc 1 3707 0
 3420 0006 204B     		ldr	r3, .L287
 3421 0008 1B68     		ldr	r3, [r3]
 3422 000a 204A     		ldr	r2, .L287+4
 3423 000c A2FB0323 		umull	r2, r3, r2, r3
 3424 0010 5B0A     		lsrs	r3, r3, #9
 3425 0012 6422     		movs	r2, #100
 3426 0014 02FB03F3 		mul	r3, r2, r3
 3427 0018 0193     		str	r3, [sp, #4]
3710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3428              		.loc 1 3710 0
 3429 001a FFF7FEFF 		bl	HAL_GetTick
 3430              	.LVL287:
 3431 001e 0246     		mov	r2, r0
 3432              	.LVL288:
 3433              	.L281:
3715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3434              		.loc 1 3715 0
 3435 0020 019B     		ldr	r3, [sp, #4]
 3436 0022 23B9     		cbnz	r3, .L279
3717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 3437              		.loc 1 3717 0
 3438 0024 636D     		ldr	r3, [r4, #84]
 3439 0026 43F02003 		orr	r3, r3, #32
 3440 002a 6365     		str	r3, [r4, #84]
3718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3441              		.loc 1 3718 0
 3442 002c 07E0     		b	.L280
 3443              	.L279:
3720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
ARM GAS  /tmp/cc9tM1KX.s 			page 138


 3444              		.loc 1 3720 0
 3445 002e 019B     		ldr	r3, [sp, #4]
 3446 0030 013B     		subs	r3, r3, #1
 3447 0032 0193     		str	r3, [sp, #4]
3721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3448              		.loc 1 3721 0
 3449 0034 2368     		ldr	r3, [r4]
 3450 0036 9B68     		ldr	r3, [r3, #8]
 3451 0038 13F0020F 		tst	r3, #2
 3452 003c F0D0     		beq	.L281
 3453              	.L280:
3724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3454              		.loc 1 3724 0
 3455 003e 2168     		ldr	r1, [r4]
 3456 0040 4B68     		ldr	r3, [r1, #4]
 3457 0042 23F0A003 		bic	r3, r3, #160
 3458 0046 4B60     		str	r3, [r1, #4]
3727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3459              		.loc 1 3727 0
 3460 0048 6421     		movs	r1, #100
 3461 004a 2046     		mov	r0, r4
 3462              	.LVL289:
 3463 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3464              	.LVL290:
 3465 0050 18B1     		cbz	r0, .L282
3729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3466              		.loc 1 3729 0
 3467 0052 636D     		ldr	r3, [r4, #84]
 3468 0054 43F02003 		orr	r3, r3, #32
 3469 0058 6365     		str	r3, [r4, #84]
 3470              	.L282:
3733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3471              		.loc 1 3733 0
 3472 005a A368     		ldr	r3, [r4, #8]
 3473 005c 33B9     		cbnz	r3, .L283
 3474              	.LBB5:
3735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3475              		.loc 1 3735 0
 3476 005e 0093     		str	r3, [sp]
 3477 0060 2368     		ldr	r3, [r4]
 3478 0062 DA68     		ldr	r2, [r3, #12]
 3479 0064 0092     		str	r2, [sp]
 3480 0066 9B68     		ldr	r3, [r3, #8]
 3481 0068 0093     		str	r3, [sp]
 3482 006a 009B     		ldr	r3, [sp]
 3483              	.L283:
 3484              	.LBE5:
3738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 3485              		.loc 1 3738 0
 3486 006c 0123     		movs	r3, #1
 3487 006e 84F85130 		strb	r3, [r4, #81]
3739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3488              		.loc 1 3739 0
 3489 0072 636D     		ldr	r3, [r4, #84]
 3490 0074 1BB1     		cbz	r3, .L284
3745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3491              		.loc 1 3745 0
ARM GAS  /tmp/cc9tM1KX.s 			page 139


 3492 0076 2046     		mov	r0, r4
 3493 0078 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3494              	.LVL291:
 3495 007c 02E0     		b	.L278
 3496              	.L284:
3754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3497              		.loc 1 3754 0
 3498 007e 2046     		mov	r0, r4
 3499 0080 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3500              	.LVL292:
 3501              	.L278:
3757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3502              		.loc 1 3757 0
 3503 0084 02B0     		add	sp, sp, #8
 3504              	.LCFI38:
 3505              		.cfi_def_cfa_offset 8
 3506              		@ sp needed
 3507 0086 10BD     		pop	{r4, pc}
 3508              	.LVL293:
 3509              	.L288:
 3510              		.align	2
 3511              	.L287:
 3512 0088 00000000 		.word	SystemCoreClock
 3513 008c F1197605 		.word	91625969
 3514              		.cfi_endproc
 3515              	.LFE124:
 3517              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 3518              		.align	2
 3519              		.thumb
 3520              		.thumb_func
 3522              	SPI_TxISR_8BIT:
 3523              	.LFB117:
3358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 3524              		.loc 1 3358 0
 3525              		.cfi_startproc
 3526              		@ args = 0, pretend = 0, frame = 0
 3527              		@ frame_needed = 0, uses_anonymous_args = 0
 3528              	.LVL294:
 3529 0000 08B5     		push	{r3, lr}
 3530              	.LCFI39:
 3531              		.cfi_def_cfa_offset 8
 3532              		.cfi_offset 3, -8
 3533              		.cfi_offset 14, -4
3359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 3534              		.loc 1 3359 0
 3535 0002 0368     		ldr	r3, [r0]
 3536 0004 026B     		ldr	r2, [r0, #48]
 3537 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3538 0008 1A73     		strb	r2, [r3, #12]
3360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 3539              		.loc 1 3360 0
 3540 000a 036B     		ldr	r3, [r0, #48]
 3541 000c 0133     		adds	r3, r3, #1
 3542 000e 0363     		str	r3, [r0, #48]
3361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3543              		.loc 1 3361 0
 3544 0010 C38E     		ldrh	r3, [r0, #54]
ARM GAS  /tmp/cc9tM1KX.s 			page 140


 3545 0012 9BB2     		uxth	r3, r3
 3546 0014 013B     		subs	r3, r3, #1
 3547 0016 9BB2     		uxth	r3, r3
 3548 0018 C386     		strh	r3, [r0, #54]	@ movhi
3363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3549              		.loc 1 3363 0
 3550 001a C38E     		ldrh	r3, [r0, #54]
 3551 001c 9BB2     		uxth	r3, r3
 3552 001e 0BB9     		cbnz	r3, .L289
3372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3553              		.loc 1 3372 0
 3554 0020 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3555              	.LVL295:
 3556              	.L289:
 3557 0024 08BD     		pop	{r3, pc}
 3558              		.cfi_endproc
 3559              	.LFE117:
 3561 0026 00BF     		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 3562              		.align	2
 3563              		.thumb
 3564              		.thumb_func
 3566              	SPI_TxISR_16BIT:
 3567              	.LFB118:
3383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 3568              		.loc 1 3383 0
 3569              		.cfi_startproc
 3570              		@ args = 0, pretend = 0, frame = 0
 3571              		@ frame_needed = 0, uses_anonymous_args = 0
 3572              	.LVL296:
 3573 0000 08B5     		push	{r3, lr}
 3574              	.LCFI40:
 3575              		.cfi_def_cfa_offset 8
 3576              		.cfi_offset 3, -8
 3577              		.cfi_offset 14, -4
3385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 3578              		.loc 1 3385 0
 3579 0002 0368     		ldr	r3, [r0]
 3580 0004 026B     		ldr	r2, [r0, #48]
 3581 0006 1288     		ldrh	r2, [r2]
 3582 0008 DA60     		str	r2, [r3, #12]
3386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 3583              		.loc 1 3386 0
 3584 000a 036B     		ldr	r3, [r0, #48]
 3585 000c 0233     		adds	r3, r3, #2
 3586 000e 0363     		str	r3, [r0, #48]
3387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3587              		.loc 1 3387 0
 3588 0010 C38E     		ldrh	r3, [r0, #54]
 3589 0012 9BB2     		uxth	r3, r3
 3590 0014 013B     		subs	r3, r3, #1
 3591 0016 9BB2     		uxth	r3, r3
 3592 0018 C386     		strh	r3, [r0, #54]	@ movhi
3389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3593              		.loc 1 3389 0
 3594 001a C38E     		ldrh	r3, [r0, #54]
 3595 001c 9BB2     		uxth	r3, r3
 3596 001e 0BB9     		cbnz	r3, .L292
ARM GAS  /tmp/cc9tM1KX.s 			page 141


3398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3597              		.loc 1 3398 0
 3598 0020 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3599              	.LVL297:
 3600              	.L292:
 3601 0024 08BD     		pop	{r3, pc}
 3602              		.cfi_endproc
 3603              	.LFE118:
 3605 0026 00BF     		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 3606              		.align	2
 3607              		.thumb
 3608              		.thumb_func
 3610              	SPI_CloseRx_ISR:
 3611              	.LFB123:
3642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 3612              		.loc 1 3642 0
 3613              		.cfi_startproc
 3614              		@ args = 0, pretend = 0, frame = 8
 3615              		@ frame_needed = 0, uses_anonymous_args = 0
 3616              	.LVL298:
 3617 0000 10B5     		push	{r4, lr}
 3618              	.LCFI41:
 3619              		.cfi_def_cfa_offset 8
 3620              		.cfi_offset 4, -8
 3621              		.cfi_offset 14, -4
 3622 0002 82B0     		sub	sp, sp, #8
 3623              	.LCFI42:
 3624              		.cfi_def_cfa_offset 16
 3625 0004 0446     		mov	r4, r0
3644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3626              		.loc 1 3644 0
 3627 0006 0268     		ldr	r2, [r0]
 3628 0008 5368     		ldr	r3, [r2, #4]
 3629 000a 23F06003 		bic	r3, r3, #96
 3630 000e 5360     		str	r3, [r2, #4]
3647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3631              		.loc 1 3647 0
 3632 0010 FFF7FEFF 		bl	HAL_GetTick
 3633              	.LVL299:
 3634 0014 0246     		mov	r2, r0
 3635 0016 6421     		movs	r1, #100
 3636 0018 2046     		mov	r0, r4
 3637 001a FFF7FEFF 		bl	SPI_EndRxTransaction
 3638              	.LVL300:
 3639 001e 18B1     		cbz	r0, .L296
3649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3640              		.loc 1 3649 0
 3641 0020 636D     		ldr	r3, [r4, #84]
 3642 0022 43F02003 		orr	r3, r3, #32
 3643 0026 6365     		str	r3, [r4, #84]
 3644              	.L296:
3653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3645              		.loc 1 3653 0
 3646 0028 A368     		ldr	r3, [r4, #8]
 3647 002a 33B9     		cbnz	r3, .L297
 3648              	.LBB6:
3655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc9tM1KX.s 			page 142


 3649              		.loc 1 3655 0
 3650 002c 0193     		str	r3, [sp, #4]
 3651 002e 2368     		ldr	r3, [r4]
 3652 0030 DA68     		ldr	r2, [r3, #12]
 3653 0032 0192     		str	r2, [sp, #4]
 3654 0034 9B68     		ldr	r3, [r3, #8]
 3655 0036 0193     		str	r3, [sp, #4]
 3656 0038 019B     		ldr	r3, [sp, #4]
 3657              	.L297:
 3658              	.LBE6:
3657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3659              		.loc 1 3657 0
 3660 003a 0123     		movs	r3, #1
 3661 003c 84F85130 		strb	r3, [r4, #81]
3675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3662              		.loc 1 3675 0
 3663 0040 636D     		ldr	r3, [r4, #84]
 3664 0042 1BB9     		cbnz	r3, .L298
3681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3665              		.loc 1 3681 0
 3666 0044 2046     		mov	r0, r4
 3667 0046 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3668              	.LVL301:
 3669 004a 02E0     		b	.L295
 3670              	.L298:
3690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3671              		.loc 1 3690 0
 3672 004c 2046     		mov	r0, r4
 3673 004e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3674              	.LVL302:
 3675              	.L295:
3696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3676              		.loc 1 3696 0
 3677 0052 02B0     		add	sp, sp, #8
 3678              	.LCFI43:
 3679              		.cfi_def_cfa_offset 8
 3680              		@ sp needed
 3681 0054 10BD     		pop	{r4, pc}
 3682              		.cfi_endproc
 3683              	.LFE123:
 3685 0056 00BF     		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 3686              		.align	2
 3687              		.thumb
 3688              		.thumb_func
 3690              	SPI_RxISR_8BIT:
 3691              	.LFB115:
3273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 3692              		.loc 1 3273 0
 3693              		.cfi_startproc
 3694              		@ args = 0, pretend = 0, frame = 0
 3695              		@ frame_needed = 0, uses_anonymous_args = 0
 3696              	.LVL303:
 3697 0000 08B5     		push	{r3, lr}
 3698              	.LCFI44:
 3699              		.cfi_def_cfa_offset 8
 3700              		.cfi_offset 3, -8
 3701              		.cfi_offset 14, -4
ARM GAS  /tmp/cc9tM1KX.s 			page 143


3274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 3702              		.loc 1 3274 0
 3703 0002 836B     		ldr	r3, [r0, #56]
 3704 0004 0268     		ldr	r2, [r0]
 3705 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 3706 0008 1A70     		strb	r2, [r3]
3275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 3707              		.loc 1 3275 0
 3708 000a 836B     		ldr	r3, [r0, #56]
 3709 000c 0133     		adds	r3, r3, #1
 3710 000e 8363     		str	r3, [r0, #56]
3276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3711              		.loc 1 3276 0
 3712 0010 C38F     		ldrh	r3, [r0, #62]
 3713 0012 9BB2     		uxth	r3, r3
 3714 0014 013B     		subs	r3, r3, #1
 3715 0016 9BB2     		uxth	r3, r3
 3716 0018 C387     		strh	r3, [r0, #62]	@ movhi
3286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3717              		.loc 1 3286 0
 3718 001a C38F     		ldrh	r3, [r0, #62]
 3719 001c 9BB2     		uxth	r3, r3
 3720 001e 0BB9     		cbnz	r3, .L301
3295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3721              		.loc 1 3295 0
 3722 0020 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3723              	.LVL304:
 3724              	.L301:
 3725 0024 08BD     		pop	{r3, pc}
 3726              		.cfi_endproc
 3727              	.LFE115:
 3729 0026 00BF     		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 3730              		.align	2
 3731              		.thumb
 3732              		.thumb_func
 3734              	SPI_RxISR_16BIT:
 3735              	.LFB116:
3325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 3736              		.loc 1 3325 0
 3737              		.cfi_startproc
 3738              		@ args = 0, pretend = 0, frame = 0
 3739              		@ frame_needed = 0, uses_anonymous_args = 0
 3740              	.LVL305:
 3741 0000 08B5     		push	{r3, lr}
 3742              	.LCFI45:
 3743              		.cfi_def_cfa_offset 8
 3744              		.cfi_offset 3, -8
 3745              		.cfi_offset 14, -4
3326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 3746              		.loc 1 3326 0
 3747 0002 836B     		ldr	r3, [r0, #56]
 3748 0004 0268     		ldr	r2, [r0]
 3749 0006 D268     		ldr	r2, [r2, #12]
 3750 0008 1A80     		strh	r2, [r3]	@ movhi
3327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 3751              		.loc 1 3327 0
 3752 000a 836B     		ldr	r3, [r0, #56]
ARM GAS  /tmp/cc9tM1KX.s 			page 144


 3753 000c 0233     		adds	r3, r3, #2
 3754 000e 8363     		str	r3, [r0, #56]
3328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3755              		.loc 1 3328 0
 3756 0010 C38F     		ldrh	r3, [r0, #62]
 3757 0012 9BB2     		uxth	r3, r3
 3758 0014 013B     		subs	r3, r3, #1
 3759 0016 9BB2     		uxth	r3, r3
 3760 0018 C387     		strh	r3, [r0, #62]	@ movhi
3338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3761              		.loc 1 3338 0
 3762 001a C38F     		ldrh	r3, [r0, #62]
 3763 001c 9BB2     		uxth	r3, r3
 3764 001e 0BB9     		cbnz	r3, .L304
3347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3765              		.loc 1 3347 0
 3766 0020 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3767              	.LVL306:
 3768              	.L304:
 3769 0024 08BD     		pop	{r3, pc}
 3770              		.cfi_endproc
 3771              	.LFE116:
 3773 0026 00BF     		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 3774              		.align	2
 3775              		.thumb
 3776              		.thumb_func
 3778              	SPI_CloseRxTx_ISR:
 3779              	.LFB122:
3547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 3780              		.loc 1 3547 0
 3781              		.cfi_startproc
 3782              		@ args = 0, pretend = 0, frame = 8
 3783              		@ frame_needed = 0, uses_anonymous_args = 0
 3784              	.LVL307:
 3785 0000 10B5     		push	{r4, lr}
 3786              	.LCFI46:
 3787              		.cfi_def_cfa_offset 8
 3788              		.cfi_offset 4, -8
 3789              		.cfi_offset 14, -4
 3790 0002 82B0     		sub	sp, sp, #8
 3791              	.LCFI47:
 3792              		.cfi_def_cfa_offset 16
 3793 0004 0446     		mov	r4, r0
3549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3794              		.loc 1 3549 0
 3795 0006 284B     		ldr	r3, .L317
 3796 0008 1B68     		ldr	r3, [r3]
 3797 000a 284A     		ldr	r2, .L317+4
 3798 000c A2FB0323 		umull	r2, r3, r2, r3
 3799 0010 5B0A     		lsrs	r3, r3, #9
 3800 0012 6422     		movs	r2, #100
 3801 0014 02FB03F3 		mul	r3, r2, r3
 3802 0018 0193     		str	r3, [sp, #4]
3552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3803              		.loc 1 3552 0
 3804 001a FFF7FEFF 		bl	HAL_GetTick
 3805              	.LVL308:
ARM GAS  /tmp/cc9tM1KX.s 			page 145


 3806 001e 0246     		mov	r2, r0
 3807              	.LVL309:
3555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3808              		.loc 1 3555 0
 3809 0020 2168     		ldr	r1, [r4]
 3810 0022 4B68     		ldr	r3, [r1, #4]
 3811 0024 23F02003 		bic	r3, r3, #32
 3812 0028 4B60     		str	r3, [r1, #4]
 3813              	.L310:
3560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3814              		.loc 1 3560 0
 3815 002a 019B     		ldr	r3, [sp, #4]
 3816 002c 23B9     		cbnz	r3, .L308
3562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 3817              		.loc 1 3562 0
 3818 002e 636D     		ldr	r3, [r4, #84]
 3819 0030 43F02003 		orr	r3, r3, #32
 3820 0034 6365     		str	r3, [r4, #84]
3563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3821              		.loc 1 3563 0
 3822 0036 07E0     		b	.L309
 3823              	.L308:
3565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3824              		.loc 1 3565 0
 3825 0038 019B     		ldr	r3, [sp, #4]
 3826 003a 013B     		subs	r3, r3, #1
 3827 003c 0193     		str	r3, [sp, #4]
3566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3828              		.loc 1 3566 0
 3829 003e 2368     		ldr	r3, [r4]
 3830 0040 9B68     		ldr	r3, [r3, #8]
 3831 0042 13F0020F 		tst	r3, #2
 3832 0046 F0D0     		beq	.L310
 3833              	.L309:
3569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3834              		.loc 1 3569 0
 3835 0048 6421     		movs	r1, #100
 3836 004a 2046     		mov	r0, r4
 3837              	.LVL310:
 3838 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3839              	.LVL311:
 3840 0050 18B1     		cbz	r0, .L311
3571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3841              		.loc 1 3571 0
 3842 0052 636D     		ldr	r3, [r4, #84]
 3843 0054 43F02003 		orr	r3, r3, #32
 3844 0058 6365     		str	r3, [r4, #84]
 3845              	.L311:
3575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3846              		.loc 1 3575 0
 3847 005a A368     		ldr	r3, [r4, #8]
 3848 005c 33B9     		cbnz	r3, .L312
 3849              	.LBB7:
3577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3850              		.loc 1 3577 0
 3851 005e 0093     		str	r3, [sp]
 3852 0060 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc9tM1KX.s 			page 146


 3853 0062 DA68     		ldr	r2, [r3, #12]
 3854 0064 0092     		str	r2, [sp]
 3855 0066 9B68     		ldr	r3, [r3, #8]
 3856 0068 0093     		str	r3, [sp]
 3857 006a 009B     		ldr	r3, [sp]
 3858              	.L312:
 3859              	.LBE7:
3597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3860              		.loc 1 3597 0
 3861 006c 636D     		ldr	r3, [r4, #84]
 3862 006e 93B9     		cbnz	r3, .L313
3599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 3863              		.loc 1 3599 0
 3864 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 3865 0074 DBB2     		uxtb	r3, r3
 3866 0076 042B     		cmp	r3, #4
 3867 0078 06D1     		bne	.L314
3601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user Rx complete callback */
 3868              		.loc 1 3601 0
 3869 007a 0123     		movs	r3, #1
 3870 007c 84F85130 		strb	r3, [r4, #81]
3606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3871              		.loc 1 3606 0
 3872 0080 2046     		mov	r0, r4
 3873 0082 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3874              	.LVL312:
 3875 0086 0CE0     		b	.L307
 3876              	.L314:
3611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user TxRx complete callback */
 3877              		.loc 1 3611 0
 3878 0088 0123     		movs	r3, #1
 3879 008a 84F85130 		strb	r3, [r4, #81]
3616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3880              		.loc 1 3616 0
 3881 008e 2046     		mov	r0, r4
 3882 0090 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 3883              	.LVL313:
 3884 0094 05E0     		b	.L307
 3885              	.L313:
3622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
 3886              		.loc 1 3622 0
 3887 0096 0123     		movs	r3, #1
 3888 0098 84F85130 		strb	r3, [r4, #81]
3627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3889              		.loc 1 3627 0
 3890 009c 2046     		mov	r0, r4
 3891 009e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3892              	.LVL314:
 3893              	.L307:
3633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3894              		.loc 1 3633 0
 3895 00a2 02B0     		add	sp, sp, #8
 3896              	.LCFI48:
 3897              		.cfi_def_cfa_offset 8
 3898              		@ sp needed
 3899 00a4 10BD     		pop	{r4, pc}
 3900              	.LVL315:
ARM GAS  /tmp/cc9tM1KX.s 			page 147


 3901              	.L318:
 3902 00a6 00BF     		.align	2
 3903              	.L317:
 3904 00a8 00000000 		.word	SystemCoreClock
 3905 00ac F1197605 		.word	91625969
 3906              		.cfi_endproc
 3907              	.LFE122:
 3909              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 3910              		.align	2
 3911              		.thumb
 3912              		.thumb_func
 3914              	SPI_2linesTxISR_8BIT:
 3915              	.LFB112:
3132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 3916              		.loc 1 3132 0
 3917              		.cfi_startproc
 3918              		@ args = 0, pretend = 0, frame = 0
 3919              		@ frame_needed = 0, uses_anonymous_args = 0
 3920              	.LVL316:
 3921 0000 08B5     		push	{r3, lr}
 3922              	.LCFI49:
 3923              		.cfi_def_cfa_offset 8
 3924              		.cfi_offset 3, -8
 3925              		.cfi_offset 14, -4
3133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 3926              		.loc 1 3133 0
 3927 0002 0368     		ldr	r3, [r0]
 3928 0004 026B     		ldr	r2, [r0, #48]
 3929 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3930 0008 1A73     		strb	r2, [r3, #12]
3134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 3931              		.loc 1 3134 0
 3932 000a 036B     		ldr	r3, [r0, #48]
 3933 000c 0133     		adds	r3, r3, #1
 3934 000e 0363     		str	r3, [r0, #48]
3135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3935              		.loc 1 3135 0
 3936 0010 C38E     		ldrh	r3, [r0, #54]
 3937 0012 9BB2     		uxth	r3, r3
 3938 0014 013B     		subs	r3, r3, #1
 3939 0016 9BB2     		uxth	r3, r3
 3940 0018 C386     		strh	r3, [r0, #54]	@ movhi
3138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3941              		.loc 1 3138 0
 3942 001a C38E     		ldrh	r3, [r0, #54]
 3943 001c 9BB2     		uxth	r3, r3
 3944 001e 4BB9     		cbnz	r3, .L319
3152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3945              		.loc 1 3152 0
 3946 0020 0268     		ldr	r2, [r0]
 3947 0022 5368     		ldr	r3, [r2, #4]
 3948 0024 23F08003 		bic	r3, r3, #128
 3949 0028 5360     		str	r3, [r2, #4]
3154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3950              		.loc 1 3154 0
 3951 002a C38F     		ldrh	r3, [r0, #62]
 3952 002c 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cc9tM1KX.s 			page 148


 3953 002e 0BB9     		cbnz	r3, .L319
3156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3954              		.loc 1 3156 0
 3955 0030 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 3956              	.LVL317:
 3957              	.L319:
 3958 0034 08BD     		pop	{r3, pc}
 3959              		.cfi_endproc
 3960              	.LFE112:
 3962 0036 00BF     		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 3963              		.align	2
 3964              		.thumb
 3965              		.thumb_func
 3967              	SPI_2linesRxISR_8BIT:
 3968              	.LFB111:
3076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8bit mode */
 3969              		.loc 1 3076 0
 3970              		.cfi_startproc
 3971              		@ args = 0, pretend = 0, frame = 0
 3972              		@ frame_needed = 0, uses_anonymous_args = 0
 3973              	.LVL318:
 3974 0000 08B5     		push	{r3, lr}
 3975              	.LCFI50:
 3976              		.cfi_def_cfa_offset 8
 3977              		.cfi_offset 3, -8
 3978              		.cfi_offset 14, -4
3078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 3979              		.loc 1 3078 0
 3980 0002 836B     		ldr	r3, [r0, #56]
 3981 0004 0268     		ldr	r2, [r0]
 3982 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 3983 0008 1A70     		strb	r2, [r3]
3079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 3984              		.loc 1 3079 0
 3985 000a 836B     		ldr	r3, [r0, #56]
 3986 000c 0133     		adds	r3, r3, #1
 3987 000e 8363     		str	r3, [r0, #56]
3080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3988              		.loc 1 3080 0
 3989 0010 C38F     		ldrh	r3, [r0, #62]
 3990 0012 9BB2     		uxth	r3, r3
 3991 0014 013B     		subs	r3, r3, #1
 3992 0016 9BB2     		uxth	r3, r3
 3993 0018 C387     		strh	r3, [r0, #62]	@ movhi
3083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3994              		.loc 1 3083 0
 3995 001a C38F     		ldrh	r3, [r0, #62]
 3996 001c 9BB2     		uxth	r3, r3
 3997 001e 4BB9     		cbnz	r3, .L322
3094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3998              		.loc 1 3094 0
 3999 0020 0268     		ldr	r2, [r0]
 4000 0022 5368     		ldr	r3, [r2, #4]
 4001 0024 23F06003 		bic	r3, r3, #96
 4002 0028 5360     		str	r3, [r2, #4]
3096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4003              		.loc 1 3096 0
ARM GAS  /tmp/cc9tM1KX.s 			page 149


 4004 002a C38E     		ldrh	r3, [r0, #54]
 4005 002c 9BB2     		uxth	r3, r3
 4006 002e 0BB9     		cbnz	r3, .L322
3098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4007              		.loc 1 3098 0
 4008 0030 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4009              	.LVL319:
 4010              	.L322:
 4011 0034 08BD     		pop	{r3, pc}
 4012              		.cfi_endproc
 4013              	.LFE111:
 4015 0036 00BF     		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 4016              		.align	2
 4017              		.thumb
 4018              		.thumb_func
 4020              	SPI_2linesTxISR_16BIT:
 4021              	.LFB114:
3220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4022              		.loc 1 3220 0
 4023              		.cfi_startproc
 4024              		@ args = 0, pretend = 0, frame = 0
 4025              		@ frame_needed = 0, uses_anonymous_args = 0
 4026              	.LVL320:
 4027 0000 08B5     		push	{r3, lr}
 4028              	.LCFI51:
 4029              		.cfi_def_cfa_offset 8
 4030              		.cfi_offset 3, -8
 4031              		.cfi_offset 14, -4
3222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4032              		.loc 1 3222 0
 4033 0002 0368     		ldr	r3, [r0]
 4034 0004 026B     		ldr	r2, [r0, #48]
 4035 0006 1288     		ldrh	r2, [r2]
 4036 0008 DA60     		str	r2, [r3, #12]
3223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 4037              		.loc 1 3223 0
 4038 000a 036B     		ldr	r3, [r0, #48]
 4039 000c 0233     		adds	r3, r3, #2
 4040 000e 0363     		str	r3, [r0, #48]
3224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4041              		.loc 1 3224 0
 4042 0010 C38E     		ldrh	r3, [r0, #54]
 4043 0012 9BB2     		uxth	r3, r3
 4044 0014 013B     		subs	r3, r3, #1
 4045 0016 9BB2     		uxth	r3, r3
 4046 0018 C386     		strh	r3, [r0, #54]	@ movhi
3227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4047              		.loc 1 3227 0
 4048 001a C38E     		ldrh	r3, [r0, #54]
 4049 001c 9BB2     		uxth	r3, r3
 4050 001e 4BB9     		cbnz	r3, .L325
3241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4051              		.loc 1 3241 0
 4052 0020 0268     		ldr	r2, [r0]
 4053 0022 5368     		ldr	r3, [r2, #4]
 4054 0024 23F08003 		bic	r3, r3, #128
 4055 0028 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cc9tM1KX.s 			page 150


3243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4056              		.loc 1 3243 0
 4057 002a C38F     		ldrh	r3, [r0, #62]
 4058 002c 9BB2     		uxth	r3, r3
 4059 002e 0BB9     		cbnz	r3, .L325
3245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4060              		.loc 1 3245 0
 4061 0030 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4062              	.LVL321:
 4063              	.L325:
 4064 0034 08BD     		pop	{r3, pc}
 4065              		.cfi_endproc
 4066              	.LFE114:
 4068 0036 00BF     		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 4069              		.align	2
 4070              		.thumb
 4071              		.thumb_func
 4073              	SPI_2linesRxISR_16BIT:
 4074              	.LFB113:
3168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 4075              		.loc 1 3168 0
 4076              		.cfi_startproc
 4077              		@ args = 0, pretend = 0, frame = 0
 4078              		@ frame_needed = 0, uses_anonymous_args = 0
 4079              	.LVL322:
 4080 0000 08B5     		push	{r3, lr}
 4081              	.LCFI52:
 4082              		.cfi_def_cfa_offset 8
 4083              		.cfi_offset 3, -8
 4084              		.cfi_offset 14, -4
3170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4085              		.loc 1 3170 0
 4086 0002 836B     		ldr	r3, [r0, #56]
 4087 0004 0268     		ldr	r2, [r0]
 4088 0006 D268     		ldr	r2, [r2, #12]
 4089 0008 1A80     		strh	r2, [r3]	@ movhi
3171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 4090              		.loc 1 3171 0
 4091 000a 836B     		ldr	r3, [r0, #56]
 4092 000c 0233     		adds	r3, r3, #2
 4093 000e 8363     		str	r3, [r0, #56]
3172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4094              		.loc 1 3172 0
 4095 0010 C38F     		ldrh	r3, [r0, #62]
 4096 0012 9BB2     		uxth	r3, r3
 4097 0014 013B     		subs	r3, r3, #1
 4098 0016 9BB2     		uxth	r3, r3
 4099 0018 C387     		strh	r3, [r0, #62]	@ movhi
3174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4100              		.loc 1 3174 0
 4101 001a C38F     		ldrh	r3, [r0, #62]
 4102 001c 9BB2     		uxth	r3, r3
 4103 001e 4BB9     		cbnz	r3, .L328
3185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4104              		.loc 1 3185 0
 4105 0020 0268     		ldr	r2, [r0]
 4106 0022 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc9tM1KX.s 			page 151


 4107 0024 23F04003 		bic	r3, r3, #64
 4108 0028 5360     		str	r3, [r2, #4]
3187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4109              		.loc 1 3187 0
 4110 002a C38E     		ldrh	r3, [r0, #54]
 4111 002c 9BB2     		uxth	r3, r3
 4112 002e 0BB9     		cbnz	r3, .L328
3189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4113              		.loc 1 3189 0
 4114 0030 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4115              	.LVL323:
 4116              	.L328:
 4117 0034 08BD     		pop	{r3, pc}
 4118              		.cfi_endproc
 4119              	.LFE113:
 4121 0036 00BF     		.section	.text.SPI_DMAError,"ax",%progbits
 4122              		.align	2
 4123              		.thumb
 4124              		.thumb_func
 4126              	SPI_DMAError:
 4127              	.LFB107:
2903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4128              		.loc 1 2903 0
 4129              		.cfi_startproc
 4130              		@ args = 0, pretend = 0, frame = 0
 4131              		@ frame_needed = 0, uses_anonymous_args = 0
 4132              	.LVL324:
 4133 0000 08B5     		push	{r3, lr}
 4134              	.LCFI53:
 4135              		.cfi_def_cfa_offset 8
 4136              		.cfi_offset 3, -8
 4137              		.cfi_offset 14, -4
2904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4138              		.loc 1 2904 0
 4139 0002 406A     		ldr	r0, [r0, #36]
 4140              	.LVL325:
2907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4141              		.loc 1 2907 0
 4142 0004 0268     		ldr	r2, [r0]
 4143 0006 5368     		ldr	r3, [r2, #4]
 4144 0008 23F00303 		bic	r3, r3, #3
 4145 000c 5360     		str	r3, [r2, #4]
2909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4146              		.loc 1 2909 0
 4147 000e 436D     		ldr	r3, [r0, #84]
 4148 0010 43F01003 		orr	r3, r3, #16
 4149 0014 4365     		str	r3, [r0, #84]
2910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
 4150              		.loc 1 2910 0
 4151 0016 0123     		movs	r3, #1
 4152 0018 80F85130 		strb	r3, [r0, #81]
2915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4153              		.loc 1 2915 0
 4154 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4155              	.LVL326:
 4156 0020 08BD     		pop	{r3, pc}
 4157              		.cfi_endproc
ARM GAS  /tmp/cc9tM1KX.s 			page 152


 4158              	.LFE107:
 4160 0022 00BF     		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4161              		.align	2
 4162              		.thumb
 4163              		.thumb_func
 4165              	SPI_DMATransmitCplt:
 4166              	.LFB101:
2642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4167              		.loc 1 2642 0
 4168              		.cfi_startproc
 4169              		@ args = 0, pretend = 0, frame = 8
 4170              		@ frame_needed = 0, uses_anonymous_args = 0
 4171              	.LVL327:
 4172 0000 30B5     		push	{r4, r5, lr}
 4173              	.LCFI54:
 4174              		.cfi_def_cfa_offset 12
 4175              		.cfi_offset 4, -12
 4176              		.cfi_offset 5, -8
 4177              		.cfi_offset 14, -4
 4178 0002 83B0     		sub	sp, sp, #12
 4179              	.LCFI55:
 4180              		.cfi_def_cfa_offset 24
 4181 0004 0546     		mov	r5, r0
2643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4182              		.loc 1 2643 0
 4183 0006 446A     		ldr	r4, [r0, #36]
 4184              	.LVL328:
2647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4185              		.loc 1 2647 0
 4186 0008 FFF7FEFF 		bl	HAL_GetTick
 4187              	.LVL329:
2650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4188              		.loc 1 2650 0
 4189 000c 2B68     		ldr	r3, [r5]
 4190 000e 1B68     		ldr	r3, [r3]
 4191 0010 13F0200F 		tst	r3, #32
 4192 0014 27D1     		bne	.L334
2653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4193              		.loc 1 2653 0
 4194 0016 2268     		ldr	r2, [r4]
 4195 0018 5368     		ldr	r3, [r2, #4]
 4196 001a 23F02003 		bic	r3, r3, #32
 4197 001e 5360     		str	r3, [r2, #4]
2656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4198              		.loc 1 2656 0
 4199 0020 2268     		ldr	r2, [r4]
 4200 0022 5368     		ldr	r3, [r2, #4]
 4201 0024 23F00203 		bic	r3, r3, #2
 4202 0028 5360     		str	r3, [r2, #4]
2659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4203              		.loc 1 2659 0
 4204 002a 0246     		mov	r2, r0
 4205 002c 6421     		movs	r1, #100
 4206 002e 2046     		mov	r0, r4
 4207              	.LVL330:
 4208 0030 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4209              	.LVL331:
ARM GAS  /tmp/cc9tM1KX.s 			page 153


 4210 0034 18B1     		cbz	r0, .L335
2661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4211              		.loc 1 2661 0
 4212 0036 636D     		ldr	r3, [r4, #84]
 4213 0038 43F02003 		orr	r3, r3, #32
 4214 003c 6365     		str	r3, [r4, #84]
 4215              	.L335:
2665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4216              		.loc 1 2665 0
 4217 003e A368     		ldr	r3, [r4, #8]
 4218 0040 33B9     		cbnz	r3, .L336
 4219              	.LBB8:
2667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4220              		.loc 1 2667 0
 4221 0042 0193     		str	r3, [sp, #4]
 4222 0044 2368     		ldr	r3, [r4]
 4223 0046 DA68     		ldr	r2, [r3, #12]
 4224 0048 0192     		str	r2, [sp, #4]
 4225 004a 9B68     		ldr	r3, [r3, #8]
 4226 004c 0193     		str	r3, [sp, #4]
 4227 004e 019B     		ldr	r3, [sp, #4]
 4228              	.L336:
 4229              	.LBE8:
2670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4230              		.loc 1 2670 0
 4231 0050 0023     		movs	r3, #0
 4232 0052 E386     		strh	r3, [r4, #54]	@ movhi
2671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4233              		.loc 1 2671 0
 4234 0054 0123     		movs	r3, #1
 4235 0056 84F85130 		strb	r3, [r4, #81]
2673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4236              		.loc 1 2673 0
 4237 005a 636D     		ldr	r3, [r4, #84]
 4238 005c 1BB1     		cbz	r3, .L334
2679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4239              		.loc 1 2679 0
 4240 005e 2046     		mov	r0, r4
 4241 0060 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4242              	.LVL332:
2681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4243              		.loc 1 2681 0
 4244 0064 02E0     		b	.L333
 4245              	.L334:
2688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4246              		.loc 1 2688 0
 4247 0066 2046     		mov	r0, r4
 4248 0068 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4249              	.LVL333:
 4250              	.L333:
2690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4251              		.loc 1 2690 0
 4252 006c 03B0     		add	sp, sp, #12
 4253              	.LCFI56:
 4254              		.cfi_def_cfa_offset 12
 4255              		@ sp needed
 4256 006e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/cc9tM1KX.s 			page 154


 4257              		.cfi_endproc
 4258              	.LFE101:
 4260              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4261              		.align	2
 4262              		.thumb
 4263              		.thumb_func
 4265              	SPI_DMAReceiveCplt:
 4266              	.LFB102:
2699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4267              		.loc 1 2699 0
 4268              		.cfi_startproc
 4269              		@ args = 0, pretend = 0, frame = 0
 4270              		@ frame_needed = 0, uses_anonymous_args = 0
 4271              	.LVL334:
 4272 0000 38B5     		push	{r3, r4, r5, lr}
 4273              	.LCFI57:
 4274              		.cfi_def_cfa_offset 16
 4275              		.cfi_offset 3, -16
 4276              		.cfi_offset 4, -12
 4277              		.cfi_offset 5, -8
 4278              		.cfi_offset 14, -4
 4279 0002 0546     		mov	r5, r0
2700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4280              		.loc 1 2700 0
 4281 0004 446A     		ldr	r4, [r0, #36]
 4282              	.LVL335:
2704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4283              		.loc 1 2704 0
 4284 0006 FFF7FEFF 		bl	HAL_GetTick
 4285              	.LVL336:
2707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4286              		.loc 1 2707 0
 4287 000a 2B68     		ldr	r3, [r5]
 4288 000c 1B68     		ldr	r3, [r3]
 4289 000e 13F0200F 		tst	r3, #32
 4290 0012 1CD1     		bne	.L340
2710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4291              		.loc 1 2710 0
 4292 0014 2268     		ldr	r2, [r4]
 4293 0016 5368     		ldr	r3, [r2, #4]
 4294 0018 23F02003 		bic	r3, r3, #32
 4295 001c 5360     		str	r3, [r2, #4]
2728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4296              		.loc 1 2728 0
 4297 001e 2268     		ldr	r2, [r4]
 4298 0020 5368     		ldr	r3, [r2, #4]
 4299 0022 23F00303 		bic	r3, r3, #3
 4300 0026 5360     		str	r3, [r2, #4]
2731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4301              		.loc 1 2731 0
 4302 0028 0246     		mov	r2, r0
 4303 002a 6421     		movs	r1, #100
 4304 002c 2046     		mov	r0, r4
 4305              	.LVL337:
 4306 002e FFF7FEFF 		bl	SPI_EndRxTransaction
 4307              	.LVL338:
 4308 0032 08B1     		cbz	r0, .L341
ARM GAS  /tmp/cc9tM1KX.s 			page 155


2733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4309              		.loc 1 2733 0
 4310 0034 2023     		movs	r3, #32
 4311 0036 6365     		str	r3, [r4, #84]
 4312              	.L341:
2736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4313              		.loc 1 2736 0
 4314 0038 0023     		movs	r3, #0
 4315 003a E387     		strh	r3, [r4, #62]	@ movhi
2737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4316              		.loc 1 2737 0
 4317 003c 0123     		movs	r3, #1
 4318 003e 84F85130 		strb	r3, [r4, #81]
2748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4319              		.loc 1 2748 0
 4320 0042 636D     		ldr	r3, [r4, #84]
 4321 0044 1BB1     		cbz	r3, .L340
2754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4322              		.loc 1 2754 0
 4323 0046 2046     		mov	r0, r4
 4324 0048 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4325              	.LVL339:
2756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4326              		.loc 1 2756 0
 4327 004c 38BD     		pop	{r3, r4, r5, pc}
 4328              	.LVL340:
 4329              	.L340:
2763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4330              		.loc 1 2763 0
 4331 004e 2046     		mov	r0, r4
 4332 0050 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4333              	.LVL341:
 4334 0054 38BD     		pop	{r3, r4, r5, pc}
 4335              		.cfi_endproc
 4336              	.LFE102:
 4338 0056 00BF     		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4339              		.align	2
 4340              		.thumb
 4341              		.thumb_func
 4343              	SPI_DMATransmitReceiveCplt:
 4344              	.LFB103:
2774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4345              		.loc 1 2774 0
 4346              		.cfi_startproc
 4347              		@ args = 0, pretend = 0, frame = 0
 4348              		@ frame_needed = 0, uses_anonymous_args = 0
 4349              	.LVL342:
 4350 0000 38B5     		push	{r3, r4, r5, lr}
 4351              	.LCFI58:
 4352              		.cfi_def_cfa_offset 16
 4353              		.cfi_offset 3, -16
 4354              		.cfi_offset 4, -12
 4355              		.cfi_offset 5, -8
 4356              		.cfi_offset 14, -4
 4357 0002 0546     		mov	r5, r0
2775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4358              		.loc 1 2775 0
ARM GAS  /tmp/cc9tM1KX.s 			page 156


 4359 0004 446A     		ldr	r4, [r0, #36]
 4360              	.LVL343:
2779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4361              		.loc 1 2779 0
 4362 0006 FFF7FEFF 		bl	HAL_GetTick
 4363              	.LVL344:
2782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4364              		.loc 1 2782 0
 4365 000a 2B68     		ldr	r3, [r5]
 4366 000c 1B68     		ldr	r3, [r3]
 4367 000e 13F0200F 		tst	r3, #32
 4368 0012 1FD1     		bne	.L345
2785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4369              		.loc 1 2785 0
 4370 0014 2268     		ldr	r2, [r4]
 4371 0016 5368     		ldr	r3, [r2, #4]
 4372 0018 23F02003 		bic	r3, r3, #32
 4373 001c 5360     		str	r3, [r2, #4]
2802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4374              		.loc 1 2802 0
 4375 001e 0246     		mov	r2, r0
 4376 0020 6421     		movs	r1, #100
 4377 0022 2046     		mov	r0, r4
 4378              	.LVL345:
 4379 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4380              	.LVL346:
 4381 0028 18B1     		cbz	r0, .L346
2804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4382              		.loc 1 2804 0
 4383 002a 636D     		ldr	r3, [r4, #84]
 4384 002c 43F02003 		orr	r3, r3, #32
 4385 0030 6365     		str	r3, [r4, #84]
 4386              	.L346:
2808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4387              		.loc 1 2808 0
 4388 0032 2268     		ldr	r2, [r4]
 4389 0034 5368     		ldr	r3, [r2, #4]
 4390 0036 23F00303 		bic	r3, r3, #3
 4391 003a 5360     		str	r3, [r2, #4]
2810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4392              		.loc 1 2810 0
 4393 003c 0023     		movs	r3, #0
 4394 003e E386     		strh	r3, [r4, #54]	@ movhi
2811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4395              		.loc 1 2811 0
 4396 0040 E387     		strh	r3, [r4, #62]	@ movhi
2812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4397              		.loc 1 2812 0
 4398 0042 0123     		movs	r3, #1
 4399 0044 84F85130 		strb	r3, [r4, #81]
2823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4400              		.loc 1 2823 0
 4401 0048 636D     		ldr	r3, [r4, #84]
 4402 004a 1BB1     		cbz	r3, .L345
2829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4403              		.loc 1 2829 0
 4404 004c 2046     		mov	r0, r4
ARM GAS  /tmp/cc9tM1KX.s 			page 157


 4405 004e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4406              	.LVL347:
2831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4407              		.loc 1 2831 0
 4408 0052 38BD     		pop	{r3, r4, r5, pc}
 4409              	.LVL348:
 4410              	.L345:
2838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4411              		.loc 1 2838 0
 4412 0054 2046     		mov	r0, r4
 4413 0056 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4414              	.LVL349:
 4415 005a 38BD     		pop	{r3, r4, r5, pc}
 4416              		.cfi_endproc
 4417              	.LFE103:
 4419              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4420              		.align	2
 4421              		.global	HAL_SPI_IRQHandler
 4422              		.thumb
 4423              		.thumb_func
 4425              	HAL_SPI_IRQHandler:
 4426              	.LFB90:
2342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4427              		.loc 1 2342 0
 4428              		.cfi_startproc
 4429              		@ args = 0, pretend = 0, frame = 16
 4430              		@ frame_needed = 0, uses_anonymous_args = 0
 4431              	.LVL350:
 4432 0000 10B5     		push	{r4, lr}
 4433              	.LCFI59:
 4434              		.cfi_def_cfa_offset 8
 4435              		.cfi_offset 4, -8
 4436              		.cfi_offset 14, -4
 4437 0002 84B0     		sub	sp, sp, #16
 4438              	.LCFI60:
 4439              		.cfi_def_cfa_offset 24
 4440 0004 0446     		mov	r4, r0
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4441              		.loc 1 2343 0
 4442 0006 0268     		ldr	r2, [r0]
 4443 0008 5168     		ldr	r1, [r2, #4]
 4444              	.LVL351:
2344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4445              		.loc 1 2344 0
 4446 000a 9368     		ldr	r3, [r2, #8]
 4447              	.LVL352:
2347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4448              		.loc 1 2347 0
 4449 000c 03F04100 		and	r0, r3, #65
 4450              	.LVL353:
 4451 0010 0128     		cmp	r0, #1
 4452 0012 06D1     		bne	.L350
2348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4453              		.loc 1 2348 0
 4454 0014 11F0400F 		tst	r1, #64
 4455 0018 03D0     		beq	.L350
2350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
ARM GAS  /tmp/cc9tM1KX.s 			page 158


 4456              		.loc 1 2350 0
 4457 001a 236C     		ldr	r3, [r4, #64]
 4458              	.LVL354:
 4459 001c 2046     		mov	r0, r4
 4460 001e 9847     		blx	r3
 4461              	.LVL355:
2351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4462              		.loc 1 2351 0
 4463 0020 69E0     		b	.L349
 4464              	.LVL356:
 4465              	.L350:
2355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4466              		.loc 1 2355 0
 4467 0022 13F0020F 		tst	r3, #2
 4468 0026 06D0     		beq	.L352
2355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4469              		.loc 1 2355 0 is_stmt 0 discriminator 1
 4470 0028 11F0800F 		tst	r1, #128
 4471 002c 03D0     		beq	.L352
2357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
 4472              		.loc 1 2357 0 is_stmt 1
 4473 002e 636C     		ldr	r3, [r4, #68]
 4474              	.LVL357:
 4475 0030 2046     		mov	r0, r4
 4476 0032 9847     		blx	r3
 4477              	.LVL358:
2358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4478              		.loc 1 2358 0
 4479 0034 5FE0     		b	.L349
 4480              	.LVL359:
 4481              	.L352:
2366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 4482              		.loc 1 2366 0
 4483 0036 13F0600F 		tst	r3, #96
 4484 003a 5CD0     		beq	.L349
2367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 4485              		.loc 1 2367 0
 4486 003c 11F0200F 		tst	r1, #32
 4487 0040 59D0     		beq	.L349
2371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4488              		.loc 1 2371 0
 4489 0042 13F0400F 		tst	r3, #64
 4490 0046 18D0     		beq	.L353
2373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4491              		.loc 1 2373 0
 4492 0048 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 4493 004c C0B2     		uxtb	r0, r0
 4494 004e 0328     		cmp	r0, #3
 4495 0050 0BD0     		beq	.L354
2375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4496              		.loc 1 2375 0
 4497 0052 606D     		ldr	r0, [r4, #84]
 4498 0054 40F00400 		orr	r0, r0, #4
 4499 0058 6065     		str	r0, [r4, #84]
 4500              	.LBB9:
2376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4501              		.loc 1 2376 0
ARM GAS  /tmp/cc9tM1KX.s 			page 159


 4502 005a 0020     		movs	r0, #0
 4503 005c 0190     		str	r0, [sp, #4]
 4504 005e D068     		ldr	r0, [r2, #12]
 4505 0060 0190     		str	r0, [sp, #4]
 4506 0062 9068     		ldr	r0, [r2, #8]
 4507 0064 0190     		str	r0, [sp, #4]
 4508 0066 0198     		ldr	r0, [sp, #4]
 4509              	.LBE9:
 4510 0068 07E0     		b	.L353
 4511              	.L354:
 4512              	.LBB10:
2380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return;
 4513              		.loc 1 2380 0
 4514 006a 0023     		movs	r3, #0
 4515              	.LVL360:
 4516 006c 0293     		str	r3, [sp, #8]
 4517 006e D368     		ldr	r3, [r2, #12]
 4518 0070 0293     		str	r3, [sp, #8]
 4519 0072 9368     		ldr	r3, [r2, #8]
 4520 0074 0293     		str	r3, [sp, #8]
 4521 0076 029B     		ldr	r3, [sp, #8]
 4522              	.LBE10:
2381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4523              		.loc 1 2381 0
 4524 0078 3DE0     		b	.L349
 4525              	.LVL361:
 4526              	.L353:
2386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4527              		.loc 1 2386 0
 4528 007a 13F0200F 		tst	r3, #32
 4529 007e 0CD0     		beq	.L355
2388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4530              		.loc 1 2388 0
 4531 0080 636D     		ldr	r3, [r4, #84]
 4532              	.LVL362:
 4533 0082 43F00103 		orr	r3, r3, #1
 4534 0086 6365     		str	r3, [r4, #84]
 4535              	.LBB11:
2389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4536              		.loc 1 2389 0
 4537 0088 0023     		movs	r3, #0
 4538 008a 0393     		str	r3, [sp, #12]
 4539 008c 9368     		ldr	r3, [r2, #8]
 4540 008e 0393     		str	r3, [sp, #12]
 4541 0090 1368     		ldr	r3, [r2]
 4542 0092 23F04003 		bic	r3, r3, #64
 4543 0096 1360     		str	r3, [r2]
 4544 0098 039B     		ldr	r3, [sp, #12]
 4545              	.L355:
 4546              	.LBE11:
2401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4547              		.loc 1 2401 0
 4548 009a 636D     		ldr	r3, [r4, #84]
 4549 009c 5BB3     		cbz	r3, .L349
2404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4550              		.loc 1 2404 0
 4551 009e 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc9tM1KX.s 			page 160


 4552 00a0 5368     		ldr	r3, [r2, #4]
 4553 00a2 23F0E003 		bic	r3, r3, #224
 4554 00a6 5360     		str	r3, [r2, #4]
2406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 4555              		.loc 1 2406 0
 4556 00a8 0123     		movs	r3, #1
 4557 00aa 84F85130 		strb	r3, [r4, #81]
2408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4558              		.loc 1 2408 0
 4559 00ae 11F0030F 		tst	r1, #3
 4560 00b2 1DD0     		beq	.L356
2410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4561              		.loc 1 2410 0
 4562 00b4 2268     		ldr	r2, [r4]
 4563 00b6 5368     		ldr	r3, [r2, #4]
 4564 00b8 23F00303 		bic	r3, r3, #3
 4565 00bc 5360     		str	r3, [r2, #4]
2413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 4566              		.loc 1 2413 0
 4567 00be E36C     		ldr	r3, [r4, #76]
 4568 00c0 4BB1     		cbz	r3, .L357
2417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 4569              		.loc 1 2417 0
 4570 00c2 0E4A     		ldr	r2, .L359
 4571 00c4 5A63     		str	r2, [r3, #52]
2418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
 4572              		.loc 1 2418 0
 4573 00c6 E06C     		ldr	r0, [r4, #76]
 4574 00c8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4575              	.LVL363:
 4576 00cc 18B1     		cbz	r0, .L357
2420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
 4577              		.loc 1 2420 0
 4578 00ce 636D     		ldr	r3, [r4, #84]
 4579 00d0 43F04003 		orr	r3, r3, #64
 4580 00d4 6365     		str	r3, [r4, #84]
 4581              	.L357:
2424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 4582              		.loc 1 2424 0
 4583 00d6 A36C     		ldr	r3, [r4, #72]
 4584 00d8 6BB1     		cbz	r3, .L349
2428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 4585              		.loc 1 2428 0
 4586 00da 084A     		ldr	r2, .L359
 4587 00dc 5A63     		str	r2, [r3, #52]
2429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
 4588              		.loc 1 2429 0
 4589 00de A06C     		ldr	r0, [r4, #72]
 4590 00e0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4591              	.LVL364:
 4592 00e4 38B1     		cbz	r0, .L349
2431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
 4593              		.loc 1 2431 0
 4594 00e6 636D     		ldr	r3, [r4, #84]
 4595 00e8 43F04003 		orr	r3, r3, #64
 4596 00ec 6365     		str	r3, [r4, #84]
 4597 00ee 02E0     		b	.L349
ARM GAS  /tmp/cc9tM1KX.s 			page 161


 4598              	.LVL365:
 4599              	.L356:
2441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4600              		.loc 1 2441 0
 4601 00f0 2046     		mov	r0, r4
 4602 00f2 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4603              	.LVL366:
 4604              	.L349:
2447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4605              		.loc 1 2447 0
 4606 00f6 04B0     		add	sp, sp, #16
 4607              	.LCFI61:
 4608              		.cfi_def_cfa_offset 8
 4609              		@ sp needed
 4610 00f8 10BD     		pop	{r4, pc}
 4611              	.LVL367:
 4612              	.L360:
 4613 00fa 00BF     		.align	2
 4614              	.L359:
 4615 00fc 00000000 		.word	SPI_DMAAbortOnError
 4616              		.cfi_endproc
 4617              	.LFE90:
 4619              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 4620              		.align	2
 4621              		.thumb
 4622              		.thumb_func
 4624              	SPI_DMAAbortOnError:
 4625              	.LFB108:
2926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4626              		.loc 1 2926 0
 4627              		.cfi_startproc
 4628              		@ args = 0, pretend = 0, frame = 0
 4629              		@ frame_needed = 0, uses_anonymous_args = 0
 4630              	.LVL368:
 4631 0000 08B5     		push	{r3, lr}
 4632              	.LCFI62:
 4633              		.cfi_def_cfa_offset 8
 4634              		.cfi_offset 3, -8
 4635              		.cfi_offset 14, -4
2927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 4636              		.loc 1 2927 0
 4637 0002 406A     		ldr	r0, [r0, #36]
 4638              	.LVL369:
2928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4639              		.loc 1 2928 0
 4640 0004 0023     		movs	r3, #0
 4641 0006 C387     		strh	r3, [r0, #62]	@ movhi
2929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4642              		.loc 1 2929 0
 4643 0008 C386     		strh	r3, [r0, #54]	@ movhi
2935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4644              		.loc 1 2935 0
 4645 000a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4646              	.LVL370:
 4647 000e 08BD     		pop	{r3, pc}
 4648              		.cfi_endproc
 4649              	.LFE108:
ARM GAS  /tmp/cc9tM1KX.s 			page 162


 4651              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4652              		.align	2
 4653              		.weak	HAL_SPI_AbortCpltCallback
 4654              		.thumb
 4655              		.thumb_func
 4657              	HAL_SPI_AbortCpltCallback:
 4658              	.LFB98:
2570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4659              		.loc 1 2570 0
 4660              		.cfi_startproc
 4661              		@ args = 0, pretend = 0, frame = 0
 4662              		@ frame_needed = 0, uses_anonymous_args = 0
 4663              		@ link register save eliminated.
 4664              	.LVL371:
 4665 0000 7047     		bx	lr
 4666              		.cfi_endproc
 4667              	.LFE98:
 4669 0002 00BF     		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 4670              		.align	2
 4671              		.global	HAL_SPI_Abort_IT
 4672              		.thumb
 4673              		.thumb_func
 4675              	HAL_SPI_Abort_IT:
 4676              	.LFB86:
2099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4677              		.loc 1 2099 0
 4678              		.cfi_startproc
 4679              		@ args = 0, pretend = 0, frame = 16
 4680              		@ frame_needed = 0, uses_anonymous_args = 0
 4681              	.LVL372:
2099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4682              		.loc 1 2099 0
 4683 0000 30B5     		push	{r4, r5, lr}
 4684              	.LCFI63:
 4685              		.cfi_def_cfa_offset 12
 4686              		.cfi_offset 4, -12
 4687              		.cfi_offset 5, -8
 4688              		.cfi_offset 14, -4
 4689 0002 85B0     		sub	sp, sp, #20
 4690              	.LCFI64:
 4691              		.cfi_def_cfa_offset 32
 4692 0004 0446     		mov	r4, r0
 4693              	.LVL373:
2108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
 4694              		.loc 1 2108 0
 4695 0006 4E4B     		ldr	r3, .L388
 4696 0008 1B68     		ldr	r3, [r3]
 4697 000a 4E4A     		ldr	r2, .L388+4
 4698 000c A2FB0323 		umull	r2, r3, r2, r3
 4699 0010 5B0A     		lsrs	r3, r3, #9
 4700 0012 6422     		movs	r2, #100
 4701 0014 02FB03F3 		mul	r3, r2, r3
 4702 0018 0293     		str	r3, [sp, #8]
2109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4703              		.loc 1 2109 0
 4704 001a 029B     		ldr	r3, [sp, #8]
 4705 001c 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cc9tM1KX.s 			page 163


2112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4706              		.loc 1 2112 0
 4707 001e 0268     		ldr	r2, [r0]
 4708 0020 5368     		ldr	r3, [r2, #4]
 4709 0022 23F02003 		bic	r3, r3, #32
 4710 0026 5360     		str	r3, [r2, #4]
2115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4711              		.loc 1 2115 0
 4712 0028 0268     		ldr	r2, [r0]
 4713 002a 5368     		ldr	r3, [r2, #4]
 4714 002c 13F0800F 		tst	r3, #128
 4715 0030 12D0     		beq	.L365
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4716              		.loc 1 2117 0
 4717 0032 454B     		ldr	r3, .L388+8
 4718 0034 4364     		str	r3, [r0, #68]
 4719              	.L368:
2121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4720              		.loc 1 2121 0
 4721 0036 039B     		ldr	r3, [sp, #12]
 4722 0038 23B9     		cbnz	r3, .L366
2123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 4723              		.loc 1 2123 0
 4724 003a 636D     		ldr	r3, [r4, #84]
 4725 003c 43F04003 		orr	r3, r3, #64
 4726 0040 6365     		str	r3, [r4, #84]
2124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4727              		.loc 1 2124 0
 4728 0042 07E0     		b	.L367
 4729              	.L366:
2126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4730              		.loc 1 2126 0
 4731 0044 039B     		ldr	r3, [sp, #12]
 4732 0046 013B     		subs	r3, r3, #1
 4733 0048 0393     		str	r3, [sp, #12]
2127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 4734              		.loc 1 2127 0
 4735 004a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4736 004e DBB2     		uxtb	r3, r3
 4737 0050 072B     		cmp	r3, #7
 4738 0052 F0D1     		bne	.L368
 4739              	.L367:
2129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4740              		.loc 1 2129 0
 4741 0054 029B     		ldr	r3, [sp, #8]
 4742 0056 0393     		str	r3, [sp, #12]
 4743              	.L365:
2132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4744              		.loc 1 2132 0
 4745 0058 5368     		ldr	r3, [r2, #4]
 4746 005a 13F0400F 		tst	r3, #64
 4747 005e 12D0     		beq	.L369
2134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4748              		.loc 1 2134 0
 4749 0060 3A4B     		ldr	r3, .L388+12
 4750 0062 2364     		str	r3, [r4, #64]
 4751              	.L372:
ARM GAS  /tmp/cc9tM1KX.s 			page 164


2138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4752              		.loc 1 2138 0
 4753 0064 039B     		ldr	r3, [sp, #12]
 4754 0066 23B9     		cbnz	r3, .L370
2140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 4755              		.loc 1 2140 0
 4756 0068 636D     		ldr	r3, [r4, #84]
 4757 006a 43F04003 		orr	r3, r3, #64
 4758 006e 6365     		str	r3, [r4, #84]
2141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4759              		.loc 1 2141 0
 4760 0070 07E0     		b	.L371
 4761              	.L370:
2143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4762              		.loc 1 2143 0
 4763 0072 039B     		ldr	r3, [sp, #12]
 4764 0074 013B     		subs	r3, r3, #1
 4765 0076 0393     		str	r3, [sp, #12]
2144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 4766              		.loc 1 2144 0
 4767 0078 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4768 007c DBB2     		uxtb	r3, r3
 4769 007e 072B     		cmp	r3, #7
 4770 0080 F0D1     		bne	.L372
 4771              	.L371:
2146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4772              		.loc 1 2146 0
 4773 0082 029B     		ldr	r3, [sp, #8]
 4774 0084 0393     		str	r3, [sp, #12]
 4775              	.L369:
2152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4776              		.loc 1 2152 0
 4777 0086 A36C     		ldr	r3, [r4, #72]
 4778 0088 43B1     		cbz	r3, .L373
2156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4779              		.loc 1 2156 0
 4780 008a 5268     		ldr	r2, [r2, #4]
 4781 008c 12F0020F 		tst	r2, #2
 4782 0090 02D0     		beq	.L374
2158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4783              		.loc 1 2158 0
 4784 0092 2F4A     		ldr	r2, .L388+16
 4785 0094 5A63     		str	r2, [r3, #52]
 4786 0096 01E0     		b	.L373
 4787              	.L374:
2162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4788              		.loc 1 2162 0
 4789 0098 0022     		movs	r2, #0
 4790 009a 5A63     		str	r2, [r3, #52]
 4791              	.L373:
2166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4792              		.loc 1 2166 0
 4793 009c E36C     		ldr	r3, [r4, #76]
 4794 009e 4BB1     		cbz	r3, .L375
2170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4795              		.loc 1 2170 0
 4796 00a0 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc9tM1KX.s 			page 165


 4797 00a2 5268     		ldr	r2, [r2, #4]
 4798 00a4 12F0010F 		tst	r2, #1
 4799 00a8 02D0     		beq	.L376
2172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4800              		.loc 1 2172 0
 4801 00aa 2A4A     		ldr	r2, .L388+20
 4802 00ac 5A63     		str	r2, [r3, #52]
 4803 00ae 01E0     		b	.L375
 4804              	.L376:
2176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4805              		.loc 1 2176 0
 4806 00b0 0022     		movs	r2, #0
 4807 00b2 5A63     		str	r2, [r3, #52]
 4808              	.L375:
2181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4809              		.loc 1 2181 0
 4810 00b4 2368     		ldr	r3, [r4]
 4811 00b6 5B68     		ldr	r3, [r3, #4]
 4812 00b8 13F0020F 		tst	r3, #2
 4813 00bc 0BD0     		beq	.L381
2184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4814              		.loc 1 2184 0
 4815 00be A06C     		ldr	r0, [r4, #72]
 4816              	.LVL374:
 4817 00c0 58B1     		cbz	r0, .L382
2187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4818              		.loc 1 2187 0
 4819 00c2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4820              	.LVL375:
 4821 00c6 50B1     		cbz	r0, .L383
2189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4822              		.loc 1 2189 0
 4823 00c8 A36C     		ldr	r3, [r4, #72]
 4824 00ca 0022     		movs	r2, #0
 4825 00cc 5A63     		str	r2, [r3, #52]
2190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4826              		.loc 1 2190 0
 4827 00ce 4023     		movs	r3, #64
 4828 00d0 6365     		str	r3, [r4, #84]
2107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 4829              		.loc 1 2107 0
 4830 00d2 0125     		movs	r5, #1
 4831 00d4 04E0     		b	.L377
 4832              	.LVL376:
 4833              	.L381:
 4834 00d6 0125     		movs	r5, #1
 4835 00d8 02E0     		b	.L377
 4836              	.LVL377:
 4837              	.L382:
 4838 00da 0125     		movs	r5, #1
 4839 00dc 00E0     		b	.L377
 4840              	.L383:
2194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4841              		.loc 1 2194 0
 4842 00de 0025     		movs	r5, #0
 4843              	.L377:
 4844              	.LVL378:
ARM GAS  /tmp/cc9tM1KX.s 			page 166


2199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4845              		.loc 1 2199 0
 4846 00e0 2368     		ldr	r3, [r4]
 4847 00e2 5B68     		ldr	r3, [r3, #4]
 4848 00e4 13F0010F 		tst	r3, #1
 4849 00e8 0BD0     		beq	.L378
2202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4850              		.loc 1 2202 0
 4851 00ea E06C     		ldr	r0, [r4, #76]
 4852 00ec 48B1     		cbz	r0, .L378
2205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4853              		.loc 1 2205 0
 4854 00ee FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4855              	.LVL379:
 4856 00f2 28B1     		cbz	r0, .L384
2207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4857              		.loc 1 2207 0
 4858 00f4 E36C     		ldr	r3, [r4, #76]
 4859 00f6 0022     		movs	r2, #0
 4860 00f8 5A63     		str	r2, [r3, #52]
2208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4861              		.loc 1 2208 0
 4862 00fa 4023     		movs	r3, #64
 4863 00fc 6365     		str	r3, [r4, #84]
 4864 00fe 00E0     		b	.L378
 4865              	.L384:
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4866              		.loc 1 2212 0
 4867 0100 0025     		movs	r5, #0
 4868              	.LVL380:
 4869              	.L378:
2217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4870              		.loc 1 2217 0
 4871 0102 C5B1     		cbz	r5, .L385
2220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 4872              		.loc 1 2220 0
 4873 0104 0023     		movs	r3, #0
 4874 0106 E387     		strh	r3, [r4, #62]	@ movhi
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4875              		.loc 1 2221 0
 4876 0108 E386     		strh	r3, [r4, #54]	@ movhi
2224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4877              		.loc 1 2224 0
 4878 010a 636D     		ldr	r3, [r4, #84]
 4879 010c 402B     		cmp	r3, #64
 4880 010e 02D0     		beq	.L386
2232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4881              		.loc 1 2232 0
 4882 0110 0025     		movs	r5, #0
 4883              	.LVL381:
 4884 0112 6565     		str	r5, [r4, #84]
 4885 0114 00E0     		b	.L380
 4886              	.LVL382:
 4887              	.L386:
2227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4888              		.loc 1 2227 0
 4889 0116 0125     		movs	r5, #1
ARM GAS  /tmp/cc9tM1KX.s 			page 167


 4890              	.LVL383:
 4891              	.L380:
 4892              	.LBB12:
2236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 4893              		.loc 1 2236 0
 4894 0118 0023     		movs	r3, #0
 4895 011a 0193     		str	r3, [sp, #4]
 4896 011c 2368     		ldr	r3, [r4]
 4897 011e DA68     		ldr	r2, [r3, #12]
 4898 0120 0192     		str	r2, [sp, #4]
 4899 0122 9B68     		ldr	r3, [r3, #8]
 4900 0124 0193     		str	r3, [sp, #4]
 4901 0126 019B     		ldr	r3, [sp, #4]
 4902              	.LBE12:
2242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4903              		.loc 1 2242 0
 4904 0128 0123     		movs	r3, #1
 4905 012a 84F85130 		strb	r3, [r4, #81]
2248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4906              		.loc 1 2248 0
 4907 012e 2046     		mov	r0, r4
 4908 0130 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4909              	.LVL384:
 4910 0134 00E0     		b	.L379
 4911              	.LVL385:
 4912              	.L385:
2106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   abortcplt = 1U;
 4913              		.loc 1 2106 0
 4914 0136 0025     		movs	r5, #0
 4915              	.LVL386:
 4916              	.L379:
2253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4917              		.loc 1 2253 0
 4918 0138 2846     		mov	r0, r5
 4919 013a 05B0     		add	sp, sp, #20
 4920              	.LCFI65:
 4921              		.cfi_def_cfa_offset 12
 4922              		@ sp needed
 4923 013c 30BD     		pop	{r4, r5, pc}
 4924              	.LVL387:
 4925              	.L389:
 4926 013e 00BF     		.align	2
 4927              	.L388:
 4928 0140 00000000 		.word	SystemCoreClock
 4929 0144 F1197605 		.word	91625969
 4930 0148 00000000 		.word	SPI_AbortTx_ISR
 4931 014c 00000000 		.word	SPI_AbortRx_ISR
 4932 0150 00000000 		.word	SPI_DMATxAbortCallback
 4933 0154 00000000 		.word	SPI_DMARxAbortCallback
 4934              		.cfi_endproc
 4935              	.LFE86:
 4937              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 4938              		.align	2
 4939              		.thumb
 4940              		.thumb_func
 4942              	SPI_DMARxAbortCallback:
 4943              	.LFB110:
ARM GAS  /tmp/cc9tM1KX.s 			page 168


3015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4944              		.loc 1 3015 0
 4945              		.cfi_startproc
 4946              		@ args = 0, pretend = 0, frame = 8
 4947              		@ frame_needed = 0, uses_anonymous_args = 0
 4948              	.LVL388:
 4949 0000 10B5     		push	{r4, lr}
 4950              	.LCFI66:
 4951              		.cfi_def_cfa_offset 8
 4952              		.cfi_offset 4, -8
 4953              		.cfi_offset 14, -4
 4954 0002 82B0     		sub	sp, sp, #8
 4955              	.LCFI67:
 4956              		.cfi_def_cfa_offset 16
3016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4957              		.loc 1 3016 0
 4958 0004 446A     		ldr	r4, [r0, #36]
 4959              	.LVL389:
3019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4960              		.loc 1 3019 0
 4961 0006 2268     		ldr	r2, [r4]
 4962 0008 1368     		ldr	r3, [r2]
 4963 000a 23F04003 		bic	r3, r3, #64
 4964 000e 1360     		str	r3, [r2]
3021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4965              		.loc 1 3021 0
 4966 0010 E36C     		ldr	r3, [r4, #76]
 4967 0012 0022     		movs	r2, #0
 4968 0014 5A63     		str	r2, [r3, #52]
3024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4969              		.loc 1 3024 0
 4970 0016 2268     		ldr	r2, [r4]
 4971 0018 5368     		ldr	r3, [r2, #4]
 4972 001a 23F00103 		bic	r3, r3, #1
 4973 001e 5360     		str	r3, [r2, #4]
3027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4974              		.loc 1 3027 0
 4975 0020 FFF7FEFF 		bl	HAL_GetTick
 4976              	.LVL390:
 4977 0024 0246     		mov	r2, r0
 4978 0026 6421     		movs	r1, #100
 4979 0028 2046     		mov	r0, r4
 4980 002a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4981              	.LVL391:
 4982 002e 18B1     		cbz	r0, .L391
3029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4983              		.loc 1 3029 0
 4984 0030 636D     		ldr	r3, [r4, #84]
 4985 0032 43F04003 		orr	r3, r3, #64
 4986 0036 6365     		str	r3, [r4, #84]
 4987              	.L391:
3033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4988              		.loc 1 3033 0
 4989 0038 A36C     		ldr	r3, [r4, #72]
 4990 003a 0BB1     		cbz	r3, .L392
3035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4991              		.loc 1 3035 0
ARM GAS  /tmp/cc9tM1KX.s 			page 169


 4992 003c 5B6B     		ldr	r3, [r3, #52]
 4993 003e ABB9     		cbnz	r3, .L390
 4994              	.L392:
3042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4995              		.loc 1 3042 0
 4996 0040 0023     		movs	r3, #0
 4997 0042 E387     		strh	r3, [r4, #62]	@ movhi
3043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4998              		.loc 1 3043 0
 4999 0044 E386     		strh	r3, [r4, #54]	@ movhi
3046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5000              		.loc 1 3046 0
 5001 0046 636D     		ldr	r3, [r4, #84]
 5002 0048 402B     		cmp	r3, #64
 5003 004a 01D0     		beq	.L394
3049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5004              		.loc 1 3049 0
 5005 004c 0023     		movs	r3, #0
 5006 004e 6365     		str	r3, [r4, #84]
 5007              	.L394:
 5008              	.LBB13:
3053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 5009              		.loc 1 3053 0
 5010 0050 0023     		movs	r3, #0
 5011 0052 0193     		str	r3, [sp, #4]
 5012 0054 2368     		ldr	r3, [r4]
 5013 0056 DA68     		ldr	r2, [r3, #12]
 5014 0058 0192     		str	r2, [sp, #4]
 5015 005a 9B68     		ldr	r3, [r3, #8]
 5016 005c 0193     		str	r3, [sp, #4]
 5017 005e 019B     		ldr	r3, [sp, #4]
 5018              	.LBE13:
3059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5019              		.loc 1 3059 0
 5020 0060 0123     		movs	r3, #1
 5021 0062 84F85130 		strb	r3, [r4, #81]
3065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5022              		.loc 1 3065 0
 5023 0066 2046     		mov	r0, r4
 5024 0068 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5025              	.LVL392:
 5026              	.L390:
3067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5027              		.loc 1 3067 0
 5028 006c 02B0     		add	sp, sp, #8
 5029              	.LCFI68:
 5030              		.cfi_def_cfa_offset 8
 5031              		@ sp needed
 5032 006e 10BD     		pop	{r4, pc}
 5033              		.cfi_endproc
 5034              	.LFE110:
 5036              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5037              		.align	2
 5038              		.thumb
 5039              		.thumb_func
 5041              	SPI_DMATxAbortCallback:
 5042              	.LFB109:
ARM GAS  /tmp/cc9tM1KX.s 			page 170


2948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5043              		.loc 1 2948 0
 5044              		.cfi_startproc
 5045              		@ args = 0, pretend = 0, frame = 8
 5046              		@ frame_needed = 0, uses_anonymous_args = 0
 5047              	.LVL393:
 5048 0000 00B5     		push	{lr}
 5049              	.LCFI69:
 5050              		.cfi_def_cfa_offset 4
 5051              		.cfi_offset 14, -4
 5052 0002 83B0     		sub	sp, sp, #12
 5053              	.LCFI70:
 5054              		.cfi_def_cfa_offset 16
2949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
 5055              		.loc 1 2949 0
 5056 0004 406A     		ldr	r0, [r0, #36]
 5057              	.LVL394:
2952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5058              		.loc 1 2952 0
 5059 0006 836C     		ldr	r3, [r0, #72]
 5060 0008 0022     		movs	r2, #0
 5061 000a 5A63     		str	r2, [r3, #52]
2953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5062              		.loc 1 2953 0
 5063 000c 1C4B     		ldr	r3, .L404
 5064 000e 1B68     		ldr	r3, [r3]
 5065 0010 1C4A     		ldr	r2, .L404+4
 5066 0012 A2FB0323 		umull	r2, r3, r2, r3
 5067 0016 5B0A     		lsrs	r3, r3, #9
 5068 0018 6422     		movs	r2, #100
 5069 001a 02FB03F3 		mul	r3, r2, r3
 5070 001e 0193     		str	r3, [sp, #4]
2956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5071              		.loc 1 2956 0
 5072 0020 0268     		ldr	r2, [r0]
 5073 0022 5368     		ldr	r3, [r2, #4]
 5074 0024 23F00203 		bic	r3, r3, #2
 5075 0028 5360     		str	r3, [r2, #4]
 5076              	.L399:
2961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5077              		.loc 1 2961 0
 5078 002a 019B     		ldr	r3, [sp, #4]
 5079 002c 23B9     		cbnz	r3, .L397
2963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 5080              		.loc 1 2963 0
 5081 002e 436D     		ldr	r3, [r0, #84]
 5082 0030 43F04003 		orr	r3, r3, #64
 5083 0034 4365     		str	r3, [r0, #84]
2964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5084              		.loc 1 2964 0
 5085 0036 07E0     		b	.L398
 5086              	.L397:
2966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 5087              		.loc 1 2966 0
 5088 0038 019B     		ldr	r3, [sp, #4]
 5089 003a 013B     		subs	r3, r3, #1
 5090 003c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc9tM1KX.s 			page 171


2967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5091              		.loc 1 2967 0
 5092 003e 0368     		ldr	r3, [r0]
 5093 0040 9B68     		ldr	r3, [r3, #8]
 5094 0042 13F0020F 		tst	r3, #2
 5095 0046 F0D0     		beq	.L399
 5096              	.L398:
2970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5097              		.loc 1 2970 0
 5098 0048 C36C     		ldr	r3, [r0, #76]
 5099 004a 0BB1     		cbz	r3, .L400
2972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5100              		.loc 1 2972 0
 5101 004c 5B6B     		ldr	r3, [r3, #52]
 5102 004e A3B9     		cbnz	r3, .L396
 5103              	.L400:
2979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5104              		.loc 1 2979 0
 5105 0050 0023     		movs	r3, #0
 5106 0052 C387     		strh	r3, [r0, #62]	@ movhi
2980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5107              		.loc 1 2980 0
 5108 0054 C386     		strh	r3, [r0, #54]	@ movhi
2983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5109              		.loc 1 2983 0
 5110 0056 436D     		ldr	r3, [r0, #84]
 5111 0058 402B     		cmp	r3, #64
 5112 005a 01D0     		beq	.L402
2986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5113              		.loc 1 2986 0
 5114 005c 0023     		movs	r3, #0
 5115 005e 4365     		str	r3, [r0, #84]
 5116              	.L402:
 5117              	.LBB14:
2990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 5118              		.loc 1 2990 0
 5119 0060 0023     		movs	r3, #0
 5120 0062 0093     		str	r3, [sp]
 5121 0064 0368     		ldr	r3, [r0]
 5122 0066 DA68     		ldr	r2, [r3, #12]
 5123 0068 0092     		str	r2, [sp]
 5124 006a 9B68     		ldr	r3, [r3, #8]
 5125 006c 0093     		str	r3, [sp]
 5126 006e 009B     		ldr	r3, [sp]
 5127              	.LBE14:
2996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5128              		.loc 1 2996 0
 5129 0070 0123     		movs	r3, #1
 5130 0072 80F85130 		strb	r3, [r0, #81]
3002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5131              		.loc 1 3002 0
 5132 0076 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5133              	.LVL395:
 5134              	.L396:
3004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5135              		.loc 1 3004 0
 5136 007a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/cc9tM1KX.s 			page 172


 5137              	.LCFI71:
 5138              		.cfi_def_cfa_offset 4
 5139              		@ sp needed
 5140 007c 5DF804FB 		ldr	pc, [sp], #4
 5141              	.L405:
 5142              		.align	2
 5143              	.L404:
 5144 0080 00000000 		.word	SystemCoreClock
 5145 0084 F1197605 		.word	91625969
 5146              		.cfi_endproc
 5147              	.LFE109:
 5149              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5150              		.align	2
 5151              		.global	HAL_SPI_GetState
 5152              		.thumb
 5153              		.thumb_func
 5155              	HAL_SPI_GetState:
 5156              	.LFB99:
2605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI handle state */
 5157              		.loc 1 2605 0
 5158              		.cfi_startproc
 5159              		@ args = 0, pretend = 0, frame = 0
 5160              		@ frame_needed = 0, uses_anonymous_args = 0
 5161              		@ link register save eliminated.
 5162              	.LVL396:
2607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 5163              		.loc 1 2607 0
 5164 0000 90F85100 		ldrb	r0, [r0, #81]	@ zero_extendqisi2
 5165              	.LVL397:
2608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5166              		.loc 1 2608 0
 5167 0004 7047     		bx	lr
 5168              		.cfi_endproc
 5169              	.LFE99:
 5171 0006 00BF     		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5172              		.align	2
 5173              		.global	HAL_SPI_GetError
 5174              		.thumb
 5175              		.thumb_func
 5177              	HAL_SPI_GetError:
 5178              	.LFB100:
2617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI ErrorCode */
 5179              		.loc 1 2617 0
 5180              		.cfi_startproc
 5181              		@ args = 0, pretend = 0, frame = 0
 5182              		@ frame_needed = 0, uses_anonymous_args = 0
 5183              		@ link register save eliminated.
 5184              	.LVL398:
2619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 5185              		.loc 1 2619 0
 5186 0000 406D     		ldr	r0, [r0, #84]
 5187              	.LVL399:
2620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5188              		.loc 1 2620 0
 5189 0002 7047     		bx	lr
 5190              		.cfi_endproc
 5191              	.LFE100:
ARM GAS  /tmp/cc9tM1KX.s 			page 173


 5193              		.text
 5194              	.Letext0:
 5195              		.file 2 "/usr/bin/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 5196              		.file 3 "/usr/bin/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 5197              		.file 4 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xba.h"
 5198              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 5199              		.file 6 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 5200              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 5201              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_spi.h"
 5202              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 5203              		.file 10 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 5204              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
ARM GAS  /tmp/cc9tM1KX.s 			page 174


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l1xx_hal_spi.c
     /tmp/cc9tM1KX.s:20     .text.SPI_AbortRx_ISR:00000000 $t
     /tmp/cc9tM1KX.s:24     .text.SPI_AbortRx_ISR:00000000 SPI_AbortRx_ISR
     /tmp/cc9tM1KX.s:91     .text.SPI_AbortRx_ISR:00000058 $d
     /tmp/cc9tM1KX.s:97     .text.SPI_AbortTx_ISR:00000000 $t
     /tmp/cc9tM1KX.s:101    .text.SPI_AbortTx_ISR:00000000 SPI_AbortTx_ISR
     /tmp/cc9tM1KX.s:127    .text.SPI_WaitFlagStateUntilTimeout:00000000 $t
     /tmp/cc9tM1KX.s:131    .text.SPI_WaitFlagStateUntilTimeout:00000000 SPI_WaitFlagStateUntilTimeout
     /tmp/cc9tM1KX.s:233    .text.SPI_EndRxTxTransaction:00000000 $t
     /tmp/cc9tM1KX.s:237    .text.SPI_EndRxTxTransaction:00000000 SPI_EndRxTxTransaction
     /tmp/cc9tM1KX.s:320    .text.SPI_EndRxTransaction:00000000 $t
     /tmp/cc9tM1KX.s:324    .text.SPI_EndRxTransaction:00000000 SPI_EndRxTransaction
     /tmp/cc9tM1KX.s:439    .text.HAL_SPI_MspInit:00000000 $t
     /tmp/cc9tM1KX.s:444    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
     /tmp/cc9tM1KX.s:457    .text.HAL_SPI_Init:00000000 $t
     /tmp/cc9tM1KX.s:462    .text.HAL_SPI_Init:00000000 HAL_SPI_Init
     /tmp/cc9tM1KX.s:549    .text.HAL_SPI_MspDeInit:00000000 $t
     /tmp/cc9tM1KX.s:554    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
     /tmp/cc9tM1KX.s:567    .text.HAL_SPI_DeInit:00000000 $t
     /tmp/cc9tM1KX.s:572    .text.HAL_SPI_DeInit:00000000 HAL_SPI_DeInit
     /tmp/cc9tM1KX.s:622    .text.HAL_SPI_Transmit:00000000 $t
     /tmp/cc9tM1KX.s:627    .text.HAL_SPI_Transmit:00000000 HAL_SPI_Transmit
     /tmp/cc9tM1KX.s:945    .text.HAL_SPI_TransmitReceive:00000000 $t
     /tmp/cc9tM1KX.s:950    .text.HAL_SPI_TransmitReceive:00000000 HAL_SPI_TransmitReceive
     /tmp/cc9tM1KX.s:1393   .text.HAL_SPI_Receive:00000000 $t
     /tmp/cc9tM1KX.s:1398   .text.HAL_SPI_Receive:00000000 HAL_SPI_Receive
     /tmp/cc9tM1KX.s:1673   .text.HAL_SPI_Transmit_IT:00000000 $t
     /tmp/cc9tM1KX.s:1678   .text.HAL_SPI_Transmit_IT:00000000 HAL_SPI_Transmit_IT
     /tmp/cc9tM1KX.s:1800   .text.HAL_SPI_Transmit_IT:00000094 $d
     /tmp/cc9tM1KX.s:3566   .text.SPI_TxISR_16BIT:00000000 SPI_TxISR_16BIT
     /tmp/cc9tM1KX.s:3522   .text.SPI_TxISR_8BIT:00000000 SPI_TxISR_8BIT
     /tmp/cc9tM1KX.s:1806   .text.HAL_SPI_TransmitReceive_IT:00000000 $t
     /tmp/cc9tM1KX.s:1811   .text.HAL_SPI_TransmitReceive_IT:00000000 HAL_SPI_TransmitReceive_IT
     /tmp/cc9tM1KX.s:1987   .text.HAL_SPI_TransmitReceive_IT:000000b8 $d
     /tmp/cc9tM1KX.s:4073   .text.SPI_2linesRxISR_16BIT:00000000 SPI_2linesRxISR_16BIT
     /tmp/cc9tM1KX.s:4020   .text.SPI_2linesTxISR_16BIT:00000000 SPI_2linesTxISR_16BIT
     /tmp/cc9tM1KX.s:3967   .text.SPI_2linesRxISR_8BIT:00000000 SPI_2linesRxISR_8BIT
     /tmp/cc9tM1KX.s:3914   .text.SPI_2linesTxISR_8BIT:00000000 SPI_2linesTxISR_8BIT
     /tmp/cc9tM1KX.s:1995   .text.HAL_SPI_Receive_IT:00000000 $t
     /tmp/cc9tM1KX.s:2000   .text.HAL_SPI_Receive_IT:00000000 HAL_SPI_Receive_IT
     /tmp/cc9tM1KX.s:2147   .text.HAL_SPI_Receive_IT:000000b0 $d
     /tmp/cc9tM1KX.s:3734   .text.SPI_RxISR_16BIT:00000000 SPI_RxISR_16BIT
     /tmp/cc9tM1KX.s:3690   .text.SPI_RxISR_8BIT:00000000 SPI_RxISR_8BIT
     /tmp/cc9tM1KX.s:2153   .text.HAL_SPI_Transmit_DMA:00000000 $t
     /tmp/cc9tM1KX.s:2158   .text.HAL_SPI_Transmit_DMA:00000000 HAL_SPI_Transmit_DMA
     /tmp/cc9tM1KX.s:2324   .text.HAL_SPI_Transmit_DMA:000000cc $d
     /tmp/cc9tM1KX.s:3264   .text.SPI_DMAHalfTransmitCplt:00000000 SPI_DMAHalfTransmitCplt
     /tmp/cc9tM1KX.s:4165   .text.SPI_DMATransmitCplt:00000000 SPI_DMATransmitCplt
     /tmp/cc9tM1KX.s:4126   .text.SPI_DMAError:00000000 SPI_DMAError
     /tmp/cc9tM1KX.s:2331   .text.HAL_SPI_TransmitReceive_DMA:00000000 $t
     /tmp/cc9tM1KX.s:2336   .text.HAL_SPI_TransmitReceive_DMA:00000000 HAL_SPI_TransmitReceive_DMA
     /tmp/cc9tM1KX.s:2596   .text.HAL_SPI_TransmitReceive_DMA:0000013c $d
     /tmp/cc9tM1KX.s:3310   .text.SPI_DMAHalfReceiveCplt:00000000 SPI_DMAHalfReceiveCplt
     /tmp/cc9tM1KX.s:4265   .text.SPI_DMAReceiveCplt:00000000 SPI_DMAReceiveCplt
     /tmp/cc9tM1KX.s:3356   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/cc9tM1KX.s:4343   .text.SPI_DMATransmitReceiveCplt:00000000 SPI_DMATransmitReceiveCplt
ARM GAS  /tmp/cc9tM1KX.s 			page 175


     /tmp/cc9tM1KX.s:2605   .text.HAL_SPI_Receive_DMA:00000000 $t
     /tmp/cc9tM1KX.s:2610   .text.HAL_SPI_Receive_DMA:00000000 HAL_SPI_Receive_DMA
     /tmp/cc9tM1KX.s:2787   .text.HAL_SPI_Receive_DMA:000000e4 $d
     /tmp/cc9tM1KX.s:2794   .text.HAL_SPI_Abort:00000000 $t
     /tmp/cc9tM1KX.s:2799   .text.HAL_SPI_Abort:00000000 HAL_SPI_Abort
     /tmp/cc9tM1KX.s:3017   .text.HAL_SPI_Abort:0000012c $d
     /tmp/cc9tM1KX.s:3025   .text.HAL_SPI_DMAPause:00000000 $t
     /tmp/cc9tM1KX.s:3030   .text.HAL_SPI_DMAPause:00000000 HAL_SPI_DMAPause
     /tmp/cc9tM1KX.s:3068   .text.HAL_SPI_DMAResume:00000000 $t
     /tmp/cc9tM1KX.s:3073   .text.HAL_SPI_DMAResume:00000000 HAL_SPI_DMAResume
     /tmp/cc9tM1KX.s:3111   .text.HAL_SPI_DMAStop:00000000 $t
     /tmp/cc9tM1KX.s:3116   .text.HAL_SPI_DMAStop:00000000 HAL_SPI_DMAStop
     /tmp/cc9tM1KX.s:3188   .text.HAL_SPI_TxCpltCallback:00000000 $t
     /tmp/cc9tM1KX.s:3193   .text.HAL_SPI_TxCpltCallback:00000000 HAL_SPI_TxCpltCallback
     /tmp/cc9tM1KX.s:3206   .text.HAL_SPI_RxCpltCallback:00000000 $t
     /tmp/cc9tM1KX.s:3211   .text.HAL_SPI_RxCpltCallback:00000000 HAL_SPI_RxCpltCallback
     /tmp/cc9tM1KX.s:3224   .text.HAL_SPI_TxRxCpltCallback:00000000 $t
     /tmp/cc9tM1KX.s:3229   .text.HAL_SPI_TxRxCpltCallback:00000000 HAL_SPI_TxRxCpltCallback
     /tmp/cc9tM1KX.s:3242   .text.HAL_SPI_TxHalfCpltCallback:00000000 $t
     /tmp/cc9tM1KX.s:3247   .text.HAL_SPI_TxHalfCpltCallback:00000000 HAL_SPI_TxHalfCpltCallback
     /tmp/cc9tM1KX.s:3260   .text.SPI_DMAHalfTransmitCplt:00000000 $t
     /tmp/cc9tM1KX.s:3288   .text.HAL_SPI_RxHalfCpltCallback:00000000 $t
     /tmp/cc9tM1KX.s:3293   .text.HAL_SPI_RxHalfCpltCallback:00000000 HAL_SPI_RxHalfCpltCallback
     /tmp/cc9tM1KX.s:3306   .text.SPI_DMAHalfReceiveCplt:00000000 $t
     /tmp/cc9tM1KX.s:3334   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 $t
     /tmp/cc9tM1KX.s:3339   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/cc9tM1KX.s:3352   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 $t
     /tmp/cc9tM1KX.s:3380   .text.HAL_SPI_ErrorCallback:00000000 $t
     /tmp/cc9tM1KX.s:3385   .text.HAL_SPI_ErrorCallback:00000000 HAL_SPI_ErrorCallback
     /tmp/cc9tM1KX.s:3398   .text.SPI_CloseTx_ISR:00000000 $t
     /tmp/cc9tM1KX.s:3402   .text.SPI_CloseTx_ISR:00000000 SPI_CloseTx_ISR
     /tmp/cc9tM1KX.s:3512   .text.SPI_CloseTx_ISR:00000088 $d
     /tmp/cc9tM1KX.s:3518   .text.SPI_TxISR_8BIT:00000000 $t
     /tmp/cc9tM1KX.s:3562   .text.SPI_TxISR_16BIT:00000000 $t
     /tmp/cc9tM1KX.s:3606   .text.SPI_CloseRx_ISR:00000000 $t
     /tmp/cc9tM1KX.s:3610   .text.SPI_CloseRx_ISR:00000000 SPI_CloseRx_ISR
     /tmp/cc9tM1KX.s:3686   .text.SPI_RxISR_8BIT:00000000 $t
     /tmp/cc9tM1KX.s:3730   .text.SPI_RxISR_16BIT:00000000 $t
     /tmp/cc9tM1KX.s:3774   .text.SPI_CloseRxTx_ISR:00000000 $t
     /tmp/cc9tM1KX.s:3778   .text.SPI_CloseRxTx_ISR:00000000 SPI_CloseRxTx_ISR
     /tmp/cc9tM1KX.s:3904   .text.SPI_CloseRxTx_ISR:000000a8 $d
     /tmp/cc9tM1KX.s:3910   .text.SPI_2linesTxISR_8BIT:00000000 $t
     /tmp/cc9tM1KX.s:3963   .text.SPI_2linesRxISR_8BIT:00000000 $t
     /tmp/cc9tM1KX.s:4016   .text.SPI_2linesTxISR_16BIT:00000000 $t
     /tmp/cc9tM1KX.s:4069   .text.SPI_2linesRxISR_16BIT:00000000 $t
     /tmp/cc9tM1KX.s:4122   .text.SPI_DMAError:00000000 $t
     /tmp/cc9tM1KX.s:4161   .text.SPI_DMATransmitCplt:00000000 $t
     /tmp/cc9tM1KX.s:4261   .text.SPI_DMAReceiveCplt:00000000 $t
     /tmp/cc9tM1KX.s:4339   .text.SPI_DMATransmitReceiveCplt:00000000 $t
     /tmp/cc9tM1KX.s:4420   .text.HAL_SPI_IRQHandler:00000000 $t
     /tmp/cc9tM1KX.s:4425   .text.HAL_SPI_IRQHandler:00000000 HAL_SPI_IRQHandler
     /tmp/cc9tM1KX.s:4615   .text.HAL_SPI_IRQHandler:000000fc $d
     /tmp/cc9tM1KX.s:4624   .text.SPI_DMAAbortOnError:00000000 SPI_DMAAbortOnError
     /tmp/cc9tM1KX.s:4620   .text.SPI_DMAAbortOnError:00000000 $t
     /tmp/cc9tM1KX.s:4652   .text.HAL_SPI_AbortCpltCallback:00000000 $t
     /tmp/cc9tM1KX.s:4657   .text.HAL_SPI_AbortCpltCallback:00000000 HAL_SPI_AbortCpltCallback
     /tmp/cc9tM1KX.s:4670   .text.HAL_SPI_Abort_IT:00000000 $t
ARM GAS  /tmp/cc9tM1KX.s 			page 176


     /tmp/cc9tM1KX.s:4675   .text.HAL_SPI_Abort_IT:00000000 HAL_SPI_Abort_IT
     /tmp/cc9tM1KX.s:4928   .text.HAL_SPI_Abort_IT:00000140 $d
     /tmp/cc9tM1KX.s:5041   .text.SPI_DMATxAbortCallback:00000000 SPI_DMATxAbortCallback
     /tmp/cc9tM1KX.s:4942   .text.SPI_DMARxAbortCallback:00000000 SPI_DMARxAbortCallback
     /tmp/cc9tM1KX.s:4938   .text.SPI_DMARxAbortCallback:00000000 $t
     /tmp/cc9tM1KX.s:5037   .text.SPI_DMATxAbortCallback:00000000 $t
     /tmp/cc9tM1KX.s:5144   .text.SPI_DMATxAbortCallback:00000080 $d
     /tmp/cc9tM1KX.s:5150   .text.HAL_SPI_GetState:00000000 $t
     /tmp/cc9tM1KX.s:5155   .text.HAL_SPI_GetState:00000000 HAL_SPI_GetState
     /tmp/cc9tM1KX.s:5172   .text.HAL_SPI_GetError:00000000 $t
     /tmp/cc9tM1KX.s:5177   .text.HAL_SPI_GetError:00000000 HAL_SPI_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
