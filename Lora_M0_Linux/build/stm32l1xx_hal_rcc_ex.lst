ARM GAS  /tmp/cc7LGOgG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32l1xx_hal_rcc_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_RCCEx_PeriphCLKConfig
  22              		.thumb
  23              		.thumb_func
  25              	HAL_RCCEx_PeriphCLKConfig:
  26              	.LFB72:
  27              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c"
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @file    stm32l1xx_hal_rcc_ex.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief   Extended RCC HAL module driver.
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *          functionalities RCC extension peripheral:
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *           + Extended Peripheral Control functions
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   ******************************************************************************
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @attention
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * <h2><center>&copy; Copyright(c) 2017 STMicroelectronics.
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * All rights reserved.</center></h2>
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * the "License"; You may not use this file except in compliance with the
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * License. You may obtain a copy of the License at:
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   ******************************************************************************
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /* Includes ------------------------------------------------------------------*/
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #include "stm32l1xx_hal.h"
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /** @addtogroup STM32L1xx_HAL_Driver
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @{
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #ifdef HAL_RCC_MODULE_ENABLED
ARM GAS  /tmp/cc7LGOgG.s 			page 2


  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /** @defgroup RCCEx RCCEx
  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief RCC Extension HAL module driver
  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @{
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /* Private define ------------------------------------------------------------*/
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Private_Constants RCCEx Private Constants
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @{
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @}
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /* Private macro -------------------------------------------------------------*/
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Private_Macros RCCEx Private Macros
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @{
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @}
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /* Private variables ---------------------------------------------------------*/
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /* Private functions ---------------------------------------------------------*/
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions RCCEx Exported Functions
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @{
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group1 Extended Peripheral Control functions
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****  *  @brief  Extended Peripheral Control functions
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****  *
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** @verbatim
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****  ===============================================================================
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****                 ##### Extended Peripheral Control functions  #####
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****  ===============================================================================
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     [..]
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     frequencies.
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     [..]
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     (@) Important note: Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         select the RTC clock source; in this case the Backup domain will be reset in
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         order to modify the RTC Clock source, as consequence RTC registers (including
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         the backup registers) are set to their reset values.
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** @endverbatim
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @{
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief  Initializes the RCC extended peripherals clocks according to the specified
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         parameters in the RCC_PeriphCLKInitTypeDef.
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         contains the configuration information for the Extended Peripherals clocks(RTC/LCD cloc
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @retval HAL status
ARM GAS  /tmp/cc7LGOgG.s 			page 3


  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @note   If HAL_ERROR returned, first switch-OFF HSE clock oscillator with @ref HAL_RCC_OscConfi
  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         to possibly update HSE divider.
  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** {
  28              		.loc 1 93 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t tickstart;
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t temp_reg;
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Check the parameters */
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /*------------------------------- RTC/LCD Configuration ------------------------*/
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
  33              		.loc 1 101 0
  34 0000 0368     		ldr	r3, [r0]
  35 0002 13F0010F 		tst	r3, #1
  36 0006 00F08680 		beq	.L12
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t tickstart;
  37              		.loc 1 93 0
  38 000a 70B5     		push	{r4, r5, r6, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
  45 000c 82B0     		sub	sp, sp, #8
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
  48              	.LVL1:
  49              	.LBB2:
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #if defined(LCD)
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****    || (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD)
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #endif /* LCD */
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****      )
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   {
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* check for RTC Parameters used to output RTCCLK */
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     {
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     }
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #if defined(LCD)
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD)
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     {
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->LCDClockSelection));
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     }
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #endif /* LCD */
 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     FlagStatus       pwrclkchanged = RESET;
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* As soon as function is called to change RTC clock source, activation of the
ARM GAS  /tmp/cc7LGOgG.s 			page 4


 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****        power domain is done. */
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* Requires to enable write access to Backup Domain of necessary */
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
  50              		.loc 1 125 0
  51 000e 474B     		ldr	r3, .L19
  52 0010 5B6A     		ldr	r3, [r3, #36]
  53 0012 13F0805F 		tst	r3, #268435456
  54 0016 0BD1     		bne	.L13
  55              	.LBB3:
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     {
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       __HAL_RCC_PWR_CLK_ENABLE();
  56              		.loc 1 127 0
  57 0018 444B     		ldr	r3, .L19
  58 001a 5A6A     		ldr	r2, [r3, #36]
  59 001c 42F08052 		orr	r2, r2, #268435456
  60 0020 5A62     		str	r2, [r3, #36]
  61 0022 5B6A     		ldr	r3, [r3, #36]
  62 0024 03F08053 		and	r3, r3, #268435456
  63 0028 0193     		str	r3, [sp, #4]
  64 002a 019B     		ldr	r3, [sp, #4]
  65              	.LVL2:
  66              	.LBE3:
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
  67              		.loc 1 128 0
  68 002c 0124     		movs	r4, #1
  69 002e 00E0     		b	.L3
  70              	.LVL3:
  71              	.L13:
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
  72              		.loc 1 120 0
  73 0030 0024     		movs	r4, #0
  74              	.LVL4:
  75              	.L3:
  76 0032 0546     		mov	r5, r0
  77              	.LVL5:
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     }
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
  78              		.loc 1 131 0
  79 0034 3E4B     		ldr	r3, .L19+4
  80 0036 1B68     		ldr	r3, [r3]
  81 0038 13F4807F 		tst	r3, #256
  82 003c 12D1     		bne	.L4
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     {
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* Enable write access to Backup domain */
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
  83              		.loc 1 134 0
  84 003e 3C4A     		ldr	r2, .L19+4
  85 0040 1368     		ldr	r3, [r2]
  86 0042 43F48073 		orr	r3, r3, #256
  87 0046 1360     		str	r3, [r2]
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* Wait for Backup domain Write protection disable */
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       tickstart = HAL_GetTick();
  88              		.loc 1 137 0
  89 0048 FFF7FEFF 		bl	HAL_GetTick
  90              	.LVL6:
ARM GAS  /tmp/cc7LGOgG.s 			page 5


  91 004c 0646     		mov	r6, r0
  92              	.LVL7:
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
  93              		.loc 1 139 0
  94 004e 04E0     		b	.L5
  95              	.LVL8:
  96              	.L6:
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       {
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
  97              		.loc 1 141 0
  98 0050 FFF7FEFF 		bl	HAL_GetTick
  99              	.LVL9:
 100 0054 801B     		subs	r0, r0, r6
 101 0056 6428     		cmp	r0, #100
 102 0058 5FD8     		bhi	.L14
 103              	.L5:
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       {
 104              		.loc 1 139 0
 105 005a 354B     		ldr	r3, .L19+4
 106 005c 1B68     		ldr	r3, [r3]
 107 005e 13F4807F 		tst	r3, #256
 108 0062 F5D0     		beq	.L6
 109              	.LVL10:
 110              	.L4:
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         {
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           return HAL_TIMEOUT;
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       }
 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     }
 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* Check if user wants to change HSE RTC prescaler whereas HSE is enabled */
 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     temp_reg = (RCC->CR & RCC_CR_RTCPRE);
 111              		.loc 1 149 0
 112 0064 314B     		ldr	r3, .L19
 113 0066 1B68     		ldr	r3, [r3]
 114 0068 03F0C043 		and	r3, r3, #1610612736
 115              	.LVL11:
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     if ((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CR_RTCPRE))
 116              		.loc 1 150 0
 117 006c 6A68     		ldr	r2, [r5, #4]
 118 006e 02F0C041 		and	r1, r2, #1610612736
 119 0072 8B42     		cmp	r3, r1
 120 0074 09D0     		beq	.L7
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #if defined (LCD)
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****      || (temp_reg != (PeriphClkInit->LCDClockSelection & RCC_CR_RTCPRE))
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #endif /* LCD */
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****        )
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     { /* Check HSE State */
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       if ((PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL) == RCC_CSR_RTCSEL_HSE)
 121              		.loc 1 156 0
 122 0076 02F44033 		and	r3, r2, #196608
 123              	.LVL12:
 124 007a B3F5403F 		cmp	r3, #196608
 125 007e 04D1     		bne	.L7
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       {
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
ARM GAS  /tmp/cc7LGOgG.s 			page 6


 126              		.loc 1 158 0
 127 0080 2A4B     		ldr	r3, .L19
 128 0082 1B68     		ldr	r3, [r3]
 129 0084 13F4003F 		tst	r3, #131072
 130 0088 49D1     		bne	.L15
 131              	.L7:
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         {
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           /* To update HSE divider, first switch-OFF HSE clock oscillator*/
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           return HAL_ERROR;
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       }
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     }
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     temp_reg = (RCC->CSR & RCC_CSR_RTCSEL);
 132              		.loc 1 167 0
 133 008a 284B     		ldr	r3, .L19
 134 008c 5B6B     		ldr	r3, [r3, #52]
 135              	.LVL13:
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     if((temp_reg != 0x00000000U) && (((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CSR_RTCS
 136              		.loc 1 169 0
 137 008e 13F44033 		ands	r3, r3, #196608
 138              	.LVL14:
 139 0092 24D0     		beq	.L8
 140              		.loc 1 169 0 is_stmt 0 discriminator 1
 141 0094 02F44032 		and	r2, r2, #196608
 142 0098 9342     		cmp	r3, r2
 143 009a 20D0     		beq	.L8
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC))
 144              		.loc 1 170 0 is_stmt 1
 145 009c 2B68     		ldr	r3, [r5]
 146              	.LVL15:
 147 009e 13F0010F 		tst	r3, #1
 148 00a2 1CD0     		beq	.L8
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #if defined(LCD)
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       || ((temp_reg != (PeriphClkInit->LCDClockSelection & RCC_CSR_RTCSEL)) \
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****        && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD))
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #endif /* LCD */
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****      ))
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     {
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* Store the content of CSR register before the reset of Backup Domain */
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       temp_reg = (RCC->CSR & ~(RCC_CSR_RTCSEL));
 149              		.loc 1 178 0
 150 00a4 214A     		ldr	r2, .L19
 151 00a6 536B     		ldr	r3, [r2, #52]
 152 00a8 23F44030 		bic	r0, r3, #196608
 153              	.LVL16:
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_FORCE();
 154              		.loc 1 181 0
 155 00ac 2149     		ldr	r1, .L19+8
 156 00ae 0126     		movs	r6, #1
 157 00b0 0E60     		str	r6, [r1]
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 158              		.loc 1 182 0
ARM GAS  /tmp/cc7LGOgG.s 			page 7


 159 00b2 0026     		movs	r6, #0
 160 00b4 0E60     		str	r6, [r1]
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* Restore the Content of CSR register */
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       RCC->CSR = temp_reg;
 161              		.loc 1 185 0
 162 00b6 5063     		str	r0, [r2, #52]
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****        /* Wait for LSERDY if LSE was enabled */
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       if (HAL_IS_BIT_SET(temp_reg, RCC_CSR_LSEON))
 163              		.loc 1 188 0
 164 00b8 13F4807F 		tst	r3, #256
 165 00bc 0FD0     		beq	.L8
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       {
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         /* Get Start Tick */
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
 166              		.loc 1 191 0
 167 00be FFF7FEFF 		bl	HAL_GetTick
 168              	.LVL17:
 169 00c2 0646     		mov	r6, r0
 170              	.LVL18:
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 171              		.loc 1 194 0
 172 00c4 06E0     		b	.L9
 173              	.LVL19:
 174              	.L10:
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         {
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 175              		.loc 1 196 0
 176 00c6 FFF7FEFF 		bl	HAL_GetTick
 177              	.LVL20:
 178 00ca 801B     		subs	r0, r0, r6
 179 00cc 41F28833 		movw	r3, #5000
 180 00d0 9842     		cmp	r0, r3
 181 00d2 26D8     		bhi	.L16
 182              	.L9:
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         {
 183              		.loc 1 194 0
 184 00d4 154B     		ldr	r3, .L19
 185 00d6 5B6B     		ldr	r3, [r3, #52]
 186 00d8 13F4007F 		tst	r3, #512
 187 00dc F3D0     		beq	.L10
 188              	.LVL21:
 189              	.L8:
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           {
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             return HAL_TIMEOUT;
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           }
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       }
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     }
 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 190              		.loc 1 203 0
 191 00de 6B68     		ldr	r3, [r5, #4]
 192 00e0 03F44032 		and	r2, r3, #196608
 193 00e4 B2F5403F 		cmp	r2, #196608
ARM GAS  /tmp/cc7LGOgG.s 			page 8


 194 00e8 07D1     		bne	.L11
 195              		.loc 1 203 0 is_stmt 0 discriminator 1
 196 00ea 1049     		ldr	r1, .L19
 197 00ec 0A68     		ldr	r2, [r1]
 198 00ee 22F0C042 		bic	r2, r2, #1610612736
 199 00f2 03F0C043 		and	r3, r3, #1610612736
 200 00f6 1343     		orrs	r3, r3, r2
 201 00f8 0B60     		str	r3, [r1]
 202              	.L11:
 203              		.loc 1 203 0 discriminator 3
 204 00fa 0C4A     		ldr	r2, .L19
 205 00fc 516B     		ldr	r1, [r2, #52]
 206 00fe 6B68     		ldr	r3, [r5, #4]
 207 0100 03F44033 		and	r3, r3, #196608
 208 0104 0B43     		orrs	r3, r3, r1
 209 0106 5363     		str	r3, [r2, #52]
 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* Require to disable power clock if necessary */
 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     if(pwrclkchanged == SET)
 210              		.loc 1 206 0 is_stmt 1 discriminator 3
 211 0108 6CB1     		cbz	r4, .L17
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     {
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 212              		.loc 1 208 0
 213 010a 536A     		ldr	r3, [r2, #36]
 214 010c 23F08053 		bic	r3, r3, #268435456
 215 0110 5362     		str	r3, [r2, #36]
 216              	.LBE2:
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     }
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   }
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   return HAL_OK;
 217              		.loc 1 212 0
 218 0112 0020     		movs	r0, #0
 219 0114 08E0     		b	.L2
 220              	.LVL22:
 221              	.L12:
 222              	.LCFI2:
 223              		.cfi_def_cfa_offset 0
 224              		.cfi_restore 4
 225              		.cfi_restore 5
 226              		.cfi_restore 6
 227              		.cfi_restore 14
 228 0116 0020     		movs	r0, #0
 229              	.LVL23:
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** }
 230              		.loc 1 213 0
 231 0118 7047     		bx	lr
 232              	.LVL24:
 233              	.L14:
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 24
 236              		.cfi_offset 4, -16
 237              		.cfi_offset 5, -12
 238              		.cfi_offset 6, -8
 239              		.cfi_offset 14, -4
 240              	.LBB4:
ARM GAS  /tmp/cc7LGOgG.s 			page 9


 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 241              		.loc 1 143 0
 242 011a 0320     		movs	r0, #3
 243 011c 04E0     		b	.L2
 244              	.LVL25:
 245              	.L15:
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 246              		.loc 1 161 0
 247 011e 0120     		movs	r0, #1
 248 0120 02E0     		b	.L2
 249              	.LVL26:
 250              	.L16:
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           }
 251              		.loc 1 198 0
 252 0122 0320     		movs	r0, #3
 253 0124 00E0     		b	.L2
 254              	.LVL27:
 255              	.L17:
 256              	.LBE4:
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** }
 257              		.loc 1 212 0
 258 0126 0020     		movs	r0, #0
 259              	.L2:
 260              		.loc 1 213 0
 261 0128 02B0     		add	sp, sp, #8
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 16
 264              		@ sp needed
 265 012a 70BD     		pop	{r4, r5, r6, pc}
 266              	.LVL28:
 267              	.L20:
 268              		.align	2
 269              	.L19:
 270 012c 00380240 		.word	1073887232
 271 0130 00700040 		.word	1073770496
 272 0134 DC064742 		.word	1111951068
 273              		.cfi_endproc
 274              	.LFE72:
 276              		.section	.text.HAL_RCCEx_GetPeriphCLKConfig,"ax",%progbits
 277              		.align	2
 278              		.global	HAL_RCCEx_GetPeriphCLKConfig
 279              		.thumb
 280              		.thumb_func
 282              	HAL_RCCEx_GetPeriphCLKConfig:
 283              	.LFB73:
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief  Get the PeriphClkInit according to the internal RCC configuration registers.
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         returns the configuration information for the Extended Peripherals clocks(RTC/LCD clock
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @retval None
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** {
 284              		.loc 1 222 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc7LGOgG.s 			page 10


 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289              	.LVL29:
 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t srcclk;
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_RTC;
 290              		.loc 1 226 0
 291 0000 0123     		movs	r3, #1
 292 0002 0360     		str	r3, [r0]
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #if defined(LCD)
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |= RCC_PERIPHCLK_LCD;
 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #endif /* LCD */
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Get the RTC/LCD configuration -----------------------------------------------*/
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   srcclk = __HAL_RCC_GET_RTC_SOURCE();
 293              		.loc 1 232 0
 294 0004 074B     		ldr	r3, .L24
 295 0006 5B6B     		ldr	r3, [r3, #52]
 296 0008 03F44033 		and	r3, r3, #196608
 297              	.LVL30:
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   if (srcclk != RCC_RTCCLKSOURCE_HSE_DIV2)
 298              		.loc 1 233 0
 299 000c B3F5403F 		cmp	r3, #196608
 300 0010 01D0     		beq	.L22
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   {
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* Source clock is LSE or LSI*/
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     PeriphClkInit->RTCClockSelection = srcclk;
 301              		.loc 1 236 0
 302 0012 4360     		str	r3, [r0, #4]
 303 0014 7047     		bx	lr
 304              	.L22:
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   }
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   else
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   {
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* Source clock is HSE. Need to get the prescaler value*/
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     PeriphClkInit->RTCClockSelection = srcclk | (READ_BIT(RCC->CR, RCC_CR_RTCPRE));
 305              		.loc 1 241 0
 306 0016 034A     		ldr	r2, .L24
 307 0018 1268     		ldr	r2, [r2]
 308 001a 02F0C042 		and	r2, r2, #1610612736
 309 001e 1343     		orrs	r3, r3, r2
 310              	.LVL31:
 311 0020 4360     		str	r3, [r0, #4]
 312 0022 7047     		bx	lr
 313              	.L25:
 314              		.align	2
 315              	.L24:
 316 0024 00380240 		.word	1073887232
 317              		.cfi_endproc
 318              	.LFE73:
 320              		.section	.text.HAL_RCCEx_GetPeriphCLKFreq,"ax",%progbits
 321              		.align	2
 322              		.global	HAL_RCCEx_GetPeriphCLKFreq
 323              		.thumb
 324              		.thumb_func
 326              	HAL_RCCEx_GetPeriphCLKFreq:
ARM GAS  /tmp/cc7LGOgG.s 			page 11


 327              	.LFB74:
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   }
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #if defined(LCD)
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   PeriphClkInit->LCDClockSelection = PeriphClkInit->RTCClockSelection;
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #endif /* LCD */
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** }
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief  Return the peripheral clock frequency
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @note   Return 0 if peripheral clock is unknown
 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @param  PeriphClk Peripheral clock identifier
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RTC      RTC peripheral clock
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_LCD      LCD peripheral clock (*)
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @note   (*) means that this peripheral is not present on all the devices
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @retval Frequency in Hz (0: means that no available frequency for the peripheral)
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** {
 328              		.loc 1 259 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333              	.LVL32:
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t frequency = 0;
 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t srcclk;
 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Check the parameters */
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClk));
 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   switch (PeriphClk)
 334              		.loc 1 266 0
 335 0000 0128     		cmp	r0, #1
 336 0002 33D1     		bne	.L40
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   {
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_RTC:
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #if defined(LCD)
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_LCD:
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #endif /* LCD */
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     {
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* Get the current RTC source */
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_RTC_SOURCE();
 337              		.loc 1 274 0
 338 0004 204B     		ldr	r3, .L42
 339 0006 5B6B     		ldr	r3, [r3, #52]
 340 0008 03F44033 		and	r3, r3, #196608
 341              	.LVL33:
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* Check if LSE is ready if RTC clock selection is LSE */
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       if (srcclk == RCC_RTCCLKSOURCE_LSE)
 342              		.loc 1 277 0
 343 000c B3F5803F 		cmp	r3, #65536
 344 0010 06D1     		bne	.L29
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       {
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         if (HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSERDY))
 345              		.loc 1 279 0
ARM GAS  /tmp/cc7LGOgG.s 			page 12


 346 0012 1D4B     		ldr	r3, .L42
 347              	.LVL34:
 348 0014 5B6B     		ldr	r3, [r3, #52]
 349 0016 13F4007F 		tst	r3, #512
 350 001a 29D1     		bne	.L35
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t srcclk;
 351              		.loc 1 260 0
 352 001c 0020     		movs	r0, #0
 353              	.LVL35:
 354 001e 7047     		bx	lr
 355              	.LVL36:
 356              	.L29:
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         {
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           frequency = LSE_VALUE;
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       }
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* Check if LSI is ready if RTC clock selection is LSI */
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       else if (srcclk == RCC_RTCCLKSOURCE_LSI)
 357              		.loc 1 285 0
 358 0020 B3F5003F 		cmp	r3, #131072
 359 0024 06D1     		bne	.L30
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       {
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         if (HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSIRDY))
 360              		.loc 1 287 0
 361 0026 184B     		ldr	r3, .L42
 362              	.LVL37:
 363 0028 5B6B     		ldr	r3, [r3, #52]
 364 002a 13F0020F 		tst	r3, #2
 365 002e 22D1     		bne	.L36
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t srcclk;
 366              		.loc 1 260 0
 367 0030 0020     		movs	r0, #0
 368              	.LVL38:
 369 0032 7047     		bx	lr
 370              	.LVL39:
 371              	.L30:
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         {
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           frequency = LSI_VALUE;
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       }
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       /* Check if HSE is ready and if RTC clock selection is HSE */
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       else if (srcclk == RCC_RTCCLKSOURCE_HSE_DIVX)
 372              		.loc 1 293 0
 373 0034 B3F5403F 		cmp	r3, #196608
 374 0038 20D1     		bne	.L37
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       {
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 375              		.loc 1 295 0
 376 003a 134B     		ldr	r3, .L42
 377              	.LVL40:
 378 003c 1B68     		ldr	r3, [r3]
 379 003e 13F4003F 		tst	r3, #131072
 380 0042 1DD0     		beq	.L38
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         {
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           /* Get the current HSE clock divider */
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           switch (__HAL_RCC_GET_RTC_HSE_PRESCALER())
 381              		.loc 1 298 0
ARM GAS  /tmp/cc7LGOgG.s 			page 13


 382 0044 104B     		ldr	r3, .L42
 383 0046 1B68     		ldr	r3, [r3]
 384 0048 03F0C043 		and	r3, r3, #1610612736
 385 004c B3F1804F 		cmp	r3, #1073741824
 386 0050 18D0     		beq	.L39
 387 0052 B3F1C04F 		cmp	r3, #1610612736
 388 0056 03D0     		beq	.L32
 389 0058 B3F1005F 		cmp	r3, #536870912
 390 005c 04D1     		bne	.L41
 391 005e 01E0     		b	.L33
 392              	.L32:
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           {
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             case RCC_RTC_HSE_DIV_16:  /* HSE DIV16 has been selected */
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             {
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               frequency = HSE_VALUE / 16U;
 393              		.loc 1 302 0
 394 0060 0A48     		ldr	r0, .L42+4
 395              	.LVL41:
 396 0062 7047     		bx	lr
 397              	.LVL42:
 398              	.L33:
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               break;
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             }
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             case RCC_RTC_HSE_DIV_8:   /* HSE DIV8 has been selected  */
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             {
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               frequency = HSE_VALUE / 8U;
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               break;
 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             }
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             case RCC_RTC_HSE_DIV_4:   /* HSE DIV4 has been selected  */
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             {
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               frequency = HSE_VALUE / 4U;
 399              		.loc 1 312 0
 400 0064 0A48     		ldr	r0, .L42+8
 401              	.LVL43:
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               break;
 402              		.loc 1 313 0
 403 0066 7047     		bx	lr
 404              	.LVL44:
 405              	.L41:
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             }
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             default:                  /* HSE DIV2 has been selected  */
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             {
 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               frequency = HSE_VALUE / 2U;
 406              		.loc 1 317 0
 407 0068 0A48     		ldr	r0, .L42+12
 408              	.LVL45:
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               break;
 409              		.loc 1 318 0
 410 006a 7047     		bx	lr
 411              	.LVL46:
 412              	.L40:
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t srcclk;
 413              		.loc 1 260 0
 414 006c 0020     		movs	r0, #0
 415              	.LVL47:
 416 006e 7047     		bx	lr
 417              	.LVL48:
ARM GAS  /tmp/cc7LGOgG.s 			page 14


 418              	.L35:
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 419              		.loc 1 281 0
 420 0070 4FF40040 		mov	r0, #32768
 421              	.LVL49:
 422 0074 7047     		bx	lr
 423              	.LVL50:
 424              	.L36:
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 425              		.loc 1 289 0
 426 0076 49F28800 		movw	r0, #37000
 427              	.LVL51:
 428 007a 7047     		bx	lr
 429              	.LVL52:
 430              	.L37:
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   uint32_t srcclk;
 431              		.loc 1 260 0
 432 007c 0020     		movs	r0, #0
 433              	.LVL53:
 434 007e 7047     		bx	lr
 435              	.LVL54:
 436              	.L38:
 437 0080 0020     		movs	r0, #0
 438              	.LVL55:
 439 0082 7047     		bx	lr
 440              	.LVL56:
 441              	.L39:
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****               break;
 442              		.loc 1 307 0
 443 0084 0448     		ldr	r0, .L42+16
 444              	.LVL57:
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****             }
 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****           }
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         }
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       }
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       else
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       {
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****         /* No clock source, frequency default init at 0 */
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       }
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****       break;
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     }
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   default:
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     break;
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   }
 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   return(frequency);
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** }
 445              		.loc 1 335 0
 446 0086 7047     		bx	lr
 447              	.L43:
 448              		.align	2
 449              	.L42:
 450 0088 00380240 		.word	1073887232
 451 008c 60E31600 		.word	1500000
 452 0090 808D5B00 		.word	6000000
 453 0094 001BB700 		.word	12000000
ARM GAS  /tmp/cc7LGOgG.s 			page 15


 454 0098 C0C62D00 		.word	3000000
 455              		.cfi_endproc
 456              	.LFE74:
 458              		.section	.text.HAL_RCCEx_EnableLSECSS,"ax",%progbits
 459              		.align	2
 460              		.global	HAL_RCCEx_EnableLSECSS
 461              		.thumb
 462              		.thumb_func
 464              	HAL_RCCEx_EnableLSECSS:
 465              	.LFB75:
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** #if defined(RCC_LSECSS_SUPPORT)
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief  Enables the LSE Clock Security System.
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @note   If a failure is detected on the external 32 kHz oscillator, the LSE clock is no longer 
 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         to the RTC but no hardware action is made to the registers.
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         In Standby mode a wakeup is generated. In other modes an interrupt can be sent to wakeu
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         the software (see Section 5.3.4: Clock interrupt register (RCC_CIR) on page 104).
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         The software MUST then disable the LSECSSON bit, stop the defective 32 kHz oscillator
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         (disabling LSEON), and can change the RTC clock source (no clock or LSI or HSE, with
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         RTCSEL), or take any required action to secure the application.
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @note   LSE CSS available only for high density and medium+ devices
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @retval None
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** void HAL_RCCEx_EnableLSECSS(void)
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** {
 466              		.loc 1 351 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *(__IO uint32_t *) CSR_LSECSSON_BB = (uint32_t)ENABLE;
 471              		.loc 1 352 0
 472 0000 0122     		movs	r2, #1
 473 0002 014B     		ldr	r3, .L45
 474 0004 1A60     		str	r2, [r3]
 475 0006 7047     		bx	lr
 476              	.L46:
 477              		.align	2
 478              	.L45:
 479 0008 AC064742 		.word	1111951020
 480              		.cfi_endproc
 481              	.LFE75:
 483              		.section	.text.HAL_RCCEx_DisableLSECSS,"ax",%progbits
 484              		.align	2
 485              		.global	HAL_RCCEx_DisableLSECSS
 486              		.thumb
 487              		.thumb_func
 489              	HAL_RCCEx_DisableLSECSS:
 490              	.LFB76:
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** }
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief  Disables the LSE Clock Security System.
 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @note   Once enabled this bit cannot be disabled, except after an LSE failure detection
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         (LSECSSD=1). In that case the software MUST disable the LSECSSON bit.
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *         Reset by power on reset and RTC software reset (RTCRST bit).
ARM GAS  /tmp/cc7LGOgG.s 			page 16


 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @note   LSE CSS available only for high density and medium+ devices
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @retval None
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** void HAL_RCCEx_DisableLSECSS(void)
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** {
 491              		.loc 1 364 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Disable LSE CSS */
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *(__IO uint32_t *) CSR_LSECSSON_BB = (uint32_t)DISABLE;
 496              		.loc 1 366 0
 497 0000 0022     		movs	r2, #0
 498 0002 044B     		ldr	r3, .L48
 499 0004 1A60     		str	r2, [r3]
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Disable LSE CSS IT */
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   __HAL_RCC_DISABLE_IT(RCC_IT_LSECSS);
 500              		.loc 1 369 0
 501 0006 044A     		ldr	r2, .L48+4
 502 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 503 000a 03F0BF03 		and	r3, r3, #191
 504 000e 1370     		strb	r3, [r2]
 505 0010 7047     		bx	lr
 506              	.L49:
 507 0012 00BF     		.align	2
 508              	.L48:
 509 0014 AC064742 		.word	1111951020
 510 0018 0D380240 		.word	1073887245
 511              		.cfi_endproc
 512              	.LFE76:
 514              		.section	.text.HAL_RCCEx_EnableLSECSS_IT,"ax",%progbits
 515              		.align	2
 516              		.global	HAL_RCCEx_EnableLSECSS_IT
 517              		.thumb
 518              		.thumb_func
 520              	HAL_RCCEx_EnableLSECSS_IT:
 521              	.LFB77:
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** }
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief  Enable the LSE Clock Security System IT & corresponding EXTI line.
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @note   LSE Clock Security System IT is mapped on RTC EXTI line 19
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @retval None
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** void HAL_RCCEx_EnableLSECSS_IT(void)
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** {
 522              		.loc 1 378 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Enable LSE CSS */
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   *(__IO uint32_t *) CSR_LSECSSON_BB = (uint32_t)ENABLE;
 527              		.loc 1 380 0
 528 0000 0122     		movs	r2, #1
ARM GAS  /tmp/cc7LGOgG.s 			page 17


 529 0002 084B     		ldr	r3, .L51
 530 0004 1A60     		str	r2, [r3]
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Enable LSE CSS IT */
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   __HAL_RCC_ENABLE_IT(RCC_IT_LSECSS);
 531              		.loc 1 383 0
 532 0006 084A     		ldr	r2, .L51+4
 533 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 534 000a 43F04003 		orr	r3, r3, #64
 535 000e 1370     		strb	r3, [r2]
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Enable IT on EXTI Line 19 */
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   __HAL_RCC_LSECSS_EXTI_ENABLE_IT();
 536              		.loc 1 386 0
 537 0010 064B     		ldr	r3, .L51+8
 538 0012 1A68     		ldr	r2, [r3]
 539 0014 42F40022 		orr	r2, r2, #524288
 540 0018 1A60     		str	r2, [r3]
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   __HAL_RCC_LSECSS_EXTI_ENABLE_RISING_EDGE();
 541              		.loc 1 387 0
 542 001a 9A68     		ldr	r2, [r3, #8]
 543 001c 42F40022 		orr	r2, r2, #524288
 544 0020 9A60     		str	r2, [r3, #8]
 545 0022 7047     		bx	lr
 546              	.L52:
 547              		.align	2
 548              	.L51:
 549 0024 AC064742 		.word	1111951020
 550 0028 0D380240 		.word	1073887245
 551 002c 00040140 		.word	1073808384
 552              		.cfi_endproc
 553              	.LFE77:
 555              		.section	.text.HAL_RCCEx_LSECSS_Callback,"ax",%progbits
 556              		.align	2
 557              		.weak	HAL_RCCEx_LSECSS_Callback
 558              		.thumb
 559              		.thumb_func
 561              	HAL_RCCEx_LSECSS_Callback:
 562              	.LFB79:
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** }
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief Handle the RCC LSE Clock Security System interrupt request.
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @retval None
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** void HAL_RCCEx_LSECSS_IRQHandler(void)
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** {
 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Check RCC LSE CSSF flag  */
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   if(__HAL_RCC_GET_IT(RCC_IT_LSECSS))
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   {
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* RCC LSE Clock Security System interrupt user callback */
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     HAL_RCCEx_LSECSS_Callback();
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     /* Clear RCC LSE CSS pending bit */
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_LSECSS);
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   }
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** }
ARM GAS  /tmp/cc7LGOgG.s 			page 18


 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** /**
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @brief  RCCEx LSE Clock Security System interrupt callback.
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   * @retval none
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   */
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_LSECSS_Callback(void)
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** {
 563              		.loc 1 412 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 568 0000 7047     		bx	lr
 569              		.cfi_endproc
 570              	.LFE79:
 572 0002 00BF     		.section	.text.HAL_RCCEx_LSECSS_IRQHandler,"ax",%progbits
 573              		.align	2
 574              		.global	HAL_RCCEx_LSECSS_IRQHandler
 575              		.thumb
 576              		.thumb_func
 578              	HAL_RCCEx_LSECSS_IRQHandler:
 579              	.LFB78:
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Check RCC LSE CSSF flag  */
 580              		.loc 1 395 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   /* Check RCC LSE CSSF flag  */
 584              		.loc 1 395 0
 585 0000 08B5     		push	{r3, lr}
 586              	.LCFI5:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 3, -8
 589              		.cfi_offset 14, -4
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   {
 590              		.loc 1 397 0
 591 0002 054B     		ldr	r3, .L57
 592 0004 DB68     		ldr	r3, [r3, #12]
 593 0006 13F0400F 		tst	r3, #64
 594 000a 04D0     		beq	.L54
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c **** 
 595              		.loc 1 400 0
 596 000c FFF7FEFF 		bl	HAL_RCCEx_LSECSS_Callback
 597              	.LVL58:
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_rcc_ex.c ****   }
 598              		.loc 1 403 0
 599 0010 4022     		movs	r2, #64
 600 0012 024B     		ldr	r3, .L57+4
 601 0014 1A70     		strb	r2, [r3]
 602              	.L54:
 603 0016 08BD     		pop	{r3, pc}
 604              	.L58:
 605              		.align	2
 606              	.L57:
 607 0018 00380240 		.word	1073887232
 608 001c 0E380240 		.word	1073887246
 609              		.cfi_endproc
ARM GAS  /tmp/cc7LGOgG.s 			page 19


 610              	.LFE78:
 612              		.text
 613              	.Letext0:
 614              		.file 2 "/usr/bin/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 615              		.file 3 "/usr/bin/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 616              		.file 4 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xba.h"
 617              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 618              		.file 6 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 619              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_rcc_ex.h"
 620              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 621              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
ARM GAS  /tmp/cc7LGOgG.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l1xx_hal_rcc_ex.c
     /tmp/cc7LGOgG.s:20     .text.HAL_RCCEx_PeriphCLKConfig:00000000 $t
     /tmp/cc7LGOgG.s:25     .text.HAL_RCCEx_PeriphCLKConfig:00000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/cc7LGOgG.s:270    .text.HAL_RCCEx_PeriphCLKConfig:0000012c $d
     /tmp/cc7LGOgG.s:277    .text.HAL_RCCEx_GetPeriphCLKConfig:00000000 $t
     /tmp/cc7LGOgG.s:282    .text.HAL_RCCEx_GetPeriphCLKConfig:00000000 HAL_RCCEx_GetPeriphCLKConfig
     /tmp/cc7LGOgG.s:316    .text.HAL_RCCEx_GetPeriphCLKConfig:00000024 $d
     /tmp/cc7LGOgG.s:321    .text.HAL_RCCEx_GetPeriphCLKFreq:00000000 $t
     /tmp/cc7LGOgG.s:326    .text.HAL_RCCEx_GetPeriphCLKFreq:00000000 HAL_RCCEx_GetPeriphCLKFreq
     /tmp/cc7LGOgG.s:450    .text.HAL_RCCEx_GetPeriphCLKFreq:00000088 $d
     /tmp/cc7LGOgG.s:459    .text.HAL_RCCEx_EnableLSECSS:00000000 $t
     /tmp/cc7LGOgG.s:464    .text.HAL_RCCEx_EnableLSECSS:00000000 HAL_RCCEx_EnableLSECSS
     /tmp/cc7LGOgG.s:479    .text.HAL_RCCEx_EnableLSECSS:00000008 $d
     /tmp/cc7LGOgG.s:484    .text.HAL_RCCEx_DisableLSECSS:00000000 $t
     /tmp/cc7LGOgG.s:489    .text.HAL_RCCEx_DisableLSECSS:00000000 HAL_RCCEx_DisableLSECSS
     /tmp/cc7LGOgG.s:509    .text.HAL_RCCEx_DisableLSECSS:00000014 $d
     /tmp/cc7LGOgG.s:515    .text.HAL_RCCEx_EnableLSECSS_IT:00000000 $t
     /tmp/cc7LGOgG.s:520    .text.HAL_RCCEx_EnableLSECSS_IT:00000000 HAL_RCCEx_EnableLSECSS_IT
     /tmp/cc7LGOgG.s:549    .text.HAL_RCCEx_EnableLSECSS_IT:00000024 $d
     /tmp/cc7LGOgG.s:556    .text.HAL_RCCEx_LSECSS_Callback:00000000 $t
     /tmp/cc7LGOgG.s:561    .text.HAL_RCCEx_LSECSS_Callback:00000000 HAL_RCCEx_LSECSS_Callback
     /tmp/cc7LGOgG.s:573    .text.HAL_RCCEx_LSECSS_IRQHandler:00000000 $t
     /tmp/cc7LGOgG.s:578    .text.HAL_RCCEx_LSECSS_IRQHandler:00000000 HAL_RCCEx_LSECSS_IRQHandler
     /tmp/cc7LGOgG.s:607    .text.HAL_RCCEx_LSECSS_IRQHandler:00000018 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
