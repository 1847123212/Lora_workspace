{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","structure":"mind_right","leftChildren":[{"id":"93cda008ff72","title":"环境：elementary os 5.0（基于Ubuntu18.04） + STM32cubeMX + （VSCode + Makefile + gcc-arm-none-eabi-5_4-2016q3） + HAL库","parent":"root","children":[]}],"title":"LORA驱动移植（STM32L151+SX1278）","root":true,"theme":"paper","children":[{"id":"1aaac7d77530","title":"lora技术基本介绍","children":[{"id":"5a8d26967958","title":"发明者：好莱坞女明星、发明家 Hedy Lamarr，发明了扩频通信技术","parent":"1aaac7d77530","children":[]},{"id":"c92ffef0a3f3","title":"LORA基本原理","parent":"1aaac7d77530","children":[{"id":"0094baf0e5c0","title":"香农公式：C为信道容量（b/s）（信道能无错误传送的最大信息率，可以理解为体现信号质量的指标）<br>B为信道带宽（Hz）S为信号功率（W）N为噪声功率（W）。","children":[],"parent":"c92ffef0a3f3","image":{"w":147,"h":37,"url":"http://cdn.processon.com/5dc4be37e4b0fbd191806377?e=1573178440&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:y25xhbD6qZJwPNs0gjjmwHY7tO4="}},{"id":"d6efa84451ec","title":"由于多路径衰退和噪声的原因，随着传输距离的增加，信噪比会相应减小","children":[],"parent":"c92ffef0a3f3"},{"id":"f2a5e3d48bd2","title":"LORA可以远距离传输的原因：<br>1、LoRa用了扩频技术，扩频技术就是以带宽换功率、以带宽换信噪比。<br>在通信链路中，带宽、信噪比是互相替代的关系，同样通信容量，提高信噪比可以少用带宽，提高带宽可以降低对信噪比要求。<br>实际中，所谓传得不远是因为发射出来的有用功率随距离衰减而在终端侧达不到解调的信噪比要求，现在扩频降低了信噪比要求，自然允许传播距离更长一些、信号强度衰减更多一些。<br>2、LoRa工作的频带频率不高，低频段的电磁波在空气中衰减也小一些。<br>（参考：https://www.zhihu.com/question/279412342）","children":[],"parent":"c92ffef0a3f3"},{"id":"d5f9de57aa6c","title":"扩频技术是什么？？带宽又是什么？？？信号带宽？信道带宽？？？？？？？？？？？？？<br>https://blog.csdn.net/u014522508/article/details/41778349<br>","children":[],"parent":"c92ffef0a3f3"}]},{"id":"6cc816f422f6","title":"LORA基本参数：<br>","children":[{"id":"25dcae5404ed","title":"信号带宽（BW）：lora的带宽为双边带带宽（全信道带宽）<br>","children":[],"parent":"6cc816f422f6"},{"id":"04a020544f62","title":"扩频因子（SF）","children":[],"parent":"6cc816f422f6"},{"id":"dc076fc4e74a","title":"编码率（CR）：增加冗余比，调高容错率","children":[],"parent":"6cc816f422f6"}],"parent":"1aaac7d77530"},{"id":"e48319584e02","title":"sx1278：SEMTECH公司的产品<br>使用的板子：intoyun-lora-Ant","parent":"1aaac7d77530","children":[]}],"parent":"root","collapsed":false},{"id":"fa6ddb5add44","title":"移植步骤一","children":[{"id":"0b3967433342","title":"板子IO映射表的制作","parent":"fa6ddb5add44","children":[{"id":"690caa2bf5dc","title":"IO映射表就是包括板子中：MCU引脚编号，MCU引脚名称，板子外面显示的名称，功能及配置说明的一个表格，用来说明各个引脚的功能，方便下一步建立工程","parent":"0b3967433342","children":[]},{"id":"00ea7597951b","title":"一般通过查看板子厂家提供的电路图来制作","parent":"0b3967433342","children":[]},{"id":"1e1fa8e534ac","title":"技巧：全程围绕MCU来，从MCU的引脚找起！！不明白的引脚查清楚！！","children":[],"parent":"0b3967433342"},{"id":"3f90c124c452","title":"SX1278相关的引脚说明：<br>DIO0~5：用来获取Sx1278的状态（配置为input）<br>SPI接口：MOSI、MISO、SCK、NSS，用来数据传输（NSS直接output，1；其他的正常配置为SPI接口）<br>RST：复位，0有效（配置为output）<br>","parent":"0b3967433342","children":[]}]}],"parent":"root","collapsed":true},{"id":"1a30e3bad591","title":"移植步骤二","parent":"root","children":[{"id":"2d22bfa598e3","title":"使用STM32cubeMX建立基本工程","children":[{"id":"8bacb2b2d781","title":"1、根据IO映射表配置引脚（图形化操作）","children":[{"id":"7dfbadf175a6","title":"按部就班","children":[],"parent":"8bacb2b2d781"}],"parent":"2d22bfa598e3"},{"id":"9d23607e3bb8","title":"2、配置时钟","children":[{"id":"cf0391624939","title":"简单选择了内部高速时钟","children":[],"parent":"9d23607e3bb8"}],"parent":"2d22bfa598e3"},{"id":"09aa3579843a","title":"3、外设配置","parent":"2d22bfa598e3","children":[{"id":"85d2bb484e78","title":"主要是串口的波特率设置（串口配置为异步：Asynchronous）、SPI全双工主机模式、GPIO引脚配置--配置默认输出，上下拉方式","children":[],"parent":"09aa3579843a"}]},{"id":"1af39dfe91ff","title":"4、导出makefile工程","children":[{"id":"0f76d18d572f","title":"记得勾选生成单独的.c.h文件","children":[],"parent":"1af39dfe91ff"}],"parent":"2d22bfa598e3"},{"id":"af8f9c5e47eb","title":"5、添加串口重定向函数：（用于测试打印信息）<br>&nbsp;int _write (int fd, char *pBuffer, int size)  <br>{  <br>    for (int i = 0; i &lt; size; i++)  <br>    {  <br>        while((USART1-&gt;SR&amp;0X40)==0);//等待上一次串口数据发送完成  <br>        USART1-&gt;DR = (uint8_t) pBuffer[i];       //写DR,串口1将发送数据<br>    }  <br>    return size;  <br>}<br>【由于使用GNU编译，所以和MDK的fputc不同】","children":[],"parent":"2d22bfa598e3"}],"parent":"1a30e3bad591"}],"collapsed":true},{"id":"7749746a0e7a","title":"移植步骤三","parent":"root","children":[{"id":"86f724a2a4ba","title":"官方驱动代码更改","parent":"7749746a0e7a","children":[{"id":"315d93d628e8","title":"1、需要的驱动文件：（在LoRa官方固件/03官方固件/sx12xxdrivers-v2.1.0/src/目录下）<br>这些也就是需要在makefile中添加的头文件【注意路径问题】<br>","parent":"86f724a2a4ba","children":[{"id":"84badaed949c","title":"platform/sx12xxEiger/fifo.c \\<br>platform/sx12xxEiger/sx1276-Hal.c \\<br>platform/sx12xxEiger/sx12xxEiger.c \\<br>radio/radio.c \\<br>radio/sx1276-LoRa.c \\<br>radio/sx1276-LoRaMisc.c \\<br>radio/sx1276.c \\<br>radio/sx1276-Fsk.c \\<br>radio/sx1276-FskMisc.c","children":[],"parent":"315d93d628e8"},{"id":"30f0d50f5aae","title":"-Isx1278/platform \\<br>-Isx1278/platform/sx12xxEiger \\<br>-Isx1278/radio","parent":"315d93d628e8","children":[]},{"id":"a5345956902e","title":"因为1276和1278的参数基本相同，所以官方只提供了1276的驱动文件","children":[],"parent":"315d93d628e8"}]},{"id":"35482b8712b1","title":"2、在main.c文件中添加：","parent":"86f724a2a4ba","children":[{"id":"d4ce2c4dcf6d","title":"#include \"platform.h\"<br>#include \"radio.h\"<br>#include \"sx1276-Hal.h\"<br>#include \"sx1276-LoRa.h\"<br>#include \"sx1276-LoRaMisc.h\"","parent":"35482b8712b1","children":[]}],"collapsed":false},{"id":"14bbe5849fbe","title":"3、make编译","parent":"86f724a2a4ba","children":[{"id":"2b067fa7f1e9","title":"根据生成的错误主要有几点需要更改的地方：<br>【因为官方给的驱动是标准库的，而现在的工程是HAL库的，所有一些函数需要更改】","children":[{"id":"e476157bcb2e","title":"platform.h","parent":"2b067fa7f1e9","children":[{"id":"88318979fdf5","title":"1、使能这行代码#define PLATFORM   SX12xxEiger","parent":"e476157bcb2e","children":[]}]},{"id":"4eba97e75a94","title":"sx1276-Hal.c","children":[{"id":"534572abc95d","title":"1、修改相应的功能引脚为自己板子的引脚：RESET、DIO0～2、NSS（NSS配置为sx1278的片选线，就是之前直接输出置1的那个）<br>（注意：标准库和HAL库的GPIO引脚常量定义的不同个：HAL的是：GPIO_PIN_9 标准库的是：GPIO_Pin_9，需要更改一下）<br>","children":[],"parent":"4eba97e75a94"},{"id":"2210d1c074bc","title":"2、注释掉：","children":[{"id":"1e680a862d3b","title":"①DIO3~5、RXTX（不使用这些引脚，cube中配置的时候也可以不配置）","children":[],"parent":"2210d1c074bc"},{"id":"372c5921cd75","title":"②SX1276InitIo函数体所有内容<br>","children":[],"parent":"2210d1c074bc"},{"id":"e25475cc4642","title":"③SX1276SetReset函数体所有内容（这些函数中的初始化cube都在gpio.c中初始化了）","children":[],"parent":"2210d1c074bc"},{"id":"faa6ca59efc7","title":"④SX1276WriteRxTx函数体所有内容（因为不适用RXTX，所以注释掉，否则会牵涉到I2C通信，标准库的，目前使用的是HAL库，整体修改I2C驱动比较麻烦）","children":[],"parent":"2210d1c074bc"}],"parent":"4eba97e75a94"},{"id":"4069e173a5b6","title":"3、所有的读写引脚函数改为：HAL_GPIO_ReadPin和HAL_GPIO_WritePin<br>","children":[],"parent":"4eba97e75a94"},{"id":"fe0fdfec906d","title":"4、SX1276ReadDio3~5的函数返回值改为1<br>","children":[],"parent":"4eba97e75a94"}],"parent":"2b067fa7f1e9"},{"id":"0d5d2c3f8a91","title":"sx1276-Hal.h","parent":"2b067fa7f1e9","children":[{"id":"234045386260","title":"1、39行改为：#define GET_TICK_COUNT( )&nbsp; &nbsp;( HAL_GetTick() )//使用HAL库的获取时钟的函数","parent":"0d5d2c3f8a91","children":[]},{"id":"2dbc0c3321f7","title":"2、删除函数声明前面的inline（在GNU中的内联函数中声明时不加关键字inline，之后实现的的时候才添加）","parent":"0d5d2c3f8a91","children":[]}]},{"id":"612c5a10e20e","title":"sx12xxEiger.c","children":[{"id":"c5711acc9536","title":"1、注释掉所有与USB相关的代码","children":[],"parent":"612c5a10e20e"},{"id":"038a94322591","title":"2、注释掉BoardInit函数体全部内容","children":[],"parent":"612c5a10e20e"}],"parent":"2b067fa7f1e9"},{"id":"076637085b12","title":"sx1276-LoRa.c<br>","parent":"2b067fa7f1e9","children":[{"id":"b6ba6fc6e7ee","title":"注释掉SX1276LoRaProcess下RFLR_STATE_RX_RUNNING和RFLR_STATE_TX_RUNNING中的if( DIO2 == 1 )所有内容<br>","parent":"076637085b12","children":[]}]},{"id":"59c890485823","title":"在spi.c文件中添加函数：（是自己定义的spi.c不是官方库的）<br>","children":[{"id":"68459b8da122","title":"uint8_t SpiInOut( uint8_t outData )<br>{<br>\tuint8_t pRxData = 0;<br>\tif(HAL_SPI_TransmitReceive(&amp;hspi1, &amp;outData, &amp;pRxData, 1, 0xffff) != HAL_OK)<br>\t\treturn ERROR;<br>\telse<br>\t\treturn pRxData;<br>}<br>【因为没有使用官方给的，所以要自己实现一下（官方实现用的全是标准库，更改复杂）】","children":[],"parent":"59c890485823"}],"parent":"2b067fa7f1e9"},{"id":"515cff1626ee","title":"将所有包含MCU库头文件的地方#else中改为：&nbsp;    #include \"stm32l1xx.h\"（我的MCU是L1系列的）<br>【编译之后这些地方会报错】","parent":"2b067fa7f1e9","children":[]},{"id":"806644cdf3c0","title":"有时可能需要删除官方库里面的spi.c文件（我的以前就没有出问题，写总结的时候出了问题，删了即可）","children":[],"parent":"2b067fa7f1e9"}],"parent":"14bbe5849fbe"}],"collapsed":false},{"id":"c2dacf0f7022","title":"4、LORA自检测试","parent":"86f724a2a4ba","children":[{"id":"2e5c936da9cb","title":"在main.c中while之前添加：","parent":"c2dacf0f7022","children":[{"id":"69761895f738","title":"SX1276Read( REG_LR_VERSION, &amp;RegVersion );<br>\tif(RegVersion != 0x12)<br>\t{<br>\t\tprintf(\"get RegVersion error, RegVersion = %#x\\r\\n\", RegVersion);<br>\t}<br>\telse<br>\t{<br>\t\tprintf(\"get RegVersion success, RegVersion = %#x\\r\\n\", RegVersion);<br>\t}<br>","parent":"2e5c936da9cb","children":[]}]},{"id":"cb1df368fea5","title":"下载方法：","parent":"c2dacf0f7022","children":[{"id":"18c0574e41d2","title":"在makefile文件中添加：<br>#---------------------------- write to mcu -----------------------------#<br>flash:<br>\tst-flash  write  build/$(TARGET).bin  0x08000000","children":[],"parent":"cb1df368fea5"},{"id":"4a500083951d","title":"在命令行运行 make flash即可下载（可能需要复位MCU才能成功下载）","children":[],"parent":"cb1df368fea5"}]},{"id":"b1d4962094f1","title":"下载上电即可看到相应的打印结果","children":[{"id":"f9aba65479ec","title":"推荐串口调试助手：putty，可以直接apt下载安装","children":[],"parent":"b1d4962094f1"}],"parent":"c2dacf0f7022"}]}],"collapsed":false}],"collapsed":true},{"id":"7c85bdd14e46","title":"移植步骤四","parent":"root","children":[{"id":"ffde11aca2eb","title":"PINGPANG实验测试","parent":"7c85bdd14e46","children":[{"id":"a858384223c8","title":"LORA操作主要使用的函数组都在tRadioDriver结构体中","children":[],"parent":"ffde11aca2eb"},{"id":"f61825c87cb8","title":"分别添加master_task（）和slave_task（）函数<br>","parent":"ffde11aca2eb","children":[]},{"id":"07fb9b5947a4","title":"修改LORA配置","parent":"ffde11aca2eb","children":[{"id":"aa7500e67a7e","title":"sx1276-LoRa.c","parent":"07fb9b5947a4","children":[{"id":"d4b41702df3e","title":"102行：改为470000000&nbsp; //1278频率范围：137~525M（见数据手册p10）<br>","children":[],"parent":"aa7500e67a7e"},{"id":"be024e0174cc","title":"110行：改为1//连续接受","children":[],"parent":"aa7500e67a7e"},{"id":"74dda6f1c57f","title":"115行：改为4//可改可不改","parent":"aa7500e67a7e","children":[]}]}],"collapsed":false},{"id":"08e88f610102","title":"操作示例：（具体可以参考工程代码）","parent":"ffde11aca2eb","children":[{"id":"4ccf343b279d","title":"void master_task()<br>{<br>\tswitch(Radio-&gt;Process())<br>\t{<br>\t\tcase RF_RX_DONE:<br>\t\t\tled_debug();<br>\t\t\tRadio-&gt;GetRxPacket(buffer_rev, &amp;buffer_size);<br>\t\t\tprintf(\"master_task: -%ld-rev  = -%s-\\r\\n\", Master_Rx_num+1,  buffer_rev);<br>\t\t\tif(strncmp((const char *)buffer_rev, \"PONG\", strlen((const char *)buffer_rev)) == 0)<br>\t\t\t{<br>\t\t\t\tMaster_Rx_num++;<br>\t\t\t\tRadio-&gt;SetTxPacket(ping_msg, strlen((const char *)ping_msg));\t<br>\t\t\t\tled_send();<br>\t\t\t\tHAL_Delay(500);<br>\t\t\t}<br>\t\t\tbreak;<br>\t\tcase RF_TX_DONE:<br>\t\t\t\tRadio-&gt;StartRx();<br>\t\t\t\tled_rev();<br>\t\t\t\tMaster_Tx_num++;<br>\t\t\t\tHAL_Delay(500);<br>\t\t\tbreak;<br>\t\tdefault:<br>\t\t\tbreak;<br>\t}<br>}","parent":"08e88f610102","children":[]}]}]}],"collapsed":true},{"id":"404ab86c240f","title":"现在按照自己写的教程，一步一步来走，看看能否成功？？？？","free":true,"parent":"root","children":[],"pos":{"y":10831.009637741816,"x":12285.071963355655}},{"id":"c48a09630389","title":"目前还存在的问题","children":[{"id":"77386fc1afa5","title":"PINGPONG通信过程中，会出现中断现象：突然停止了通信过程","children":[],"parent":"c48a09630389"}],"parent":"root","collapsed":true}]}},"meta":{"id":"5dc3a80ae4b002a645de17df","member":"5b6daacae4b0555b39ddf6da","exportTime":"2019-11-09 12:52:23","diagramInfo":{"category":"mind_free","title":"LORA驱动移植（STM32L151+SX1278）","created":"2019-11-07 13:13:46","creator":"5b6daacae4b0555b39ddf6da","modified":"2019-11-09 12:51:09"},"type":"ProcessOn Schema File","version":"1.0"}}